<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>创建统一的依赖管理</title>
      <link href="/2019/11/25/060.Spring%20Cloud%20Alibaba-Dubbo-%E5%88%9B%E5%BB%BA%E7%BB%9F%E4%B8%80%E7%9A%84%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/25/060.Spring%20Cloud%20Alibaba-Dubbo-%E5%88%9B%E5%BB%BA%E7%BB%9F%E4%B8%80%E7%9A%84%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="创建统一的依赖管理"><a href="#创建统一的依赖管理" class="headerlink" title="创建统一的依赖管理"></a>创建统一的依赖管理</h1><h2 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dubbo.version</span><span class="token punctuation">></span></span>2.7.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dubbo.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dubbo-actuator.version</span><span class="token punctuation">></span></span>2.7.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dubbo-actuator.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">></span></span>Greenwich.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud-alibaba.verion</span><span class="token punctuation">></span></span>0.9.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud-alibaba.verion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>alibaba-spring-context-support.version</span><span class="token punctuation">></span></span>1.0.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>alibaba-spring-context-support.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring-cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring-cloud-alibaba.verion}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${dubbo.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>log4j<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-spring-boot-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${dubbo-actuator.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${alibaba-spring-context-support.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo 外部化配置</title>
      <link href="/2019/11/25/064.Spring%20Cloud%20Alibaba-Dubbo-%E5%A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/11/25/064.Spring%20Cloud%20Alibaba-Dubbo-%E5%A4%96%E9%83%A8%E5%8C%96%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Dubbo-外部化配置"><a href="#Dubbo-外部化配置" class="headerlink" title="Dubbo 外部化配置"></a>Dubbo 外部化配置</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于我们已经使用了 Nacos Server 作为我们的注册中心，所以此处依然使用 Nacos Config 实现 Dubbo 的外部化配置</p><h2 id="接入配置中心"><a href="#接入配置中心" class="headerlink" title="接入配置中心"></a>接入配置中心</h2><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><p>我们以 <code>dubbo-consumer</code> 项目为例，修改 <code>pom.xml</code> ，引入 <strong>Nacos Config Starter</strong></p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p>完成上述两步后，应用会从 Nacos Config 中获取相应的配置，并添加在 Spring Environment 的 PropertySources 中。这里我们使用 <code>@Value</code> 注解来将对应的配置注入到 <code>EchoController</code> 的 <code>username</code>字段，并添加 <code>@RefreshScope</code> 打开动态刷新功能</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>api<span class="token punctuation">.</span>EchoService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Reference<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Value<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>context<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RefreshScope<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token annotation punctuation">@RefreshScope</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EchoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>version <span class="token operator">=</span> <span class="token string">"1.0.0"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> EchoService echoService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${user.name}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/echo/{string}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> echoService<span class="token punctuation">.</span><span class="token function">echo</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">" "</span> <span class="token operator">+</span> username<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用控制台发布配置"><a href="#使用控制台发布配置" class="headerlink" title="使用控制台发布配置"></a>使用控制台发布配置</h3><blockquote><p><strong>注意：</strong> Data ID 的默认扩展名为 <code>.properties</code> ，希望使用 YAML 配置，此处必须指明是 <code>.yaml</code></p></blockquote><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> dubbo<span class="token punctuation">-</span>consumer  <span class="token key atrule">main</span><span class="token punctuation">:</span>    <span class="token key atrule">allow-bean-definition-overriding</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">dubbo</span><span class="token punctuation">:</span>  <span class="token key atrule">scan</span><span class="token punctuation">:</span>    <span class="token key atrule">base-packages</span><span class="token punctuation">:</span> com.funtl.apache.dubbo.consumer.controller  <span class="token key atrule">protocol</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> dubbo    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">-1</span>    <span class="token key atrule">serialization</span><span class="token punctuation">:</span> kryo  <span class="token key atrule">registry</span><span class="token punctuation">:</span>    <span class="token key atrule">address</span><span class="token punctuation">:</span> nacos<span class="token punctuation">:</span>//192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token key atrule">endpoints</span><span class="token punctuation">:</span>  <span class="token key atrule">dubbo</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token key atrule">health</span><span class="token punctuation">:</span>    <span class="token key atrule">dubbo</span><span class="token punctuation">:</span>      <span class="token key atrule">status</span><span class="token punctuation">:</span>        <span class="token key atrule">defaults</span><span class="token punctuation">:</span> memory        <span class="token key atrule">extras</span><span class="token punctuation">:</span> threadpool  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span class="token key atrule">user</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"唯我成幸"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改客户端配置"><a href="#修改客户端配置" class="headerlink" title="修改客户端配置"></a>修改客户端配置</h3><p>创建名为 <code>bootstrap.properties</code> 的配置文件并删除之前创建的 <code>application.yml</code> 配置文件</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">dubbo-consumer-config</span><span class="token attr-name">spring.cloud.nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token attr-value">192.168.141.132:8848</span><span class="token attr-name">spring.cloud.nacos.config.file-extension</span><span class="token punctuation">=</span><span class="token attr-value">yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过浏览器访问 <a href="http://localhost:8080/echo/hi" target="_blank" rel="noopener">http://localhost:8080/echo/hi</a> ，浏览器输出如下</p><pre><code>Echo Hello Dubbo hi i am from port: -1 唯我成幸</code></pre><h3 id="动态刷新配置"><a href="#动态刷新配置" class="headerlink" title="动态刷新配置"></a>动态刷新配置</h3><p>在 Nacos Server 控制台修改配置文件，将 <code>user.name</code> 属性修改为 <code>桐须真冬</code>，此时观察控制台日志，你会发现我们已经成功刷新了配置</p><p><img src="/dubbo/Lusifer_20190704040734.png" alt></p><h3 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><p>通过浏览器访问 <a href="http://localhost:8080/echo/hi" target="_blank" rel="noopener">http://localhost:8080/echo/hi</a> ，浏览器输出如下</p><pre><code>Echo Hello Dubbo hi i am from port: -1 桐须真冬</code></pre><blockquote><p><strong>提示：</strong> 你可以使用 <code>spring.cloud.nacos.config.refresh.enabled=false</code> 来关闭动态刷新</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo 服务注册与发现</title>
      <link href="/2019/11/25/061.Spring%20Cloud%20Alibaba-Dubbo-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
      <url>/2019/11/25/061.Spring%20Cloud%20Alibaba-Dubbo-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Dubbo-服务注册与发现"><a href="#Dubbo-服务注册与发现" class="headerlink" title="Dubbo 服务注册与发现"></a>Dubbo 服务注册与发现</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>由于我们已经有了 Nacos 注册中心，Sentinel 熔断限流控制中心，所以我们不再使用 Zookeeper 和 Dubbo Admin 来管理我们的 Dubbo 应用程序，Dubbo 仅当作我们微服务中的 RPC 通信框架，真正实现对内 RPC，对外 REST</p><h2 id="创建服务提供者"><a href="#创建服务提供者" class="headerlink" title="创建服务提供者"></a>创建服务提供者</h2><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><p>创建一个名为 <code>hello-apache-dubbo-provider</code> 的服务提供者项目，<code>pom.xml</code> 配置如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2018-Now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider-service<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建服务提供者接口模块"><a href="#创建服务提供者接口模块" class="headerlink" title="创建服务提供者接口模块"></a>创建服务提供者接口模块</h3><h4 id="POM-1"><a href="#POM-1" class="headerlink" title="POM"></a>POM</h4><p>创建一个名为 <code>hello-apache-dubbo-provider-api</code> 的模块（该模块只负责定义接口），<code>pom.xml</code> 配置如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2018-Now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="定义接口"><a href="#定义接口" class="headerlink" title="定义接口"></a>定义接口</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>api<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EchoService</span> <span class="token punctuation">{</span>    String <span class="token function">echo</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建服务提供者接口实现"><a href="#创建服务提供者接口实现" class="headerlink" title="创建服务提供者接口实现"></a>创建服务提供者接口实现</h3><h4 id="POM-2"><a href="#POM-2" class="headerlink" title="POM"></a>POM</h4><p>创建一个名为 <code>hello-apache-dubbo-provider-service</code> 的模块，<code>pom.xml</code> 配置如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider-service<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2018-Now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot End --></span>        <span class="token comment" spellcheck="true">&lt;!-- Apache Dubbo Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-registry-nacos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.nacos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>nacos-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Apache Dubbo End --></span>        <span class="token comment" spellcheck="true">&lt;!-- Projects Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${project.parent.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Projects End --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.funtl.apache.dubbo.provider.ProviderApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h4><p>主要增加了 Dubbo 包扫描路径和 Nacos Server 配置</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> dubbo<span class="token punctuation">-</span>provider  <span class="token key atrule">main</span><span class="token punctuation">:</span>    <span class="token key atrule">allow-bean-definition-overriding</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">dubbo</span><span class="token punctuation">:</span>  <span class="token key atrule">scan</span><span class="token punctuation">:</span>    <span class="token key atrule">base-packages</span><span class="token punctuation">:</span> com.funtl.apache.dubbo.provider.service  <span class="token key atrule">protocol</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> dubbo    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">-1</span>  <span class="token key atrule">registry</span><span class="token punctuation">:</span>    <span class="token key atrule">address</span><span class="token punctuation">:</span> nacos<span class="token punctuation">:</span>//192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h4><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProviderApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ProviderApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h4><p>通过 <code>org.apache.dubbo</code> 包下的 <code>@Service</code> 注解将服务暴露出去</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>api<span class="token punctuation">.</span>EchoService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span>version <span class="token operator">=</span> <span class="token string">"1.0.0"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EchoServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">EchoService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Echo Hello Dubbo "</span> <span class="token operator">+</span> string<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h4><p>通过浏览器访问 <a href="http://192.168.141.132:8848/nacos" target="_blank" rel="noopener">http://192.168.141.132:8848/nacos</a> Nacos Server 网址</p><p><img src="/dubbo/Lusifer_20190704020855.png" alt></p><p>你会发现一个服务已经注册在服务中了，服务名为 <code>providers:com.funtl.apache.dubbo.provider.api.EchoService:1.0.0:</code></p><h2 id="创建服务消费者"><a href="#创建服务消费者" class="headerlink" title="创建服务消费者"></a>创建服务消费者</h2><h3 id="POM-3"><a href="#POM-3" class="headerlink" title="POM"></a>POM</h3><p>创建一个名为 <code>hello-apache-dubbo-consumer</code> 的服务消费者项目，<code>pom.xml</code> 配置如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-consumer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2018-Now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot End --></span>        <span class="token comment" spellcheck="true">&lt;!-- Apache Dubbo Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-spring-boot-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-registry-nacos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.nacos<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>nacos-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.spring<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-context-support<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Apache Dubbo End --></span>        <span class="token comment" spellcheck="true">&lt;!-- Projects Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-provider-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${project.parent.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Projects End --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.funtl.apache.dubbo.consumer.ConsumerApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml-1"><a href="#application-yml-1" class="headerlink" title="application.yml"></a>application.yml</h3><p>主要增加了 Dubbo 包扫描路径、健康检查以及 Nacos Server 配置</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> dubbo<span class="token punctuation">-</span>consumer  <span class="token key atrule">main</span><span class="token punctuation">:</span>    <span class="token key atrule">allow-bean-definition-overriding</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">dubbo</span><span class="token punctuation">:</span>  <span class="token key atrule">scan</span><span class="token punctuation">:</span>    <span class="token key atrule">base-packages</span><span class="token punctuation">:</span> com.funtl.apache.dubbo.consumer.controller  <span class="token key atrule">protocol</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> dubbo    <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">-1</span>  <span class="token key atrule">registry</span><span class="token punctuation">:</span>    <span class="token key atrule">address</span><span class="token punctuation">:</span> nacos<span class="token punctuation">:</span>//192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token key atrule">endpoints</span><span class="token punctuation">:</span>  <span class="token key atrule">dubbo</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token key atrule">health</span><span class="token punctuation">:</span>    <span class="token key atrule">dubbo</span><span class="token punctuation">:</span>      <span class="token key atrule">status</span><span class="token punctuation">:</span>        <span class="token key atrule">defaults</span><span class="token punctuation">:</span> memory        <span class="token key atrule">extras</span><span class="token punctuation">:</span> threadpool  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Application-1"><a href="#Application-1" class="headerlink" title="Application"></a>Application</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>consumer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ConsumerApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p>通过 <code>org.apache.dubbo</code> 包下的 <code>@Reference</code> 注解像调用本地服务一样调用远程服务，轻松实现透明的远程过程调用</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>api<span class="token punctuation">.</span>EchoService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Reference<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EchoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Reference</span><span class="token punctuation">(</span>version <span class="token operator">=</span> <span class="token string">"1.0.0"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> EchoService echoService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/echo/{string}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> echoService<span class="token punctuation">.</span><span class="token function">echo</span><span class="token punctuation">(</span>string<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证是否成功-1"><a href="#验证是否成功-1" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><p>通过浏览器访问 <a href="http://192.168.141.132:8848/nacos" target="_blank" rel="noopener">http://192.168.141.132:8848/nacos</a> Nacos Server 网址</p><p><img src="/dubbo/Lusifer_20190704022128.png" alt></p><p>你会发现一个服务已经注册在服务中了，服务名为 <code>consumers:com.funtl.apache.dubbo.provider.api.EchoService:1.0.0:</code>，通过浏览器访问 <a href="http://localhost:8080/echo/hi" target="_blank" rel="noopener">http://localhost:8080/echo/hi</a></p><pre><code>Echo Hello Dubbo hi</code></pre><h3 id="服务端点检查"><a href="#服务端点检查" class="headerlink" title="服务端点检查"></a>服务端点检查</h3><p>通过浏览器访问 <a href="http://localhost:8080/actuator/health" target="_blank" rel="noopener">http://localhost:8080/actuator/health</a></p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"UP"</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo 负载均衡</title>
      <link href="/2019/11/25/063.Spring%20Cloud%20Alibaba-Dubbo-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/"/>
      <url>/2019/11/25/063.Spring%20Cloud%20Alibaba-Dubbo-%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="Dubbo-负载均衡"><a href="#Dubbo-负载均衡" class="headerlink" title="Dubbo 负载均衡"></a>Dubbo 负载均衡</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在集群负载均衡时，Dubbo 提供了多种均衡策略，缺省为 <code>random</code> 随机调用。</p><h2 id="负载均衡策略"><a href="#负载均衡策略" class="headerlink" title="负载均衡策略"></a>负载均衡策略</h2><h3 id="随机"><a href="#随机" class="headerlink" title="随机"></a>随机</h3><p><strong>Random LoadBalance：</strong> 按权重设置随机概率，在一个截面上碰撞的概率高，但调用量越大分布越均匀，而且按概率使用权重后也比较均匀，有利于动态调整提供者权重。</p><h3 id="轮循"><a href="#轮循" class="headerlink" title="轮循"></a>轮循</h3><p><strong>RoundRobin LoadBalance：</strong> 按公约后的权重设置轮询比率，存在慢的提供者累积请求的问题，比如：第二台机器很慢，但没挂，当请求调到第二台时就卡在那，久而久之，所有请求都卡在调到第二台上。</p><h3 id="最少活跃调用数"><a href="#最少活跃调用数" class="headerlink" title="最少活跃调用数"></a>最少活跃调用数</h3><p><strong>LeastActive LoadBalance：</strong> 相同活跃数的随机，活跃数指调用前后计数差，使慢的提供者收到更少请求，因为越慢的提供者的调用前后计数差会越大。</p><h3 id="一致性-Hash"><a href="#一致性-Hash" class="headerlink" title="一致性 Hash"></a>一致性 Hash</h3><p><strong>ConsistentHash LoadBalance：</strong> 相同参数的请求总是发到同一提供者。当某一台提供者挂时，原本发往该提供者的请求，基于虚拟节点，平摊到其它提供者，不会引起剧烈变动。</p><p>算法参见：<a href="http://en.wikipedia.org/wiki/Consistent_hashing" target="_blank" rel="noopener">http://en.wikipedia.org/wiki/Consistent_hashing</a> ，缺省只对第一个参数 Hash，如果要修改，请配置 <code>&lt;dubbo:parameter key=&quot;hash.arguments&quot; value=&quot;0,1&quot; /&gt;</code>，缺省用 160 份虚拟节点，如果要修改，请配置 <code>&lt;dubbo:parameter key=&quot;hash.nodes&quot; value=&quot;320&quot; /&gt;</code></p><h2 id="配置负载均衡"><a href="#配置负载均衡" class="headerlink" title="配置负载均衡"></a>配置负载均衡</h2><ul><li>修改 <code>dubbo-provider</code> 项目的负载均衡策略，默认的负载均衡策略是 <strong>随机</strong>，我们修改为 <strong>轮循</strong>，可配置的值分别是：<code>random</code>，<code>roundrobin</code>，<code>leastactive</code>，<code>consistenthash</code></li></ul><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">dubbo</span><span class="token punctuation">:</span>  <span class="token key atrule">provider</span><span class="token punctuation">:</span>    <span class="token key atrule">loadbalance</span><span class="token punctuation">:</span> roundrobin<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>修改 <code>dubbo-provider</code> 的协议端口为 20880 和 20881，并启动多个实例，IDEA 中依次点击 <strong>Run</strong> -&gt; <strong>Edit Configurations</strong> 并勾选 <strong>Allow parallel run</strong> 以允许 IDEA 多实例运行项目</li></ul><p><img src="/dubbo/Lusifer_20190704033645.png" alt></p><ul><li>Nacos Server 控制台可以看到 <code>dubbo-provider</code> 有 2 个实例</li></ul><p><img src="/dubbo/Lusifer_20190704033745.png" alt></p><ul><li>修改 <code>dubbo-provider</code> 项目的 <code>EchoServiceImpl</code> 中的测试方法</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>api<span class="token punctuation">.</span>EchoService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>apache<span class="token punctuation">.</span>dubbo<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Value<span class="token punctuation">;</span><span class="token annotation punctuation">@Service</span><span class="token punctuation">(</span>version <span class="token operator">=</span> <span class="token string">"1.0.0"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EchoServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">EchoService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${dubbo.protocol.port}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String port<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Echo Hello Dubbo "</span> <span class="token operator">+</span> string <span class="token operator">+</span> <span class="token string">" i am from port: "</span> <span class="token operator">+</span> port<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启服务，通过浏览器访问 <a href="http://localhost:8080/echo/hi" target="_blank" rel="noopener">http://localhost:8080/echo/hi</a> ，反复刷新浏览器，浏览器交替显示</li></ul><pre><code>Echo Hello Dubbo hi i am from port: 20880Echo Hello Dubbo hi i am from port: 20881</code></pre>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo 实现高速序列化</title>
      <link href="/2019/11/25/062.Spring%20Cloud%20Alibaba-Dubbo-%E5%AE%9E%E7%8E%B0%E9%AB%98%E9%80%9F%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/2019/11/25/062.Spring%20Cloud%20Alibaba-Dubbo-%E5%AE%9E%E7%8E%B0%E9%AB%98%E9%80%9F%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="Dubbo-实现高速序列化"><a href="#Dubbo-实现高速序列化" class="headerlink" title="Dubbo 实现高速序列化"></a>Dubbo 实现高速序列化</h1><h2 id="Dubbo-中的序列化"><a href="#Dubbo-中的序列化" class="headerlink" title="Dubbo 中的序列化"></a>Dubbo 中的序列化</h2><p>Dubbo RPC 是 Dubbo 体系中最核心的一种高性能、高吞吐量的远程调用方式，可以称之为多路复用的 TCP 长连接调用：</p><ul><li><strong>长连接：</strong> 避免了每次调用新建 TCP 连接，提高了调用的响应速度</li><li><strong>多路复用：</strong> 单个 TCP 连接可交替传输多个请求和响应的消息，降低了连接的等待闲置时间，从而减少了同样并发数下的网络连接数，提高了系统吞吐量</li></ul><p>Dubbo RPC 主要用于两个 Dubbo 系统之间的远程调用，特别适合高并发、小数据的互联网场景。而序列化对于远程调用的响应速度、吞吐量、网络带宽消耗等同样也起着至关重要的作用，是我们提升分布式系统性能的最关键因素之一。</p><p>Dubbo 中支持的序列化方式：</p><ul><li><strong>dubbo 序列化：</strong> 阿里尚未开发成熟的高效 Java 序列化实现，阿里不建议在生产环境使用它</li><li><strong>hessian2 序列化：</strong> hessian 是一种跨语言的高效二进制序列化方式。但这里实际不是原生的 hessian2 序列化，而是阿里修改过的 hessian lite，它是 dubbo RPC 默认启用的序列化方式</li><li><strong>json 序列化：</strong> 目前有两种实现，一种是采用的阿里的 fastjson 库，另一种是采用 dubbo 中自己实现的简单 json 库，但其实现都不是特别成熟，而且 json 这种文本序列化性能一般不如上面两种二进制序列化。</li><li><strong>java 序列化：</strong> 主要是采用 JDK 自带的 Java 序列化实现，性能很不理想。</li></ul><p>在通常情况下，这四种主要序列化方式的性能从上到下依次递减。对于 dubbo RPC 这种追求高性能的远程调用方式来说，实际上只有 1、2 两种高效序列化方式比较般配，而第 1 个 dubbo 序列化由于还不成熟，所以实际只剩下 2 可用，所以 dubbo RPC 默认采用 hessian2 序列化。</p><p>但 hessian 是一个比较老的序列化实现了，而且它是跨语言的，所以不是单独针对 Java 进行优化的。而 dubbo RPC 实际上完全是一种 Java to Java 的远程调用，其实没有必要采用跨语言的序列化方式（当然肯定也不排斥跨语言的序列化）。</p><p>最近几年，各种新的高效序列化方式层出不穷，不断刷新序列化性能的上限，最典型的包括：</p><ul><li>专门针对 Java 语言的：<strong>Kryo</strong>，FST 等等</li><li>跨语言的：Protostuff，ProtoBuf，<strong>Thrift</strong>，Avro，MsgPack 等等</li></ul><p>这些序列化方式的性能多数都显著优于 hessian2（甚至包括尚未成熟的 dubbo 序列化），有鉴于此，我们为 dubbo 引入 Kryo 和 FST 这两种高效 Java 序列化实现，来逐步取代 hessian2。</p><p>其中，Kryo 是一种非常成熟的序列化实现，已经在 Twitter、Groupon、Yahoo 以及多个著名开源项目（如 Hive、Storm）中广泛的使用。而 FST 是一种较新的序列化实现，目前还缺乏足够多的成熟使用案例。</p><blockquote><p><strong>注意：</strong> 在面向生产环境的应用中，目前更优先选择 Kryo</p></blockquote><h2 id="启用-Kryo"><a href="#启用-Kryo" class="headerlink" title="启用 Kryo"></a>启用 Kryo</h2><p>在 Provider 和 Consumer 项目启用 Kryo 高速序列化功能，两个项目的配置方式相同</p><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><p>增加 <code>org.apache.dubbo:dubbo-serialization-kryo</code> 依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dubbo-kryo.version</span><span class="token punctuation">></span></span>2.7.2<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dubbo-kryo.version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>dubbo-serialization-kryo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${dubbo-kryo.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><p>增加 <code>dubbo.protocol.serialization=kryo</code> 配置</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">dubbo</span><span class="token punctuation">:</span>  <span class="token key atrule">protocol</span><span class="token punctuation">:</span>    <span class="token key atrule">serialization</span><span class="token punctuation">:</span> kryo<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="序列化类说明"><a href="#序列化类说明" class="headerlink" title="序列化类说明"></a>序列化类说明</h3><blockquote><p><strong>注意：</strong> 想要使用 Kryo 序列化只需要 DTO/Domain/Entity 这类传输对象实现序列化接口即可，无需额外再做配置，如：<code>public class User implements Serializable{}</code></p></blockquote><p>在对一个类做序列化的时候，可能还级联引用到很多类，比如 Java 集合类。针对这种情况，Dubbo 已经自动将 JDK 中的常用类进行了注册，包括：</p><pre><code>GregorianCalendarInvocationHandlerBigDecimalBigIntegerPatternBitSetURIUUIDHashMapArrayListLinkedListHashSetTreeSetHashtableDateCalendarConcurrentHashMapSimpleDateFormatVectorBitSetStringBufferStringBuilderObjectObject[]String[]byte[]char[]int[]float[]double[]</code></pre><p>由于注册被序列化的类仅仅是出于性能优化的目的，所以即使你忘记注册某些类也没有关系。事实上，即使不注册任何类，Kryo 和 FST 的性能依然普遍优于 hessian 和 dubbo 序列化。</p><h2 id="附：扩展阅读"><a href="#附：扩展阅读" class="headerlink" title="附：扩展阅读"></a>附：扩展阅读</h2><h3 id="序列化性能分析与测试"><a href="#序列化性能分析与测试" class="headerlink" title="序列化性能分析与测试"></a>序列化性能分析与测试</h3><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h4><ul><li>两台独立服务器</li><li>4 核 Intel(R) Xeon(R) CPU E5-2603 0 @ 1.80GHz</li><li>8G 内存</li><li>虚拟机之间网络通过百兆交换机</li><li>CentOS 5</li><li>JDK 7</li><li>Tomcat 7</li><li>JVM 参数 <code>-server -Xms1g -Xmx1g -XX:PermSize=64M -XX:+UseConcMarkSweepGC</code></li></ul><blockquote><p><strong>注意：</strong> 当然这个测试环境较有局限，故当前测试结果未必有非常权威的代表性</p></blockquote><h4 id="测试脚本"><a href="#测试脚本" class="headerlink" title="测试脚本"></a>测试脚本</h4><p>和 dubbo 自身的基准测试保持接近，10 个并发客户端持续不断发出请求：</p><ul><li>传入嵌套复杂对象（但单个数据量很小），不做任何处理，原样返回</li><li>传入 50K 字符串，不做任何处理，原样返回（TODO：结果尚未列出）</li></ul><p>进行 5 分钟性能测试。（引用 dubbo 自身测试的考虑：“主要考察序列化和网络 IO 的性能，因此服务端无任何业务逻辑。<strong>取 10 并发是考虑到 HTTP 协议在高并发下对 CPU 的使用率较高可能会先达到瓶颈。</strong>”）</p><h4 id="Dubbo-RPC-中不同序列化生成字节大小比较"><a href="#Dubbo-RPC-中不同序列化生成字节大小比较" class="headerlink" title="Dubbo RPC 中不同序列化生成字节大小比较"></a>Dubbo RPC 中不同序列化生成字节大小比较</h4><p>序列化生成字节码的大小是一个比较有确定性的指标，它决定了远程调用的网络传输时间和带宽占用。针对复杂对象的结果如下（数值越小越好）：</p><p><img src="/dubbo/Lusifer_20181023082512.png" alt></p><p><img src="/dubbo/bytes.png" alt></p><h4 id="Dubbo-RPC-中不同序列化响应时间和吞吐量对比"><a href="#Dubbo-RPC-中不同序列化响应时间和吞吐量对比" class="headerlink" title="Dubbo RPC 中不同序列化响应时间和吞吐量对比"></a>Dubbo RPC 中不同序列化响应时间和吞吐量对比</h4><p><img src="/dubbo/Lusifer_20181023082647.png" alt></p><p><img src="/dubbo/rt.png" alt></p><p><img src="/dubbo/tps.png" alt></p><h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><p>就目前结果而言，我们可以看到不管从生成字节的大小，还是平均响应时间和平均 TPS，Kryo 和 FST 相比 Dubbo RPC 中原有的序列化方式都有非常显著的改进。</p>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dubbo 简介</title>
      <link href="/2019/11/25/058.Spring%20Cloud%20Alibaba-Dubbo-%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/25/058.Spring%20Cloud%20Alibaba-Dubbo-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Dubbo-简介"><a href="#Dubbo-简介" class="headerlink" title="Dubbo 简介"></a>Dubbo 简介</h1><h2 id="什么是-Dubbo"><a href="#什么是-Dubbo" class="headerlink" title="什么是 Dubbo"></a>什么是 Dubbo</h2><p>Apache Dubbo (incubating) |ˈdʌbəʊ| 是一款高性能、轻量级的开源 Java RPC 分布式服务框架，它提供了三大核心能力：面向接口的远程方法调用，智能容错和负载均衡，以及服务自动注册和发现。她最大的特点是按照分层的方式来架构，使用这种方式可以使各个层之间解耦合（或者最大限度地松耦合）。从服务模型的角度来看，Dubbo 采用的是一种非常简单的模型，要么是提供方提供服务，要么是消费方消费服务，所以基于这一点可以抽象出服务提供方（Provider）和服务消费方（Consumer）两个角色。</p><blockquote><p><strong>备注：</strong> 2019 年 5 月 21 日 Apache 软件基金会发表博文，宣布 Dubbo 在 2019 年 5 月 20 日 这天正式毕业，成为 Apache 的顶级项目。</p></blockquote><ul><li><a href="http://dubbo.apache.org/zh-cn" target="_blank" rel="noopener">官方网站</a></li><li><a href="https://github.com/apache/incubator-dubbo" target="_blank" rel="noopener">官方 GitHub</a></li></ul><h2 id="Dubbo-架构"><a href="#Dubbo-架构" class="headerlink" title="Dubbo 架构"></a>Dubbo 架构</h2><p><img src="/dubbo/687474703a2f2f647562626f2e6170616368652e6f72672f696d672f6172636869746563747572652e706e67.png" alt></p><h3 id="节点角色说明"><a href="#节点角色说明" class="headerlink" title="节点角色说明"></a>节点角色说明</h3><table><thead><tr><th>节点</th><th>角色说明</th></tr></thead><tbody><tr><td>Provider</td><td>暴露服务的服务提供方</td></tr><tr><td>Consumer</td><td>调用远程服务的服务消费方</td></tr><tr><td>Registry</td><td>服务注册与发现的注册中心</td></tr><tr><td>Monitor</td><td>统计服务的调用次数和调用时间的监控中心</td></tr><tr><td>Container</td><td>服务运行容器</td></tr></tbody></table><h3 id="调用关系说明"><a href="#调用关系说明" class="headerlink" title="调用关系说明"></a>调用关系说明</h3><ul><li>服务容器负责启动，加载，运行服务提供者</li><li>服务提供者在启动时，向注册中心注册自己提供的服务</li><li>服务消费者在启动时，向注册中心订阅自己所需的服务</li><li>注册中心返回服务提供者地址列表给消费者，如果有变更，注册中心将基于长连接推送变更数据给消费者</li><li>服务消费者，从提供者地址列表中，基于软负载均衡算法，选一台提供者进行调用，如果调用失败，再选另一台调用</li><li>服务消费者和提供者，在内存中累计调用次数和调用时间，定时每分钟发送一次统计数据到监控中心</li></ul><h2 id="Dubbo-功能特点"><a href="#Dubbo-功能特点" class="headerlink" title="Dubbo 功能特点"></a>Dubbo 功能特点</h2><ul><li><strong>面向接口代理的高性能 RPC 调用：</strong> 提供高性能的基于代理的远程调用能力，服务以接口为粒度，为开发者屏蔽远程调用底层细节</li><li><strong>智能负载均衡：</strong> 内置多种负载均衡策略，智能感知下游节点健康状况，显著减少调用延迟，提高系统吞吐量</li><li><strong>服务自动注册与发现：</strong> 支持多种注册中心服务，服务实例上下线实时感知</li><li><strong>高度可扩展能力：</strong> 遵循微内核 + 插件的设计原则，所有核心能力如 Protocol、Transport、Serialization 被设计为扩展点，平等对待内置实现和第三方实现</li><li><strong>运行期流量调度：</strong> 内置条件、脚本等路由策略，通过配置不同的路由规则，轻松实现灰度发布，同机房优先等功能</li><li><strong>可视化的服务治理与运维：</strong> 提供丰富服务治理、运维工具：随时查询服务元数据、服务健康状态及调用统计，实时下发路由策略、调整配置参数</li></ul><h2 id="附：扩展阅读"><a href="#附：扩展阅读" class="headerlink" title="附：扩展阅读"></a>附：扩展阅读</h2><h3 id="什么是-RPC"><a href="#什么是-RPC" class="headerlink" title="什么是 RPC"></a>什么是 RPC</h3><p>分布式是促使 RPC 诞生的领域，<strong>RPC 是一种编程模型，并没有规定你具体要怎样实现</strong>，无论使用 HTTP 或是 RMI 都是可以的。</p><p>假设你有一个计算器接口，Calculator，以及它的实现类 CalculatorImpl，那么在系统还是 <strong>单体应用</strong> 时，你要调用 Calculator 的 add 方法来执行一个加运算，直接 new 一个 CalculatorImpl，然后调用 add 方法就行了，这其实就是非常普通的 <strong>本地函数调用</strong>，因为在 <strong>同一个地址空间</strong>，或者说在同一块内存，所以通过方法栈和参数栈就可以实现。</p><p><img src="/dubbo/7143349-443a8cbcf6136ef5.webp" alt></p><p>现在，基于高性能和高可靠等因素的考虑，你决定将系统改造为分布式应用，将很多可以共享的功能都单独拎出来，比如上面说到的计算器，你单独把它放到一个服务里头，让别的服务去调用它。</p><p><img src="/dubbo/7143349-9b1fbd80b8db018b.webp" alt></p><p>这下问题来了，服务 A 里头并没有 CalculatorImpl 这个类，那它要怎样调用服务 B 的 CalculatorImpl 的 add 方法呢？</p><p><strong>RPC 要解决的两个问题</strong></p><ul><li>解决分布式系统中，服务之间的调用问题</li><li>远程调用时，要能够像本地调用一样方便，让调用者感知不到远程调用的逻辑</li></ul><h3 id="如何实现一个-RPC"><a href="#如何实现一个-RPC" class="headerlink" title="如何实现一个 RPC"></a>如何实现一个 RPC</h3><p>实际情况下，<strong>RPC 很少用到 HTTP 协议来进行数据传输</strong>，毕竟我只是想传输一下数据而已，何必动用到一个文本传输的应用层协议呢，我为什么不直接使用<strong>二进制传输</strong>？比如直接用 Java 的 Socket 协议进行传输？</p><p>不管你用何种协议进行数据传输，一个完整的 RPC 过程，都可以用下面这张图来描述</p><p><img src="/dubbo/7143349-9e00bb104b9e3867.webp" alt></p><p>以左边的 Client 端为例，Application 就是 RPC 的调用方，Client Stub 就是我们上面说到的代理对象，也就是那个看起来像是 Calculator 的实现类，其实内部是通过 RPC 方式来进行远程调用的代理对象，至于 Client Run-time Library，则是实现远程调用的工具包，比如 JDK 的 Socket，最后通过底层网络实现实现数据的传输。</p><p>这个过程中最重要的就是 <strong>序列化</strong> 和 <strong>反序列化</strong> 了，因为数据传输的数据包必须是二进制的，你直接丢一个 Java 对象过去，人家可不认识，你必须把 Java 对象序列化为二进制格式，传给 Server 端，Server 端接收到之后，再反序列化为 Java 对象。</p><h3 id="RPC-vs-Restful"><a href="#RPC-vs-Restful" class="headerlink" title="RPC vs Restful"></a>RPC vs Restful</h3><p><strong>RPC 是面向过程</strong>，<strong>Restful 是面向资源</strong>，并且使用了 HTTP 动词。从这个维度上看，Restful 风格的 URL 在表述的精简性、可读性上都要更好。</p><h3 id="阿里为何放弃-Zookeeper"><a href="#阿里为何放弃-Zookeeper" class="headerlink" title="阿里为何放弃 Zookeeper"></a>阿里为何放弃 Zookeeper</h3><p><strong>CAP</strong></p><p>有个思考，从 CAP 角度考虑，服务注册中心是 CP 系统还是 AP 系统呢？</p><ul><li>服务注册中心是为了服务间调用服务的，那么绝对不允许因为服务注册中心出现了问题而导致服务间的调用出问题</li><li>假如有 node1，node2，node3 集群节点。保存着可用服务列表 ip1，ip2，ip3，试想如果此时不一致，比如 node1 只保存了ip1，ip2，此时服务读取 node1 的节点，那么会造成什么影响？</li></ul><p>调用 node1 的服务，顶多就是负载均衡时不会有流量打到 ip3，然后等 node1 同步回 ip3 后，又一致了，这对服务其实没什么太大影响。所以，推测出服务注册中心应该是个 AP 系统。</p><p><strong>Zookeeper 是个 CP 系统，强一致性</strong></p><ul><li>场景1，当 master 挂了，此时 Zookeeper 集群需要重新选举，而此时服务需要来读取可用服务，是不可用的。影响到了服务的可用性当然你可以说服务本地有缓存可用列表。然而下面这种方式就更无法处理了。</li><li>场景2，分区可用。试想，有 3 个机房，如果其中机房 3 和机房 1，2 网络断了，那么机房 3 的注册中心就不能注册新的机器了，这显然也不合理从健康检查角度来看</li></ul><p><img src="/dubbo/da288a836eac2ddeeb0bbdfa0fd29fb4b8d.jpg" alt></p><p>Zookeeper 是通过 TCP 的心跳判断服务是否可用，但 TCP 的活性并不代表服务是可用的，如：连接池已满，DB 挂了等</p><p><strong>理想的注册中心</strong></p><ul><li>服务自动注册发现。最好有新的服务注册上去时还能推送到调用端</li><li>能对注册上来的机器方便的进行管理，能手动删除（发送信号让服务优雅下线）、恢复机器</li><li>服务的健康检查，能真正的检测到服务是否可用</li><li>可以看到是否有其他调用服务正在订阅注册上来的服务</li><li>能够带上些除了 IP 外的其它信息</li></ul>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建项目工程</title>
      <link href="/2019/11/25/059.Spring%20Cloud%20Alibaba-Dubbo-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B/"/>
      <url>/2019/11/25/059.Spring%20Cloud%20Alibaba-Dubbo-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="创建项目工程"><a href="#创建项目工程" class="headerlink" title="创建项目工程"></a>创建项目工程</h1><h2 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- lookup parent from repository --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>hello-apache-dubbo-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-apache-dubbo-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-javaformat.version</span><span class="token punctuation">></span></span>0.0.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-javaformat.version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.spring.javaformat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-javaformat-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring-javaformat.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*Tests.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>**/Abstract*.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPropertyVariables</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.security.egd</span><span class="token punctuation">></span></span>file:/dev/./urandom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.security.egd</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.awt.headless</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.awt.headless</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPropertyVariables</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-enforcer-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>enforce-rules<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>enforce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rules</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bannedDependencies</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>commons-logging:*:*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>searchTransitive</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>searchTransitive</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bannedDependencies</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rules</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fail</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fail</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-install-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-javadoc-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inherited</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inherited</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Dubbo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Dubbo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentinel 客户端接入</title>
      <link href="/2019/11/24/057.Spring%20Cloud%20Alibaba-Sentinel-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8E%A5%E5%85%A5/"/>
      <url>/2019/11/24/057.Spring%20Cloud%20Alibaba-Sentinel-%E5%AE%A2%E6%88%B7%E7%AB%AF%E6%8E%A5%E5%85%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="Sentinel-客户端接入"><a href="#Sentinel-客户端接入" class="headerlink" title="Sentinel 客户端接入"></a>Sentinel 客户端接入</h1><h2 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h2><p>如果要在您的项目中引入 Sentinel，需要增加 <code>org.springframework.cloud:spring-cloud-starter-alibaba-sentinel</code> Starter POM</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-sentinel<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h2><p>在 Nacos 控制台修改配置文件，增加对 Sentinel 的支持</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 服务名</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>consumer  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 服务注册中心</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span>      <span class="token key atrule">config</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 服务配置中心</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span>    <span class="token comment" spellcheck="true"># 熔断限流</span>    <span class="token key atrule">sentinel</span><span class="token punctuation">:</span>      <span class="token key atrule">transport</span><span class="token punctuation">:</span>        <span class="token key atrule">dashboard</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8888</span><span class="token comment" spellcheck="true"># 开启 Feign 对 Sentinel 的支持</span><span class="token key atrule">feign</span><span class="token punctuation">:</span>  <span class="token key atrule">sentinel</span><span class="token punctuation">:</span>    <span class="token key atrule">enabled</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 服务端口</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 端点检查（健康检查）</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span class="token key atrule">user</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"灶门祢豆子"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置熔断类"><a href="#配置熔断类" class="headerlink" title="配置熔断类"></a>配置熔断类</h2><p>编写一个 Feign 接口的实现类并增加 <code>@Component</code> 注解</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>service<span class="token punctuation">.</span>fallback<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>service<span class="token punctuation">.</span>EchoService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Component<span class="token punctuation">;</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EchoServiceFallback</span> <span class="token keyword">implements</span> <span class="token class-name">EchoService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span>String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"echo fallback"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> String <span class="token function">lb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"lb fallback"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="修改-Feign-接口"><a href="#修改-Feign-接口" class="headerlink" title="修改 Feign 接口"></a>修改 Feign 接口</h2><p>在 <code>@FeignClient</code> 接口上增加 <code>fallback</code> 属性指定熔断类即可</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>service<span class="token punctuation">.</span>fallback<span class="token punctuation">.</span>EchoServiceFallback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>FeignClient<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span> fallback <span class="token operator">=</span> EchoServiceFallback<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EchoService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/echo/{string}"</span><span class="token punctuation">)</span>    String <span class="token function">echo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"string"</span><span class="token punctuation">)</span> String string<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/lb"</span><span class="token punctuation">)</span>    String <span class="token function">lb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="测试熔断"><a href="#测试熔断" class="headerlink" title="测试熔断"></a>测试熔断</h2><p>启动 <code>service-consumer</code> 服务并停止 <code>service-provider</code> 服务，通过浏览器访问 <a href="http://localhost:8080/feign/echo/hi" target="_blank" rel="noopener">http://localhost:8080/feign/echo/hi</a></p><pre><code>echo fallback</code></pre><p><img src="/SpringCloud/Lusifer_20190701015131.png" alt></p><blockquote><p><strong>注意：</strong> 必须至少请求过一次才能在 Sentinel 控制台看到对应的服务</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Sentinel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Sentinel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentinel 控制台</title>
      <link href="/2019/11/24/056.Spring%20Cloud%20Alibaba-Sentinel-%E6%8E%A7%E5%88%B6%E5%8F%B0/"/>
      <url>/2019/11/24/056.Spring%20Cloud%20Alibaba-Sentinel-%E6%8E%A7%E5%88%B6%E5%8F%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Sentinel-控制台"><a href="#Sentinel-控制台" class="headerlink" title="Sentinel 控制台"></a>Sentinel 控制台</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Sentinel 提供一个轻量级的开源控制台，它提供机器发现以及健康情况管理、监控（单机和集群），规则管理和推送的功能。另外，鉴权在生产环境中也必不可少。这里，我们将会详细讲述如何通过简单的步骤就可以使用这些功能。Sentinel 控制台最少应该包含如下功能</p><ul><li><strong>查看机器列表以及健康情况：</strong> 收集 Sentinel 客户端发送的心跳包，用于判断机器是否在线。</li><li><strong>监控 (单机和集群聚合)：</strong> 通过 Sentinel 客户端暴露的监控 API，定期拉取并且聚合应用监控信息，最终可以实现秒级的实时监控。</li><li><strong>规则管理和推送：</strong> 统一管理推送规则。</li><li><strong>鉴权：</strong> 生产环境中鉴权非常重要。这里每个开发者需要根据自己的实际情况进行定制。</li></ul><h2 id="启动控制台"><a href="#启动控制台" class="headerlink" title="启动控制台"></a>启动控制台</h2><h3 id="获取"><a href="#获取" class="headerlink" title="获取"></a>获取</h3><p>您可以从 <a href="https://github.com/alibaba/Sentinel/releases" target="_blank" rel="noopener">官方 GitHub Release 页面</a> 页面下载最新版本的控制台 JAR 包。</p><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><blockquote><p><strong>注意：</strong> 启动 Sentinel 控制台需要 JDK 版本为 1.8 及以上版本</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">java -Dserver.port<span class="token operator">=</span>8080 -Dcsp.sentinel.dashboard.server<span class="token operator">=</span>localhost:8080 -Dproject.name<span class="token operator">=</span>sentinel-dashboard -jar sentinel-dashboard.jar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中 <code>-Dserver.port=8080</code> 用于指定 Sentinel 控制台端口为 <code>8080</code></p><blockquote><p><strong>注意：</strong> 从 Sentinel 1.6.0 起，Sentinel 控制台引入基本的 <strong>登录</strong> 功能，<strong>默认用户名和密码都是 sentinel</strong></p></blockquote><h3 id="鉴权"><a href="#鉴权" class="headerlink" title="鉴权"></a>鉴权</h3><p>用户可以通过如下参数进行配置</p><ul><li><code>-Dsentinel.dashboard.auth.username=sentinel</code> 用于指定控制台的登录用户名为 sentinel</li><li><code>-Dsentinel.dashboard.auth.password=123456</code> 用于指定控制台的登录密码为 123456；如果省略这两个参数，默认用户和密码均为 sentinel</li><li><code>-Dserver.servlet.session.timeout=7200</code> 用于指定 Spring Boot 服务端 session 的过期时间，如 7200 表示 7200 秒；60m 表示 60 分钟，默认为 30 分钟</li></ul><h2 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h2><p>通过浏览器访问 <a href="http://localhost:8080/#/login" target="_blank" rel="noopener">http://localhost:8080/#/login</a></p><p><img src="/SpringCloud/Lusifer_20190630222008.png" alt></p><ul><li><strong>账号：</strong> sentinel</li><li><strong>密码：</strong> sentinel</li></ul><p><img src="/SpringCloud/Lusifer_20190630222104.png" alt></p><p>详细说明请参考 <a href="https://github.com/alibaba/Sentinel/wiki" target="_blank" rel="noopener">官方 Sentinel Wiki</a></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Sentinel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Sentinel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Sentinel 分布式系统的流量防卫兵</title>
      <link href="/2019/11/24/055.Spring%20Cloud%20Alibaba-Sentinel-%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B5%81%E9%87%8F%E9%98%B2%E5%8D%AB%E5%85%B5/"/>
      <url>/2019/11/24/055.Spring%20Cloud%20Alibaba-Sentinel-%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%B5%81%E9%87%8F%E9%98%B2%E5%8D%AB%E5%85%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="Sentinel-分布式系统的流量防卫兵"><a href="#Sentinel-分布式系统的流量防卫兵" class="headerlink" title="Sentinel 分布式系统的流量防卫兵"></a>Sentinel 分布式系统的流量防卫兵</h1><h2 id="什么是服务雪崩"><a href="#什么是服务雪崩" class="headerlink" title="什么是服务雪崩"></a>什么是服务雪崩</h2><p>在微服务架构中，根据业务来拆分成一个个的服务，服务与服务之间可以通过 <code>HTTP/RPC</code> 相互调用，在 Spring Cloud 中可以用 <code>RestTemplate + LoadBalanceClient</code> 和 <code>Feign</code> 来调用。为了保证其高可用，单个服务通常会集群部署。由于网络原因或者自身的原因，服务并不能保证 100% 可用，如果单个服务出现问题，调用这个服务就会出现线程阻塞，此时若有大量的请求涌入，<code>Servlet</code> 容器的线程资源会被消耗完毕，导致服务瘫痪。服务与服务之间的依赖性，故障会传播，会对整个微服务系统造成灾难性的严重后果，这就是服务故障的 <strong>“雪崩”</strong> 效应。为了解决这个问题，业界提出了 <strong>熔断器模型</strong>。</p><p>阿里巴巴开源了 Sentinel 组件，实现了熔断器模式，Spring Cloud 对这一组件进行了整合。在微服务架构中，一个请求需要调用多个服务是非常常见的</p><p><img src="/SpringCloud/Lusifer201805292246007.png" alt></p><p>较底层的服务如果出现故障，会导致连锁故障。当对特定的服务的调用的不可用达到一个阀值熔断器将会被打开</p><p><img src="/SpringCloud/Lusifer201901080205008.png" alt></p><p>熔断器打开后，为了避免连锁故障，通过 <code>fallback</code> 方法可以直接返回一个固定值。</p><h2 id="什么是-Sentinel"><a href="#什么是-Sentinel" class="headerlink" title="什么是 Sentinel"></a>什么是 Sentinel</h2><p>随着微服务的流行，服务和服务之间的稳定性变得越来越重要。Sentinel 以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</p><h3 id="Sentinel-的特征"><a href="#Sentinel-的特征" class="headerlink" title="Sentinel 的特征"></a>Sentinel 的特征</h3><ul><li><strong>丰富的应用场景：</strong> Sentinel 承接了阿里巴巴近 10 年的双十一大促流量的核心场景，例如秒杀（即突发流量控制在系统容量可以承受的范围）、消息削峰填谷（对于突然到来的大量请求，您可以配置流控规则，以稳定的速度逐步处理这些请求，从而避免流量突刺造成系统负载过高）、集群流量控制、实时熔断下游不可用应用等</li><li><strong>完备的实时监控：</strong> Sentinel 同时提供实时的监控功能。您可以在控制台中看到接入应用的单台机器秒级数据，甚至 500 台以下规模的集群的汇总运行情况</li><li><strong>广泛的开源生态：</strong> Sentinel 提供开箱即用的与其它开源框架 / 库的整合模块，例如与 Spring Cloud、Dubbo、gRPC 的整合。您只需要引入相应的依赖并进行简单的配置即可快速地接入 Sentinel</li><li><strong>完善的 SPI 扩展点：</strong> Sentinel 提供简单易用、完善的 SPI 扩展接口。您可以通过实现扩展接口来快速地定制逻辑。例如定制规则管理、适配动态数据源等</li></ul><h3 id="Sentinel-的主要特性"><a href="#Sentinel-的主要特性" class="headerlink" title="Sentinel 的主要特性"></a>Sentinel 的主要特性</h3><p><img src="/SpringCloud/50505538-2c484880-0aaf-11e9-9ffc-cbaaef20be2b.png" alt></p><h3 id="Sentinel-的开源生态"><a href="#Sentinel-的开源生态" class="headerlink" title="Sentinel 的开源生态"></a>Sentinel 的开源生态</h3><p><img src="/SpringCloud/46240214-9c72ff80-c3d6-11e8-937a-0cffa1e8dc58.png" alt></p><h3 id="Sentinel-的组成"><a href="#Sentinel-的组成" class="headerlink" title="Sentinel 的组成"></a>Sentinel 的组成</h3><ul><li><strong>核心库（Java 客户端）：</strong> 不依赖任何框架 / 库，能够运行于所有 Java 运行时环境，同时对 Dubbo / Spring Cloud 等框架也有较好的支持</li><li><strong>控制台（Dashboard）：</strong> 基于 Spring Boot 开发，打包后可以直接运行，不需要额外的 Tomcat 等应用容器</li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Sentinel </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Sentinel </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos 多环境配置</title>
      <link href="/2019/11/24/054.Spring%20Cloud%20Alibaba-Nacos-%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/11/24/054.Spring%20Cloud%20Alibaba-Nacos-%E5%A4%9A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Nacos-多环境配置"><a href="#Nacos-多环境配置" class="headerlink" title="Nacos 多环境配置"></a>Nacos 多环境配置</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>我们在做项目开发的时候，生产环境和测试环境的一些配置可能会不一样，有时候一些功能也可能会不一样，所以我们可能会在上线的时候手工修改这些配置信息。Spring 为我们提供了 Spring Boot Profile 这个功能（Maven 也为我们提供了 Maven Profile）。我们只需要在启动的时候添加一个虚拟机参数，激活自己环境所要用的 Profile 就可以了。</p><p>操作起来很简单，只需要为不同的环境编写专门的配置文件，如：<code>application-dev.yml</code>、<code>application-prod.yml</code>， 启动项目时只需要增加一个命令参数 <code>--spring.profiles.active=</code> 环境配置即可</p><pre class="line-numbers language-bash"><code class="language-bash">java -jar 1.0.0-SNAPSHOT.jar --spring.profiles.active<span class="token operator">=</span>prod<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="什么是-Nacos-Config-Profile"><a href="#什么是-Nacos-Config-Profile" class="headerlink" title="什么是 Nacos Config Profile"></a>什么是 Nacos Config Profile</h2><p><code>spring-cloud-starter-alibaba-nacos-config</code> 在加载配置的时候，不仅仅加载了以 dataid 为 <code>${spring.application.name}.${file-extension:properties}</code> 为前缀的基础配置，还加载了 dataid 为 <code>${spring.application.name}-${profile}.${file-extension:properties}</code> 的基础配置。在日常开发中如果遇到多套环境下的不同配置，可以通过 Spring 提供的 <code>${spring.profiles.active}</code> 这个配置项来配置。</p><h2 id="使用-Nacos-Config-Profile"><a href="#使用-Nacos-Config-Profile" class="headerlink" title="使用 Nacos Config Profile"></a>使用 Nacos Config Profile</h2><p>我们以 <code>service-provider</code> 项目为例，演示多环境配置效果，不要忘记依赖 Nacos Config Starter</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用控制台发布配置"><a href="#使用控制台发布配置" class="headerlink" title="使用控制台发布配置"></a>使用控制台发布配置</h3><blockquote><p><strong>注意：</strong> 控制台发布配置时不要加注释，否则打成 Jar 包后运行会报无法解析配置文件的错误</p></blockquote><p>通过浏览器访问 <a href="http://192.168.141.132:8848/nacos" target="_blank" rel="noopener">http://192.168.141.132:8848/nacos</a> ，访问 Nacos Server</p><ul><li>发布一个名为 <code>service-provider-config.yaml</code> 的 <strong>测试环境</strong> 配置</li></ul><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 服务名</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>provider  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 服务注册中心</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 服务端口</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8070</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 端点检查（健康检查）</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>发布一个名为 <code>service-provider-config-prod.yaml</code> 的 <strong>生产环境</strong> 配置</li></ul><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 服务名</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>provider  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 服务注册中心</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 修改了上面的端口号，区分配置的不同</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8071</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 端点检查（健康检查）</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改客户端配置"><a href="#修改客户端配置" class="headerlink" title="修改客户端配置"></a>修改客户端配置</h3><ul><li>创建名为 <code>bootstrap.properties</code> 的配置文件并删除之前创建的 <code>application.yml</code> 配置文件</li></ul><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">service-provider-config</span><span class="token attr-name">spring.cloud.nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token attr-value">192.168.141.132:8848</span><span class="token attr-name">spring.cloud.nacos.config.file-extension</span><span class="token punctuation">=</span><span class="token attr-value">yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><ul><li>创建名为 <code>bootstrap-prod.properties</code> 的配置文件</li></ul><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">spring.profiles.active</span><span class="token punctuation">=</span><span class="token attr-value">prod</span><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">service-provider-config</span><span class="token attr-name">spring.cloud.nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token attr-value">192.168.141.132:8848</span><span class="token attr-name">spring.cloud.nacos.config.file-extension</span><span class="token punctuation">=</span><span class="token attr-value">yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="测试多环境配置"><a href="#测试多环境配置" class="headerlink" title="测试多环境配置"></a>测试多环境配置</h3><p>此时我们有两个配置文件，分别为 <code>bootstrap.properties</code> 和 <code>bootstrap-prod.properties</code> ，我们需要指定启动时加载哪一个配置文件</p><p><strong>Run</strong> -&gt; <strong>Edit Configurations</strong> -&gt; <strong>Active profiles:</strong></p><p><img src="/SpringCloud/Lusifer_20190630212304.png" alt></p><p>运行项目并观察日志</p><p><img src="/SpringCloud/Lusifer_20190630212617.png" alt></p><p>由上图可知，我们成功加载了不同环境的配置</p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos 分布式配置中心</title>
      <link href="/2019/11/24/053.Spring%20Cloud%20Alibaba-Nacos-%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/"/>
      <url>/2019/11/24/053.Spring%20Cloud%20Alibaba-Nacos-%E5%88%86%E5%B8%83%E5%BC%8F%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Nacos-分布式配置中心"><a href="#Nacos-分布式配置中心" class="headerlink" title="Nacos 分布式配置中心"></a>Nacos 分布式配置中心</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>在分布式系统中，由于服务数量巨多，为了方便服务配置文件统一管理，实时更新，所以需要分布式配置中心组件</p><h2 id="什么是-Nacos-Config"><a href="#什么是-Nacos-Config" class="headerlink" title="什么是 Nacos Config"></a>什么是 Nacos Config</h2><p>Nacos 提供用于存储配置和其他元数据的 key/value 存储，为分布式系统中的外部化配置提供服务器端和客户端支持。使用 Spring Cloud Alibaba Nacos Config，您可以在 Nacos Server 集中管理你 Spring Cloud 应用的外部属性配置。</p><p>Spring Cloud Alibaba Nacos Config 是 Spring Cloud Config Server 和 Client 的替代方案，客户端和服务器上的概念与 Spring Environment 和 PropertySource 有着一致的抽象，在特殊的 bootstrap 阶段，配置被加载到 Spring 环境中。当应用程序通过部署管道从开发到测试再到生产时，您可以管理这些环境之间的配置，并确保应用程序具有迁移时需要运行的所有内容。</p><h2 id="接入配置中心"><a href="#接入配置中心" class="headerlink" title="接入配置中心"></a>接入配置中心</h2><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><p>我们以 <code>service-consumer</code> 项目为例，修改 <code>pom.xml</code> ，引入 <strong>Nacos Config Starter</strong></p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-config<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p>完成上述两步后，应用会从 Nacos Config 中获取相应的配置，并添加在 Spring Environment 的 PropertySources 中。这里我们使用 <code>@Value</code> 注解来将对应的配置注入到 <code>TestEchoController</code> 的 <code>username</code>字段，并添加 <code>@RefreshScope</code> 打开动态刷新功能</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>service<span class="token punctuation">.</span>EchoService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Value<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>context<span class="token punctuation">.</span>config<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RefreshScope<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token annotation punctuation">@RefreshScope</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEchoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> EchoService echoService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${user.name}"</span><span class="token punctuation">)</span>    <span class="token keyword">private</span> String username<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/config"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">config</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> echoService<span class="token punctuation">.</span><span class="token function">echo</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="使用控制台发布配置"><a href="#使用控制台发布配置" class="headerlink" title="使用控制台发布配置"></a>使用控制台发布配置</h3><p>通过浏览器访问 <a href="http://192.168.141.132:8848/nacos" target="_blank" rel="noopener">http://192.168.141.132:8848/nacos</a> ，访问 Nacos Server</p><p><img src="/SpringCloud/Lusifer_20190630175424.png" alt></p><p><img src="/SpringCloud/Lusifer_20190630175940.png" alt></p><blockquote><p><strong>注意：</strong> Data ID 的默认扩展名为 <code>.properties</code> ，希望使用 YAML 配置，此处必须指明是 <code>.yaml</code></p></blockquote><p><img src="/SpringCloud/Lusifer_20190630180132.png" alt></p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 服务名</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>consumer  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 服务注册中心</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 服务端口</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 端点检查（健康检查）</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span class="token key atrule">user</span><span class="token punctuation">:</span>  <span class="token key atrule">name</span><span class="token punctuation">:</span> <span class="token string">"灶门炭治郎"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改客户端配置"><a href="#修改客户端配置" class="headerlink" title="修改客户端配置"></a>修改客户端配置</h3><p>创建名为 <code>bootstrap.properties</code> 的配置文件并删除之前创建的 <code>application.yml</code> 配置文件</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">spring.application.name</span><span class="token punctuation">=</span><span class="token attr-value">service-consumer-config</span><span class="token attr-name">spring.cloud.nacos.config.server-addr</span><span class="token punctuation">=</span><span class="token attr-value">192.168.141.132:8848</span><span class="token attr-name">spring.cloud.nacos.config.file-extension</span><span class="token punctuation">=</span><span class="token attr-value">yaml</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>通过浏览器访问 <a href="http://localhost:8080/config" target="_blank" rel="noopener">http://localhost:8080/config</a> ，浏览器输出如下</p><pre><code>Hello Nacos Provider 灶门炭治郎</code></pre><blockquote><p><strong>注意：</strong> Spring Boot 配置文件的加载顺序，依次为 <code>bootstrap.properties</code> -&gt; <code>bootstrap.yml</code> -&gt; <code>application.properties</code> -&gt; <code>application.yml</code> ，其中 <strong>bootstrap.properties</strong> 配置为最高优先级</p></blockquote><h3 id="动态刷新配置"><a href="#动态刷新配置" class="headerlink" title="动态刷新配置"></a>动态刷新配置</h3><p>在 Nacos Server 控制台修改配置文件，将 <code>user.name</code> 属性修改为 <code>灶门祢豆子</code>，此时观察控制台日志，你会发现我们已经成功刷新了配置</p><p><img src="/SpringCloud/Lusifer_20190630183430.png" alt></p><h3 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><p>通过浏览器访问 <a href="http://localhost:8080/config" target="_blank" rel="noopener">http://localhost:8080/config</a> ，浏览器输出如下</p><pre><code>Hello Nacos Provider 灶门祢豆子</code></pre><blockquote><p><strong>提示：</strong> 你可以使用 <code>spring.cloud.nacos.config.refresh.enabled=false</code> 来关闭动态刷新</p></blockquote><h2 id="附：扩展阅读"><a href="#附：扩展阅读" class="headerlink" title="附：扩展阅读"></a>附：扩展阅读</h2><h3 id="Endpoint-信息查看"><a href="#Endpoint-信息查看" class="headerlink" title="Endpoint 信息查看"></a>Endpoint 信息查看</h3><p>Spring Boot 应用支持通过 Endpoint 来暴露相关信息，Nacos Config Starter 也支持这一点。在使用之前需要在 maven 中添加 <code>spring-boot-starter-actuator</code> 依赖，并在配置中允许 Endpoints 的访问。</p><ul><li><strong>nacos-discovery：</strong> <a href="http://localhost:8080/actuator/nacos-discovery" target="_blank" rel="noopener">http://localhost:8080/actuator/nacos-discovery</a></li></ul><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"subscribe"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"jsonFromServer"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>            <span class="token property">"groupName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT_GROUP"</span><span class="token punctuation">,</span>            <span class="token property">"clusters"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>            <span class="token property">"cacheMillis"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>            <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"lastRefTime"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"checksum"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"allIPs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>            <span class="token property">"valid"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"keyEncoded"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"jsonFromServer"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span>            <span class="token property">"groupName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT_GROUP"</span><span class="token punctuation">,</span>            <span class="token property">"clusters"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>            <span class="token property">"cacheMillis"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>            <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"lastRefTime"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"checksum"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"allIPs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span>            <span class="token property">"valid"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"keyEncoded"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"NacosDiscoveryProperties"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"serverAddr"</span><span class="token operator">:</span> <span class="token string">"192.168.141.132:8848"</span><span class="token punctuation">,</span>        <span class="token property">"endpoint"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"watchDelay"</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>        <span class="token property">"logName"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"service"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>        <span class="token property">"weight"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"clusterName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT"</span><span class="token punctuation">,</span>        <span class="token property">"namingLoadCacheAtStart"</span><span class="token operator">:</span> <span class="token string">"false"</span><span class="token punctuation">,</span>        <span class="token property">"metadata"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"preserved.register.source"</span><span class="token operator">:</span> <span class="token string">"SPRING_CLOUD"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"registerEnabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"192.168.141.1"</span><span class="token punctuation">,</span>        <span class="token property">"networkInterface"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>        <span class="token property">"secure"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"accessKey"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"secretKey"</span><span class="token operator">:</span> <span class="token string">""</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><strong>nacos-config：</strong> <a href="http://localhost:8080/actuator/nacos-config" target="_blank" rel="noopener">http://localhost:8080/actuator/nacos-config</a></li></ul><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"NacosConfigProperties"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"serverAddr"</span><span class="token operator">:</span> <span class="token string">"192.168.141.132:8848"</span><span class="token punctuation">,</span>        <span class="token property">"encode"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"group"</span><span class="token operator">:</span> <span class="token string">"DEFAULT_GROUP"</span><span class="token punctuation">,</span>        <span class="token property">"prefix"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"fileExtension"</span><span class="token operator">:</span> <span class="token string">"yaml"</span><span class="token punctuation">,</span>        <span class="token property">"timeout"</span><span class="token operator">:</span> <span class="token number">3000</span><span class="token punctuation">,</span>        <span class="token property">"endpoint"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"accessKey"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"secretKey"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"contextPath"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"clusterName"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"sharedDataids"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"refreshableDataids"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>        <span class="token property">"extConfig"</span><span class="token operator">:</span> <span class="token null">null</span>    <span class="token punctuation">}</span><span class="token punctuation">,</span>    <span class="token property">"RefreshHistory"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"timestamp"</span><span class="token operator">:</span> <span class="token string">"2019-06-30 18:30:45"</span><span class="token punctuation">,</span>            <span class="token property">"dataId"</span><span class="token operator">:</span> <span class="token string">"service-consumer-config.yaml"</span><span class="token punctuation">,</span>            <span class="token property">"md5"</span><span class="token operator">:</span> <span class="token string">"690fd78b5ae9fac5b545c1a8d7ec4e2b"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"timestamp"</span><span class="token operator">:</span> <span class="token string">"2019-06-30 18:22:08"</span><span class="token punctuation">,</span>            <span class="token property">"dataId"</span><span class="token operator">:</span> <span class="token string">"service-consumer-config.yaml"</span><span class="token punctuation">,</span>            <span class="token property">"md5"</span><span class="token operator">:</span> <span class="token string">"40b12ffc9d305ec1cad65d606e8f4708"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"Sources"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"lastSynced"</span><span class="token operator">:</span> <span class="token string">"2019-06-30 18:22:05"</span><span class="token punctuation">,</span>            <span class="token property">"dataId"</span><span class="token operator">:</span> <span class="token string">"service-consumer-config.yaml"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> Sources 表示此客户端从哪些 Nacos Config 配置项中获取了信息，RefreshHistory 表示动态刷新的历史记录，最多保存20条，NacosConfigProperties 则为 Nacos Config Starter 本身的配置</p></blockquote><h3 id="更多配置"><a href="#更多配置" class="headerlink" title="更多配置"></a>更多配置</h3><table><thead><tr><th>配置项</th><th>key</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>服务端地址</td><td>spring.cloud.nacos.config.server-addr</td><td></td><td></td></tr><tr><td>DataId前缀</td><td>spring.cloud.nacos.config.prefix</td><td></td><td>spring.application.name</td></tr><tr><td>Group</td><td>spring.cloud.nacos.config.group</td><td>DEFAULT_GROUP</td><td></td></tr><tr><td>dataID后缀及内容文件格式</td><td>spring.cloud.nacos.config.file-extension</td><td>properties</td><td>dataId的后缀，同时也是配置内容的文件格式，目前只支持 properties</td></tr><tr><td>配置内容的编码方式</td><td>spring.cloud.nacos.config.encode</td><td>UTF-8</td><td>配置的编码</td></tr><tr><td>获取配置的超时时间</td><td>spring.cloud.nacos.config.timeout</td><td>3000</td><td>单位为 ms</td></tr><tr><td>配置的命名空间</td><td>spring.cloud.nacos.config.namespace</td><td></td><td>常用场景之一是不同环境的配置的区分隔离，例如开发测试环境和生产环境的资源隔离等。</td></tr><tr><td>AccessKey</td><td>spring.cloud.nacos.config.access-key</td><td></td><td></td></tr><tr><td>SecretKey</td><td>spring.cloud.nacos.config.secret-key</td><td></td><td></td></tr><tr><td>相对路径</td><td>spring.cloud.nacos.config.context-path</td><td></td><td>服务端 API 的相对路径</td></tr><tr><td>接入点</td><td>spring.cloud.nacos.config.endpoint</td><td>UTF-8</td><td>地域的某个服务的入口域名，通过此域名可以动态地拿到服务端地址</td></tr><tr><td>是否开启监听和自动刷新</td><td>spring.cloud.nacos.config.refresh.enabled</td><td>true</td><td></td></tr></tbody></table><h3 id="更多介绍"><a href="#更多介绍" class="headerlink" title="更多介绍"></a>更多介绍</h3><p>Nacos为用户提供包括动态服务发现，配置管理，服务管理等服务基础设施，帮助用户更灵活，更轻松地构建，交付和管理他们的微服务平台，基于 Nacos, 用户可以更快速的构建以“服务”为中心的现代云原生应用。Nacos 可以和 <strong>Spring Cloud</strong>、<strong>Kubernetes/CNCF</strong>、<strong>Dubbo</strong> 等微服务生态无缝融合，为用户提供更卓越的体验</p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos Feign 客户端</title>
      <link href="/2019/11/24/052.Spring%20Cloud%20Alibaba-Nacos-Feign/"/>
      <url>/2019/11/24/052.Spring%20Cloud%20Alibaba-Nacos-Feign/</url>
      
        <content type="html"><![CDATA[<h1 id="Nacos-Feign-客户端"><a href="#Nacos-Feign-客户端" class="headerlink" title="Nacos Feign 客户端"></a>Nacos Feign 客户端</h1><h2 id="什么是-Feign"><a href="#什么是-Feign" class="headerlink" title="什么是 Feign"></a>什么是 Feign</h2><p>Feign 是一个声明式的伪 HTTP 客户端，它使得写 HTTP 客户端变得更简单。使用 Feign，只需要创建一个接口并注解。它具有可插拔的注解特性，可使用 Feign 注解和 JAX-RS 注解。Feign 支持可插拔的编码器和解码器。Feign 默认集成了 Ribbon，Nacos 也很好的兼容了 Feign，默认实现了负载均衡的效果</p><ul><li>Feign 采用的是基于接口的注解</li><li>Feign 整合了 Ribbon</li></ul><h2 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h2><p>在 <code>hello-spring-cloud-alibaba-consumer</code> 项目中增加 <code>org.springframework.cloud:spring-cloud-starter-openfeign</code> 依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h2><p>通过 <code>@EnableFeignClients</code> 注解开启 Feign 功能</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span>EnableDiscoveryClient<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>EnableFeignClients<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token annotation punctuation">@EnableFeignClients</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ConsumerApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Service"><a href="#Service" class="headerlink" title="Service"></a>Service</h2><p>创建业务结构，通过 <code>@FeignClient(&quot;服务名&quot;)</code> 注解来指定调用哪个服务</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>service<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span>FeignClient<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"service-provider"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">EchoService</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/echo/{string}"</span><span class="token punctuation">)</span>    String <span class="token function">echo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span><span class="token punctuation">(</span><span class="token string">"string"</span><span class="token punctuation">)</span> String string<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>service<span class="token punctuation">.</span>EchoService<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestEchoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> EchoService echoService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/feign/echo/{str}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> String str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> echoService<span class="token punctuation">.</span><span class="token function">echo</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h2><p>通过浏览器访问 <a href="http://localhost:8080/feign/echo/hi" target="_blank" rel="noopener">http://localhost:8080/feign/echo/hi</a></p><pre><code>Hello Nacos Provider hi</code></pre><h2 id="配置负载均衡"><a href="#配置负载均衡" class="headerlink" title="配置负载均衡"></a>配置负载均衡</h2><ul><li>修改 <code>service-provider</code> 服务的端口号如 8071，并启动多个实例，IDEA 中依次点击 <strong>Run</strong> -&gt; <strong>Edit Configurations</strong> 并勾选 <strong>Allow parallel run</strong> 以允许 IDEA 多实例运行项目</li></ul><p><img src="/SpringCloud/Lusifer_20190630164316.png" alt></p><ul><li>再次启动 <code>service-provider</code> 实例，IDEA Spring Boot 面板可以看到</li></ul><p><img src="/SpringCloud/Lusifer_20190630170016.png" alt></p><ul><li>Nacos Server 控制台可以看到 <code>service-provider</code> 有 2 个实例</li></ul><p><img src="/SpringCloud/Lusifer_20190630170211.png" alt></p><blockquote><p><strong>服务：</strong> 通过预定义接口网络访问的提供给客户端的软件功能<br><strong>服务名：</strong> 服务提供的标识，通过该标识可以唯一确定其指代的服务<br><strong>服务分组：</strong> 不同的服务可以归类到同一分组<br><strong>虚拟集群：</strong> 同一个服务下的所有服务实例组成一个默认集群，集群可以被进一步按需求划分，划分的单位可以是虚拟集群<br><strong>实例：</strong> 提供一个或多个服务的具有可访问网络地址（IP:Port）的进程<br><strong>权重：</strong> 实例级别的配置。权重为浮点数。权重越大，分配给该实例的流量越大<br><strong>健康保护阈值：</strong> 为了防止因过多实例 (Instance) 不健康导致流量全部流向健康实例 (Instance) ，继而造成流量压力把健康 健康实例 (Instance) 压垮并形成雪崩效应，应将健康保护阈值定义为一个 0 到 1 之间的浮点数。当域名健康实例 (Instance) 占总服务实例 (Instance) 的比例小于该值时，无论实例 (Instance) 是否健康，都会将这个实例 (Instance) 返回给客户端。这样做虽然损失了一部分流量，但是保证了集群的剩余健康实例 (Instance) 能正常工作</p></blockquote><p><img src="/SpringCloud/Lusifer_20190630172808.png" alt></p><ul><li>在 <code>service-provider</code> 项目的 <code>EchoController</code> 中增加测试方法</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"${server.port}"</span><span class="token punctuation">)</span><span class="token keyword">private</span> String port<span class="token punctuation">;</span><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/lb"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">lb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> <span class="token string">"Hello Nacos Provider i am from port: "</span> <span class="token operator">+</span> port<span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>在 <code>service-consumer</code> 项目的 <code>EchoService</code> 中增加测试方法</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/lb"</span><span class="token punctuation">)</span>String <span class="token function">lb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>在 <code>service-consumer</code> 项目的 <code>TestEchoController</code> 中增加测试方法</li></ul><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/lb"</span><span class="token punctuation">)</span><span class="token keyword">public</span> String <span class="token function">lb</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">return</span> echoService<span class="token punctuation">.</span><span class="token function">lb</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>重启服务，通过浏览器访问 <a href="http://localhost:8080/lb" target="_blank" rel="noopener">http://localhost:8080/lb</a> ，反复刷新浏览器，浏览器交替显示</li></ul><pre><code>Hello Nacos Provider i am from port: 8070Hello Nacos Provider i am from port: 8071</code></pre><h2 id="附：扩展阅读"><a href="#附：扩展阅读" class="headerlink" title="附：扩展阅读"></a>附：扩展阅读</h2><h3 id="常见负载均衡策略"><a href="#常见负载均衡策略" class="headerlink" title="常见负载均衡策略"></a>常见负载均衡策略</h3><p>负载主机可以提供很多种负载均衡方法，也就是我们常说的调度方法或算法</p><h4 id="轮循"><a href="#轮循" class="headerlink" title="轮循"></a>轮循</h4><p><strong>Round Robin：</strong> 这种方法会将收到的请求循环分配到服务器集群中的每台机器，即有效服务器。如果使用这种方式，所有的标记进入虚拟服务的服务器应该有相近的资源容量 以及负载形同的应用程序。如果所有的服务器有相同或者相近的性能那么选择这种方式会使服务器负载形同。基于这个前提，轮循调度是一个简单而有效的分配请求 的方式。然而对于服务器不同的情况，选择这种方式就意味着能力比较弱的服务器也会在下一轮循环中接受轮循，即使这个服务器已经不能再处理当前这个请求了。 这可能导致能力较弱的服务器超载。</p><h4 id="加权轮循"><a href="#加权轮循" class="headerlink" title="加权轮循"></a>加权轮循</h4><p><strong>Weighted Round Robin：</strong> 这种算法解决了简单轮循调度算法的缺点：传入的请求按顺序被分配到集群中服务器，但是会考虑提前为每台服务器分配的权重。管理员只是简单的通过服务 器的处理能力来定义各台服务器的权重。例如，能力最强的服务器 A 给的权重是 100，同时能力最低的服务器给的权重是 50。这意味着在服务器 B 接收到第一个 请求之前前，服务器 A 会连续的接受到 2 个请求，以此类推。</p><h4 id="最少连接数"><a href="#最少连接数" class="headerlink" title="最少连接数"></a>最少连接数</h4><p><strong>Least Connection：</strong> 以上两种方法都没有考虑的是系统不能识别在给定的时间里保持了多少连接。因此可能发生，服务器 B 服务器收到的连接比服务器 A 少但是它已经超载，因为 服务器 B 上的用户打开连接持续的时间更长。这就是说连接数即服务器的负载是累加的。这种潜在的问题可以通过 “最少连接数” 算法来避免：传入的请求是根据每 台服务器当前所打开的连接数来分配的。即活跃连接数最少的服务器会自动接收下一个传入的请求。接本上和简单轮询的原则相同：所有拥有虚拟服务的服务器资源 容量应该相近。值得注意的是，在流量率低的配置环境中，各服务器的流量并不是相同的，会优先考虑第一台服务器。这是因为，如果所有的服务器是相同的，那么 第一个服务器优先，直到第一台服务器有连续的活跃流量，否则总是会优先选择第一台服务器。</p><h4 id="最少连接数慢启动时间"><a href="#最少连接数慢启动时间" class="headerlink" title="最少连接数慢启动时间"></a>最少连接数慢启动时间</h4><p><strong>Least Connection Slow Start Time：</strong> 对最少连接数和带权重的最小连接数调度方法来说，当一个服务器刚加入线上环境是，可以为其配置一个时间段，在这段时间内连接数是有限制的而且是缓慢 增加的。这为服务器提供了一个‘过渡时间’以保证这个服务器不会因为刚启动后因为分配的连接数过多而超载。这个值在 L7 配置界面设置。</p><h4 id="加权最少连接"><a href="#加权最少连接" class="headerlink" title="加权最少连接"></a>加权最少连接</h4><p><strong>Weighted Least Connection：</strong> 如果服务器的资源容量各不相同，那么 “加权最少连接” 方法更合适：由管理员根据服务器情况定制的权重所决定的活跃连接数一般提供了一种对服务器非常 平衡的利用，因为他它借鉴了最少连接和权重两者的优势。通常，这是一个非常公平的分配方式，因为它使用了连接数和服务器权重比例；集群中比例最低的服务器 自动接收下一个请求。但是请注意，在低流量情况中使用这种方法时，请参考 “最小连接数” 方法中的注意事项。</p><h4 id="基于代理的自适应负载均衡"><a href="#基于代理的自适应负载均衡" class="headerlink" title="基于代理的自适应负载均衡"></a>基于代理的自适应负载均衡</h4><p><strong>Agent Based Adaptive Balancing：</strong> 除了上述方法之外，负载主机包含一个自适用逻辑用来定时监测服务器状态和该服务器的权重。对于非常强大的 “基于代理的自适应负载均衡” 方法来说，负 载主机以这种方式来定时检测所有服务器负载情况：每台服务器都必须提供一个包含文件，这个文件包含一个 0~99 的数字用来标明改服务器的实际负载情况 (0 = 空前，99 = 超载，101 = 失败，102 = 管理员禁用)，而服务器同构 http get 方法来获取这个文件；同时对集群中服务器来说，以二进制文件形式提供自身负载情况也是该服务器工作之一，然而，并没有限制服务器如何计算自身的负载 情况。根据服务器整体负载情况，有两种策略可以选择：在常规的操作中，调度算法通过收集的服务器负载值和分配给该服务器的连接数的比例计算出一个权重比 例。因此，如果一个服务器负载过大，权重会通过系统透明的作重新调整。和加权轮循调度方法一样，不正确的分配可以被记录下来使得可以有效的为不同服务器分 配不同的权重。然而，在流量非常低的环境下，服务器报上来的负载值将不能建立一个有代表性的样本；那么基于这些值来分配负载的话将导致失控以及指令震荡。 因此，在这种情况下更合理的做法是基于静态的权重比来计算负载分配。当所有服务器的负载低于管理员定义的下限时，负载主机就会自动切换为加权轮循方式来分 配请求；如果负载大于管理员定义的下限，那么负载主机又会切换回自适应方式。</p><h4 id="固定权重"><a href="#固定权重" class="headerlink" title="固定权重"></a>固定权重</h4><p><strong>Fixed Weighted：</strong> 最高权重只有在其他服务器的权重值都很低时才使用。然而，如果最高权重的服务器下降，则下一个最高优先级的服务器将为客户端服务。这种方式中每个真实服务器的权重需要基于服务器优先级来配置。</p><h4 id="加权响应"><a href="#加权响应" class="headerlink" title="加权响应"></a>加权响应</h4><p><strong>Weighted Response：</strong> 流量的调度是通过加权轮循方式。加权轮循中所使用的权重是根据服务器有效性检测的响应时间来计算。每个有效性检测都会被计时，用来标记它响应成功花 了多长时间。但是需要注意的是，这种方式假定服务器心跳检测是基于机器的快慢，但是这种假设也许不总是能够成立。所有服务器在虚拟服务上的响应时间的总和 加在一起，通过这个值来计算单个服务物理服务器的权重；这个权重值大约每 15 秒计算一次。</p><h4 id="源-IP-哈希"><a href="#源-IP-哈希" class="headerlink" title="源 IP 哈希"></a>源 IP 哈希</h4><p><strong>Source IP Hash：</strong> 这种方式通过生成请求源 IP 的哈希值，并通过这个哈希值来找到正确的真实服务器。这意味着对于同一主机来说他对应的服务器总是相同。使用这种方式，你不需要保存任何源 IP。但是需要注意，这种方式可能导致服务器负载不平衡。</p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos 服务注册与发现</title>
      <link href="/2019/11/24/051.Spring%20Cloud%20Alibaba-Nacos-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/"/>
      <url>/2019/11/24/051.Spring%20Cloud%20Alibaba-Nacos-%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Nacos-服务注册与发现"><a href="#Nacos-服务注册与发现" class="headerlink" title="Nacos 服务注册与发现"></a>Nacos 服务注册与发现</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><blockquote><p><strong>服务注册中心：</strong> 存储服务实例和服务负载均衡策略的数据库</p></blockquote><p>本节通过实现一个简单的 <code>echo service</code> 演示如何在您的 Spring Cloud 项目中启用 Nacos 的服务发现功能，如下图示:</p><p><img src="/SpringCloud/1542119181336-b6dc0fc1-ed46-43a7-9e5f-68c9ca344d60.png" alt></p><h2 id="服务提供者"><a href="#服务提供者" class="headerlink" title="服务提供者"></a>服务提供者</h2><blockquote><p><strong>服务提供方：</strong> 是指提供可复用和可调用服务的应用方</p></blockquote><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><p>创建一个名为 <code>hello-spring-cloud-alibaba-provider</code> 的服务提供者项目，<code>pom.xml</code> 配置如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">></span></span>../pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba-provider<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2018-Now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot End --></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Cloud Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Cloud End --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.funtl.spring.cloud.alibaba.provider.ProviderApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><p>在 <code>application.yml</code> 中配置 Nacos Server 的地址</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 服务名</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>provider  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 服务注册中心</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 服务端口</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8070</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 端点检查（健康检查）</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Application"><a href="#Application" class="headerlink" title="Application"></a>Application</h3><p>通过 Spring Cloud 原生注解 <code>@EnableDiscoveryClient</code> 开启服务注册发现功能</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>provider<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span>EnableDiscoveryClient<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProviderApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ProviderApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Controller"><a href="#Controller" class="headerlink" title="Controller"></a>Controller</h3><p>编写一个 <code>RestController</code> 提供 RESTFul API 用于测试提供者</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>provider<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">EchoController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/echo/{string}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> String string<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Hello Nacos Provider "</span> <span class="token operator">+</span> string<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证是否成功"><a href="#验证是否成功" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><p>通过浏览器访问 <a href="http://192.168.141.132:8848/nacos" target="_blank" rel="noopener">http://192.168.141.132:8848/nacos</a> Nacos Server 网址</p><p><img src="/SpringCloud/Lusifer_20190630151204.png" alt></p><p>你会发现一个服务已经注册在服务中了，服务名为 <code>service-provider</code>，通过浏览器访问 <a href="http://localhost:8070/echo/hi" target="_blank" rel="noopener">http://localhost:8070/echo/hi</a></p><pre><code>Hello Nacos Provider hi</code></pre><h3 id="服务端点检查"><a href="#服务端点检查" class="headerlink" title="服务端点检查"></a>服务端点检查</h3><blockquote><p><strong>健康检查：</strong> 以指定方式检查服务下挂载的实例 (Instance) 的健康度，从而确认该实例 (Instance) 是否能提供服务。根据检查结果，实例 (Instance) 会被判断为健康或不健康。对服务发起解析请求时，不健康的实例 (Instance) 不会返回给客户端。</p></blockquote><p>通过浏览器访问 <a href="http://localhost:8070/actuator/nacos-discovery" target="_blank" rel="noopener">http://localhost:8070/actuator/nacos-discovery</a></p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"subscribe"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"jsonFromServer"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span>            <span class="token property">"groupName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT_GROUP"</span><span class="token punctuation">,</span>            <span class="token property">"clusters"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>            <span class="token property">"cacheMillis"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>            <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"lastRefTime"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"checksum"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"allIPs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span>            <span class="token property">"valid"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"keyEncoded"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"jsonFromServer"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>            <span class="token property">"groupName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT_GROUP"</span><span class="token punctuation">,</span>            <span class="token property">"clusters"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>            <span class="token property">"cacheMillis"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>            <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"lastRefTime"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"checksum"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"allIPs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>            <span class="token property">"valid"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"keyEncoded"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"NacosDiscoveryProperties"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"serverAddr"</span><span class="token operator">:</span> <span class="token string">"192.168.141.132:8848"</span><span class="token punctuation">,</span>        <span class="token property">"endpoint"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"watchDelay"</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>        <span class="token property">"logName"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"service"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span>        <span class="token property">"weight"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"clusterName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT"</span><span class="token punctuation">,</span>        <span class="token property">"namingLoadCacheAtStart"</span><span class="token operator">:</span> <span class="token string">"false"</span><span class="token punctuation">,</span>        <span class="token property">"metadata"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"preserved.register.source"</span><span class="token operator">:</span> <span class="token string">"SPRING_CLOUD"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"registerEnabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"192.168.141.1"</span><span class="token punctuation">,</span>        <span class="token property">"networkInterface"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">8070</span><span class="token punctuation">,</span>        <span class="token property">"secure"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"accessKey"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"secretKey"</span><span class="token operator">:</span> <span class="token string">""</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="服务消费者"><a href="#服务消费者" class="headerlink" title="服务消费者"></a>服务消费者</h2><blockquote><p><strong>服务消费方：</strong> 是指会发起对某个服务调用的应用方</p></blockquote><p>服务消费者的创建与服务提供者大同小异，这里采用最原始的一种方式，即显示的使用 <strong>LoadBalanceClient</strong> 和 <strong>RestTemplate</strong> 结合的方式来访问</p><h3 id="POM-1"><a href="#POM-1" class="headerlink" title="POM"></a>POM</h3><p>创建一个名为 <code>hello-spring-cloud-alibaba-consumer</code> 的服务消费者项目，<code>pom.xml</code> 配置如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">></span></span>../pom.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>relativePath</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba-consumer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inceptionYear</span><span class="token punctuation">></span></span>2018-Now<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inceptionYear</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Boot End --></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Cloud Begin --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- Spring Cloud End --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.funtl.spring.cloud.alibaba.consumer.ConsumerApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml-1"><a href="#application-yml-1" class="headerlink" title="application.yml"></a>application.yml</h3><p>在 <code>application.yml</code> 中配置 Nacos Server 的地址</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 服务名</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> service<span class="token punctuation">-</span>consumer  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token comment" spellcheck="true"># 服务注册中心</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> 192.168.141.132<span class="token punctuation">:</span><span class="token number">8848</span><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 服务端口</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8080</span><span class="token key atrule">management</span><span class="token punctuation">:</span>  <span class="token comment" spellcheck="true"># 端点检查（健康检查）</span>  <span class="token key atrule">endpoints</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">exposure</span><span class="token punctuation">:</span>        <span class="token key atrule">include</span><span class="token punctuation">:</span> <span class="token string">"*"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Application-1"><a href="#Application-1" class="headerlink" title="Application"></a>Application</h3><p>通过 Spring Cloud 原生注解 <code>@EnableDiscoveryClient</code> 开启服务注册发现功能</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>SpringApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span>SpringBootApplication<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>discovery<span class="token punctuation">.</span>EnableDiscoveryClient<span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token annotation punctuation">@EnableDiscoveryClient</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerApplication</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span>String<span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">{</span>        SpringApplication<span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span>ConsumerApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><p>创建一个 <strong>Java 配置类</strong>，主要作用是为了注入 <strong>RestTemplate</strong></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>configure<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span>LoadBalanced<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Bean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Configuration<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span>RestTemplate<span class="token punctuation">;</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConsumerConfiguration</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@LoadBalanced</span>    <span class="token keyword">public</span> RestTemplate <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Controller-1"><a href="#Controller-1" class="headerlink" title="Controller"></a>Controller</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>alibaba<span class="token punctuation">.</span>consumer<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>PathVariable<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span>RestTemplate<span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> RestTemplate restTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">public</span> <span class="token function">TestController</span><span class="token punctuation">(</span>RestTemplate restTemplate<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>restTemplate <span class="token operator">=</span> restTemplate<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/echo/{str}"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">echo</span><span class="token punctuation">(</span><span class="token annotation punctuation">@PathVariable</span> String str<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token comment" spellcheck="true">// 使用服务名请求服务提供者</span>        <span class="token keyword">return</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span><span class="token string">"http://service-provider/echo/"</span> <span class="token operator">+</span> str<span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证是否成功-1"><a href="#验证是否成功-1" class="headerlink" title="验证是否成功"></a>验证是否成功</h3><p>通过浏览器访问 <a href="http://192.168.141.132:8848/nacos" target="_blank" rel="noopener">http://192.168.141.132:8848/nacos</a> Nacos Server 网址</p><p><img src="/SpringCloud/Lusifer_20190630161151.png" alt></p><p>你会发现一个服务已经注册在服务中了，服务名为 <code>service-consumer</code>，通过浏览器访问 <a href="http://localhost:8080/echo/hi" target="_blank" rel="noopener">http://localhost:8080/echo/hi</a></p><pre><code>Hello Nacos Provider hi</code></pre><h3 id="服务端点检查-1"><a href="#服务端点检查-1" class="headerlink" title="服务端点检查"></a>服务端点检查</h3><p>通过浏览器访问 <a href="http://localhost:8080/actuator/nacos-discovery" target="_blank" rel="noopener">http://localhost:8080/actuator/nacos-discovery</a></p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>    <span class="token property">"subscribe"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token punctuation">{</span>            <span class="token property">"jsonFromServer"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span>            <span class="token property">"groupName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT_GROUP"</span><span class="token punctuation">,</span>            <span class="token property">"clusters"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>            <span class="token property">"cacheMillis"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>            <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"lastRefTime"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"checksum"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"allIPs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span><span class="token punctuation">,</span>            <span class="token property">"valid"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"keyEncoded"</span><span class="token operator">:</span> <span class="token string">"service-provider"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token punctuation">{</span>            <span class="token property">"jsonFromServer"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>            <span class="token property">"groupName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT_GROUP"</span><span class="token punctuation">,</span>            <span class="token property">"clusters"</span><span class="token operator">:</span> <span class="token null">null</span><span class="token punctuation">,</span>            <span class="token property">"cacheMillis"</span><span class="token operator">:</span> <span class="token number">1000</span><span class="token punctuation">,</span>            <span class="token property">"hosts"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>            <span class="token property">"lastRefTime"</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>            <span class="token property">"checksum"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>            <span class="token property">"allIPs"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>            <span class="token property">"key"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>            <span class="token property">"valid"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>            <span class="token property">"keyEncoded"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span>        <span class="token punctuation">}</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"NacosDiscoveryProperties"</span><span class="token operator">:</span> <span class="token punctuation">{</span>        <span class="token property">"serverAddr"</span><span class="token operator">:</span> <span class="token string">"192.168.141.132:8848"</span><span class="token punctuation">,</span>        <span class="token property">"endpoint"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"namespace"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"watchDelay"</span><span class="token operator">:</span> <span class="token number">30000</span><span class="token punctuation">,</span>        <span class="token property">"logName"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"service"</span><span class="token operator">:</span> <span class="token string">"service-consumer"</span><span class="token punctuation">,</span>        <span class="token property">"weight"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"clusterName"</span><span class="token operator">:</span> <span class="token string">"DEFAULT"</span><span class="token punctuation">,</span>        <span class="token property">"namingLoadCacheAtStart"</span><span class="token operator">:</span> <span class="token string">"false"</span><span class="token punctuation">,</span>        <span class="token property">"metadata"</span><span class="token operator">:</span> <span class="token punctuation">{</span>            <span class="token property">"preserved.register.source"</span><span class="token operator">:</span> <span class="token string">"SPRING_CLOUD"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        <span class="token property">"registerEnabled"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"ip"</span><span class="token operator">:</span> <span class="token string">"192.168.141.1"</span><span class="token punctuation">,</span>        <span class="token property">"networkInterface"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"port"</span><span class="token operator">:</span> <span class="token number">8080</span><span class="token punctuation">,</span>        <span class="token property">"secure"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>        <span class="token property">"accessKey"</span><span class="token operator">:</span> <span class="token string">""</span><span class="token punctuation">,</span>        <span class="token property">"secretKey"</span><span class="token operator">:</span> <span class="token string">""</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos 安装</title>
      <link href="/2019/11/24/050.Spring%20Cloud%20Alibaba-Nacos-%E5%AE%89%E8%A3%85/"/>
      <url>/2019/11/24/050.Spring%20Cloud%20Alibaba-Nacos-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="Nacos-安装"><a href="#Nacos-安装" class="headerlink" title="Nacos 安装"></a>Nacos 安装</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Nacos 官方提供了 Docker 版本，方便我们快速部署，操作步骤如下</p><h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="Clone-项目"><a href="#Clone-项目" class="headerlink" title="Clone 项目"></a>Clone 项目</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">git</span> clone https://github.com/nacos-group/nacos-docker.git<span class="token function">cd</span> nacos-docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="单机模式"><a href="#单机模式" class="headerlink" title="单机模式"></a>单机模式</h3><pre class="line-numbers language-bash"><code class="language-bash">docker-compose -f example/standalone-mysql.yaml up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="查看日志"><a href="#查看日志" class="headerlink" title="查看日志"></a>查看日志</h3><pre class="line-numbers language-bash"><code class="language-bash">docker-compose -f example/standalone-mysql.yaml logs -f<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="Nacos-控制台"><a href="#Nacos-控制台" class="headerlink" title="Nacos 控制台"></a>Nacos 控制台</h2><p><a href="http://192.168.141.132:8848/nacos" target="_blank" rel="noopener">http://192.168.141.132:8848/nacos</a></p><h3 id="登录"><a href="#登录" class="headerlink" title="登录"></a>登录</h3><p><img src="/SpringCloud/Lusifer_20190628084940.png" alt></p><ul><li><strong>账号：</strong> nacos</li><li><strong>密码：</strong> nacos</li></ul><h3 id="访问"><a href="#访问" class="headerlink" title="访问"></a>访问</h3><p><img src="/SpringCloud/Lusifer_20190628085052.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nacos 注册中心</title>
      <link href="/2019/11/24/049.Spring%20Cloud%20Alibaba-Nacos-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/"/>
      <url>/2019/11/24/049.Spring%20Cloud%20Alibaba-Nacos-%E6%B3%A8%E5%86%8C%E4%B8%AD%E5%BF%83/</url>
      
        <content type="html"><![CDATA[<h1 id="Nacos-注册中心"><a href="#Nacos-注册中心" class="headerlink" title="Nacos 注册中心"></a>Nacos 注册中心</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Nacos 致力于帮助您发现、配置和管理微服务。Nacos 提供了一组简单易用的特性集，帮助您快速实现动态服务发现、服务配置、服务元数据及流量管理。</p><p>Nacos 帮助您更敏捷和容易地构建、交付和管理微服务平台。 Nacos 是构建以 “服务” 为中心的现代应用架构 (例如微服务范式、云原生范式) 的服务基础设施。</p><p><a href="https://nacos.io/zh-cn/index.html" target="_blank" rel="noopener">Nacos 官网</a></p><h2 id="关键特性"><a href="#关键特性" class="headerlink" title="关键特性"></a>关键特性</h2><h3 id="服务发现和服务健康监测"><a href="#服务发现和服务健康监测" class="headerlink" title="服务发现和服务健康监测"></a>服务发现和服务健康监测</h3><p>Nacos 支持基于 DNS 和基于 RPC 的服务发现。服务提供者使用 原生 SDK、OpenAPI、或一个 独立的 Agent TODO 注册 Service 后，服务消费者可以使用 DNS TODO 或 HTTP&amp;API 查找和发现服务。</p><p>Nacos 提供对服务的实时的健康检查，阻止向不健康的主机或服务实例发送请求。Nacos 支持传输层 (PING 或 TCP) 和应用层 (如 HTTP、MySQL、用户自定义）的健康检查。 对于复杂的云环境和网络拓扑环境中（如 VPC、边缘网络等）服务的健康检查，Nacos 提供了 agent 上报模式和服务端主动检测 2 种健康检查模式。Nacos 还提供了统一的健康检查仪表盘，帮助您根据健康状态管理服务的可用性及流量。</p><h3 id="动态配置服务"><a href="#动态配置服务" class="headerlink" title="动态配置服务"></a>动态配置服务</h3><p>动态配置服务可以让您以中心化、外部化和动态化的方式管理所有环境的应用配置和服务配置。动态配置消除了配置变更时重新部署应用和服务的需要，让配置管理变得更加高效和敏捷。配置中心化管理让实现无状态服务变得更简单，让服务按需弹性扩展变得更容易。</p><p>Nacos 提供了一个简洁易用的 UI 帮助您管理所有的服务和应用的配置。Nacos 还提供包括配置版本跟踪、金丝雀发布、一键回滚配置以及客户端配置更新状态跟踪在内的一系列开箱即用的配置管理特性，帮助您更安全地在生产环境中管理配置变更和降低配置变更带来的风险。</p><h3 id="动态-DNS-服务"><a href="#动态-DNS-服务" class="headerlink" title="动态 DNS 服务"></a>动态 DNS 服务</h3><p>动态 DNS 服务支持权重路由，让您更容易地实现中间层负载均衡、更灵活的路由策略、流量控制以及数据中心内网的简单 DNS 解析服务。动态 DNS 服务还能让您更容易地实现以 DNS 协议为基础的服务发现，以帮助您消除耦合到厂商私有服务发现 API 上的风险。</p><p>Nacos 提供了一些简单的 DNS APIs TODO 帮助您管理服务的关联域名和可用的 IP:PORT 列表.</p><h3 id="服务及其元数据管理"><a href="#服务及其元数据管理" class="headerlink" title="服务及其元数据管理"></a>服务及其元数据管理</h3><p>Nacos 能让您从微服务平台建设的视角管理数据中心的所有服务及元数据，包括管理服务的描述、生命周期、服务的静态依赖分析、服务的健康状态、服务的流量管理、路由及安全策略、服务的 SLA 以及最首要的 metrics 统计数据。</p><h2 id="Nacos-地图"><a href="#Nacos-地图" class="headerlink" title="Nacos 地图"></a>Nacos 地图</h2><p><img src="/SpringCloud/nacosMap.jpg" alt></p><ul><li>特性大图：要从功能特性，非功能特性，全面介绍我们要解的问题域的特性诉求</li><li>架构大图：通过清晰架构，让您快速进入 Nacos 世界</li><li>业务大图：利用当前特性可以支持的业务场景，及其最佳实践</li><li>生态大图：系统梳理 Nacos 和主流技术生态的关系</li><li>优势大图：展示 Nacos 核心竞争力</li><li>战略大图：要从战略到战术层面讲 Nacos 的宏观优势</li></ul><h2 id="Nacos-架构"><a href="#Nacos-架构" class="headerlink" title="Nacos 架构"></a>Nacos 架构</h2><h3 id="基本架构及概念"><a href="#基本架构及概念" class="headerlink" title="基本架构及概念"></a>基本架构及概念</h3><p><img src="/SpringCloud/1561217892717-1418fb9b-7faa-4324-87b9-f1740329f564.jpeg" alt></p><h3 id="服务-Service"><a href="#服务-Service" class="headerlink" title="服务 (Service)"></a>服务 (Service)</h3><p>服务是指一个或一组软件功能（例如特定信息的检索或一组操作的执行），其目的是不同的客户端可以为不同的目的重用（例如通过跨进程的网络调用）。Nacos 支持主流的服务生态，如 Kubernetes Service、gRPC|Dubbo RPC Service 或者 Spring Cloud RESTful Service.</p><h3 id="服务注册中心-Service-Registry"><a href="#服务注册中心-Service-Registry" class="headerlink" title="服务注册中心 (Service Registry)"></a>服务注册中心 (Service Registry)</h3><p>服务注册中心，它是服务，其实例及元数据的数据库。服务实例在启动时注册到服务注册表，并在关闭时注销。服务和路由器的客户端查询服务注册表以查找服务的可用实例。服务注册中心可能会调用服务实例的健康检查 API 来验证它是否能够处理请求。</p><h3 id="服务元数据-Service-Metadata"><a href="#服务元数据-Service-Metadata" class="headerlink" title="服务元数据 (Service Metadata)"></a>服务元数据 (Service Metadata)</h3><p>服务元数据是指包括服务端点 (endpoints)、服务标签、服务版本号、服务实例权重、路由规则、安全策略等描述服务的数据</p><h3 id="服务提供方-Service-Provider"><a href="#服务提供方-Service-Provider" class="headerlink" title="服务提供方 (Service Provider)"></a>服务提供方 (Service Provider)</h3><p>是指提供可复用和可调用服务的应用方</p><h3 id="服务消费方-Service-Consumer"><a href="#服务消费方-Service-Consumer" class="headerlink" title="服务消费方 (Service Consumer)"></a>服务消费方 (Service Consumer)</h3><p>是指会发起对某个服务调用的应用方</p><h3 id="配置-Configuration"><a href="#配置-Configuration" class="headerlink" title="配置 (Configuration)"></a>配置 (Configuration)</h3><p>在系统开发过程中通常会将一些需要变更的参数、变量等从代码中分离出来独立管理，以独立的配置文件的形式存在。目的是让静态的系统工件或者交付物（如 WAR，JAR 包等）更好地和实际的物理运行环境进行适配。配置管理一般包含在系统部署的过程中，由系统管理员或者运维人员完成这个步骤。配置变更是调整系统运行时的行为的有效手段之一。</p><h3 id="配置管理-Configuration-Management"><a href="#配置管理-Configuration-Management" class="headerlink" title="配置管理 (Configuration Management)"></a>配置管理 (Configuration Management)</h3><p>在数据中心中，系统中所有配置的编辑、存储、分发、变更管理、历史版本管理、变更审计等所有与配置相关的活动统称为配置管理。</p><h3 id="名字服务-Naming-Service"><a href="#名字服务-Naming-Service" class="headerlink" title="名字服务 (Naming Service)"></a>名字服务 (Naming Service)</h3><p>提供分布式系统中所有对象 (Object)、实体 (Entity) 的 “名字” 到关联的元数据之间的映射管理服务，例如 ServiceName -&gt; Endpoints Info, Distributed Lock Name -&gt; Lock Owner/Status Info, DNS Domain Name -&gt; IP List, 服务发现和 DNS 就是名字服务的 2 大场景。</p><h3 id="配置服务-Configuration-Service"><a href="#配置服务-Configuration-Service" class="headerlink" title="配置服务 (Configuration Service)"></a>配置服务 (Configuration Service)</h3><p>在服务或者应用运行过程中，提供动态配置或者元数据以及配置管理的服务提供者。</p><h2 id="逻辑架构及其组件介绍"><a href="#逻辑架构及其组件介绍" class="headerlink" title="逻辑架构及其组件介绍"></a>逻辑架构及其组件介绍</h2><p><img src="/SpringCloud/1561217775318-6e408805-18bb-4242-b4e9-83c5b929b469.png" alt></p><ul><li><strong>服务管理：</strong> 实现服务 CRUD，域名 CRUD，服务健康状态检查，服务权重管理等功能</li><li><strong>配置管理：</strong> 实现配置管 CRUD，版本管理，灰度管理，监听管理，推送轨迹，聚合数据等功能</li><li><strong>元数据管理：</strong> 提供元数据 CURD 和打标能力</li><li><strong>插件机制：</strong> 实现三个模块可分可合能力，实现扩展点 SPI 机制</li><li><strong>事件机制：</strong> 实现异步化事件通知，sdk 数据变化异步通知等逻辑</li><li><strong>日志模块：</strong> 管理日志分类，日志级别，日志可移植性（尤其避免冲突），日志格式，异常码 + 帮助文档</li><li><strong>回调机制：</strong> sdk 通知数据，通过统一的模式回调用户处理。接口和数据结构需要具备可扩展性</li><li><strong>寻址模式：</strong> 解决 ip，域名，nameserver、广播等多种寻址模式，需要可扩展</li><li><strong>推送通道：</strong> 解决 server 与存储、server 间、server 与 sdk 间推送性能问题</li><li><strong>容量管理：</strong> 管理每个租户，分组下的容量，防止存储被写爆，影响服务可用性</li><li><strong>流量管理：</strong> 按照租户，分组等多个维度对请求频率，长链接个数，报文大小，请求流控进行控制</li><li><strong>缓存机制：</strong> 容灾目录，本地缓存，server 缓存机制。容灾目录使用需要工具</li><li><strong>启动模式：</strong> 按照单机模式，配置模式，服务模式，dns 模式，或者 all 模式，启动不同的程序 + UI</li><li><strong>一致性协议：</strong> 解决不同数据，不同一致性要求情况下，不同一致性机制</li><li><strong>存储模块：</strong> 解决数据持久化、非持久化存储，解决数据分片问题</li><li><strong>Nameserver：</strong> 解决 namespace 到 clusterid 的路由问题，解决用户环境与 nacos 物理环境映射问题</li><li><strong>CMDB：</strong> 解决元数据存储，与三方 cmdb 系统对接问题，解决应用，人，资源关系</li><li><strong>Metrics：</strong> 暴露标准 metrics 数据，方便与三方监控系统打通</li><li><strong>Trace：</strong> 暴露标准 trace，方便与 SLA 系统打通，日志白平化，推送轨迹等能力，并且可以和计量计费系统打通</li><li><strong>接入管理：</strong> 相当于阿里云开通服务，分配身份、容量、权限过程</li><li><strong>用户管理：</strong> 解决用户管理，登录，sso 等问题</li><li><strong>权限管理：</strong> 解决身份识别，访问控制，角色管理等问题</li><li><strong>审计系统：</strong> 扩展接口方便与不同公司审计系统打通</li><li><strong>通知系统：</strong> 核心数据变更，或者操作，方便通过 SMS 系统打通，通知到对应人数据变更</li><li><strong>OpenAPI：</strong> 暴露标准 Rest 风格 HTTP 接口，简单易用，方便多语言集成</li><li><strong>Console：</strong> 易用控制台，做服务管理、配置管理等操作</li><li><strong>SDK：</strong> 多语言 sdk</li><li><strong>Agent：</strong> dns-f 类似模式，或者与 mesh 等方案集成</li><li><strong>CLI：</strong> 命令行对产品进行轻量化管理，像 git 一样好用</li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringCloud-Nacos </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud-Nacos </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建统一的依赖管理</title>
      <link href="/2019/11/24/048.Spring%20Cloud%20Alibaba-%E5%88%9B%E5%BB%BA%E7%BB%9F%E4%B8%80%E7%9A%84%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/24/048.Spring%20Cloud%20Alibaba-%E5%88%9B%E5%BB%BA%E7%BB%9F%E4%B8%80%E7%9A%84%E4%BE%9D%E8%B5%96%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="创建统一的依赖管理"><a href="#创建统一的依赖管理" class="headerlink" title="创建统一的依赖管理"></a>创建统一的依赖管理</h1><h2 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud.version</span><span class="token punctuation">></span></span>Greenwich.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-cloud-alibaba.verion</span><span class="token punctuation">></span></span>0.9.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-cloud-alibaba.verion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring-cloud.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring-cloud-alibaba.verion}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建项目工程</title>
      <link href="/2019/11/24/047.Spring%20Cloud%20Alibaba-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B/"/>
      <url>/2019/11/24/047.Spring%20Cloud%20Alibaba-%E5%88%9B%E5%BB%BA%E9%A1%B9%E7%9B%AE%E5%B7%A5%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="创建项目工程"><a href="#创建项目工程" class="headerlink" title="创建项目工程"></a>创建项目工程</h1><h2 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- lookup parent from repository --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://www.funtl.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modules</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>module</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>module</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modules</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.source</span><span class="token punctuation">></span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.source</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>maven.compiler.target</span><span class="token punctuation">></span></span>${java.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>maven.compiler.target</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>licenses</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>license</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Apache 2.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://www.apache.org/licenses/LICENSE-2.0.txt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>license</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>licenses</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developers</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>developer</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>liwemin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Lusifer Lee<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>email</span><span class="token punctuation">></span></span>lee.lusifer@gmail.com<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>email</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developer</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>developers</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${project.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profiles</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>profile</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>default<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activation</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>activeByDefault</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activeByDefault</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>activation</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>spring-javaformat.version</span><span class="token punctuation">></span></span>0.0.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>spring-javaformat.version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>io.spring.javaformat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-javaformat-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${spring-javaformat.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-surefire-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>includes</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>include</span><span class="token punctuation">></span></span>**/*Tests.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>include</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>includes</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>**/Abstract*.java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>systemPropertyVariables</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.security.egd</span><span class="token punctuation">></span></span>file:/dev/./urandom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.security.egd</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.awt.headless</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.awt.headless</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>systemPropertyVariables</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-enforcer-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>executions</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>execution</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>enforce-rules<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goals</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>goal</span><span class="token punctuation">></span></span>enforce<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goal</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>goals</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>rules</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bannedDependencies</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>excludes</span><span class="token punctuation">></span></span>                                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclude</span><span class="token punctuation">></span></span>commons-logging:*:*<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclude</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>excludes</span><span class="token punctuation">></span></span>                                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>searchTransitive</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>searchTransitive</span><span class="token punctuation">></span></span>                                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bannedDependencies</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>rules</span><span class="token punctuation">></span></span>                                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>fail</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>fail</span><span class="token punctuation">></span></span>                                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>execution</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>executions</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-install-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.maven.plugins<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>maven-javadoc-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>skip</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>skip</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>                        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>inherited</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>inherited</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profile</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>profiles</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repositories</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepositories</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/milestone<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>false<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>pluginRepository</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>spring-snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Spring Snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>https://repo.spring.io/snapshot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshots</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>enabled</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>enabled</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshots</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>pluginRepositories</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud Alibaba</title>
      <link href="/2019/11/24/046.Spring%20Cloud%20Alibaba-%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/24/046.Spring%20Cloud%20Alibaba-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Cloud-Alibaba"><a href="#Spring-Cloud-Alibaba" class="headerlink" title="Spring Cloud Alibaba"></a>Spring Cloud Alibaba</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p><strong>2018 年 10 月 31 日的凌晨，这个伟大的日子里，Spring Cloud Alibaba 正式入驻了 Spring Cloud 官方孵化器，并在 Maven 中央库发布了第一个版本。</strong></p><p><a href="https://spring.io/blog/2018/10/30/spring-cloud-for-alibaba-0-2-0-released" target="_blank" rel="noopener">Spring Cloud for Alibaba 0.2.0 released</a></p><blockquote><p>The Spring Cloud Alibaba project, consisting of Alibaba’s open-source components and several Alibaba Cloud products, aims to implement and expose well known Spring Framework patterns and abstractions to bring the benefits of Spring Boot and Spring Cloud to Java developers using Alibaba products.</p></blockquote><blockquote><p>Spring Cloud for Alibaba，它是由一些阿里巴巴的开源组件和云产品组成的。这个项目的目的是为了让大家所熟知的 Spring 框架，其优秀的设计模式和抽象理念，以给使用阿里巴巴产品的 Java 开发者带来使用 Spring Boot 和 Spring Cloud 的更多便利。</p></blockquote><p>Spring Cloud Alibaba 致力于提供微服务开发的一站式解决方案。此项目包含开发分布式应用微服务的必需组件，方便开发者通过 Spring Cloud 编程模型轻松使用这些组件来开发分布式应用服务。</p><p>依托 Spring Cloud Alibaba，您只需要添加一些注解和少量配置，就可以将 Spring Cloud 应用接入阿里微服务解决方案，通过阿里中间件来迅速搭建分布式应用系统。</p><p><a href="https://github.com/spring-cloud-incubator/spring-cloud-alibaba/blob/master/README-zh.md" target="_blank" rel="noopener">Spring Cloud Alibaba GitHub</a></p><h2 id="主要功能"><a href="#主要功能" class="headerlink" title="主要功能"></a>主要功能</h2><ul><li><strong>服务限流降级：</strong> 默认支持 Servlet、Feign、RestTemplate、Dubbo 和 RocketMQ 限流降级功能的接入，可以在运行时通过控制台实时修改限流降级规则，还支持查看限流降级 Metrics 监控。</li><li><strong>服务注册与发现：</strong> 适配 Spring Cloud 服务注册与发现标准，默认集成了 Ribbon 的支持。</li><li><strong>分布式配置管理：</strong> 支持分布式系统中的外部化配置，配置更改时自动刷新。</li><li><strong>消息驱动能力：</strong> 基于 Spring Cloud Stream 为微服务应用构建消息驱动能力。</li><li><strong>阿里云对象存储：</strong> 阿里云提供的海量、安全、低成本、高可靠的云存储服务。支持在任何应用、任何时间、任何地点存储和访问任意类型的数据。</li><li><strong>分布式任务调度：</strong> 提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。同时提供分布式的任务执行模型，如网格任务。网格任务支持海量子任务均匀分配到所有 Worker（schedulerx-client）上执行。</li></ul><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><ul><li><strong>Sentinel：</strong> 把流量作为切入点，从流量控制、熔断降级、系统负载保护等多个维度保护服务的稳定性。</li><li><strong>Nacos：</strong> 一个更易于构建云原生应用的动态服务发现、配置管理和服务管理平台。</li><li><strong>RocketMQ：</strong> 一款开源的分布式消息系统，基于高可用分布式集群技术，提供低延时的、高可靠的消息发布与订阅服务。</li><li><strong>Dubbo：</strong> Apache Dubbo™ 是一款高性能 Java RPC 框架。</li><li><strong>Seata：</strong> 阿里巴巴开源产品，一个易于使用的高性能微服务分布式事务解决方案。</li><li><strong>Alibaba Cloud ACM：</strong> 一款在分布式架构环境中对应用配置进行集中管理和推送的应用配置中心产品。</li><li><strong>Alibaba Cloud OSS：</strong> 阿里云对象存储服务（Object Storage Service，简称 OSS），是阿里云提供的海量、安全、低成本、高可靠的云存储服务。您可以在任何应用、任何时间、任何地点存储和访问任意类型的数据。</li><li><strong>Alibaba Cloud SchedulerX：</strong> 阿里中间件团队开发的一款分布式任务调度产品，提供秒级、精准、高可靠、高可用的定时（基于 Cron 表达式）任务调度服务。</li><li><strong>Alibaba Cloud SMS：</strong>  覆盖全球的短信服务，友好、高效、智能的互联化通讯能力，帮助企业迅速搭建客户触达通道。</li></ul><h2 id="更新包名和-Maven-坐标"><a href="#更新包名和-Maven-坐标" class="headerlink" title="更新包名和 Maven 坐标"></a>更新包名和 Maven 坐标</h2><p>接到阿里官方通知在 2019 年 7 月 4 日修改相关包名和 Maven 坐标，请参考 <a href="https://github.com/alibaba/spring-cloud-alibaba/issues/734" target="_blank" rel="noopener">Update package name &amp; maven coordinates</a> ，由于视频录制于 2019 年 6 月 28 日，故所使用的包名和坐标依然沿用原先的 <code>org.springframework.cloud</code>，后面的视频会改用最新的标准，看到这里的小伙伴可以尝试使用新坐标。</p><h3 id="包名修改"><a href="#包名修改" class="headerlink" title="包名修改"></a>包名修改</h3><p>包名前缀由 <code>org.springframework.cloud.alibaba</code> 变更为 <code>com.alibaba.cloud</code></p><h3 id="Maven-坐标修改"><a href="#Maven-坐标修改" class="headerlink" title="Maven 坐标修改"></a>Maven 坐标修改</h3><p>bom 由 <code>spring-cloud-alibaba-dependencies</code> 变更为 <code>alibaba-spring-cloud-dependencies</code></p><p>maven groupid 由 <code>org.springframework.cloud</code> 变更为 <code>com.alibaba.cloud</code></p><h3 id="Spring-Cloud-Alibaba-1"><a href="#Spring-Cloud-Alibaba-1" class="headerlink" title="Spring Cloud Alibaba"></a>Spring Cloud Alibaba</h3><table><thead><tr><th></th><th>修改前</th><th>修改后</th></tr></thead><tbody><tr><td>sentinel starter</td><td>spring-cloud-starter-alibaba-sentinel</td><td>alibaba-sentinel-spring-cloud-starter</td></tr><tr><td>nacos config starter</td><td>spring-cloud-starter-alibaba-nacos-config</td><td>alibaba-nacos-config-spring-cloud-starter</td></tr><tr><td>nacos discovery starter</td><td>spring-cloud-starter-alibaba-nacos-discovery</td><td>alibaba-nacos-discovery-spring-cloud-starter</td></tr><tr><td>seata starter</td><td>spring-cloud-starter-alibaba-seata</td><td>alibaba-seata-spring-cloud-starter</td></tr><tr><td>dubbo starter</td><td>spring-cloud-starter-dubbo</td><td>dubbo-spring-cloud-starter</td></tr><tr><td>rocketmq binder starter</td><td>spring-cloud-starter-stream-rocketmq</td><td>rocketmq-stream-spring-cloud-starter</td></tr><tr><td>rocketmq bus module name</td><td>spring-cloud-starter-bus-rocketmq</td><td>rocketmq-bus-spring-cloud-starter</td></tr><tr><td>sentinel module name</td><td>spring-cloud-alibaba-sentinel</td><td>alibaba-sentinel-spring-cloud</td></tr><tr><td>sentinel datasource module name</td><td>spring-cloud-alibaba-sentinel-datasource</td><td>alibaba-sentinel-datasource-spring-cloud</td></tr><tr><td>sentinel gateway module name</td><td>spring-cloud-alibaba-sentinel-gateway</td><td>alibaba-sentinel-gateway-spring-cloud</td></tr><tr><td>nacos config module name</td><td>spring-cloud-alibaba-nacos-config</td><td>alibaba-nacos-config-spring-cloud</td></tr><tr><td>nacos discovery module name</td><td>spring-cloud-alibaba-nacos-discovery</td><td>alibaba-nacos-discovery-spring-cloud</td></tr><tr><td>dubbo module name</td><td>spring-cloud-alibaba-dubbo</td><td>alibaba-dubbo-spring-cloud</td></tr><tr><td>seata module name</td><td>spring-cloud-alibaba-seata</td><td>alibaba-seata-spring-cloud</td></tr><tr><td>rocketmq binder module name</td><td>spring-cloud-stream-binder-rocketmq</td><td>rocketmq-spring-cloud-stream-binder</td></tr></tbody></table><h3 id="Spring-Cloud-Alicloud-商业化组件"><a href="#Spring-Cloud-Alicloud-商业化组件" class="headerlink" title="Spring Cloud Alicloud(商业化组件)"></a>Spring Cloud Alicloud(商业化组件)</h3><table><thead><tr><th></th><th>修改前</th><th>修改后</th></tr></thead><tbody><tr><td>oss starter</td><td>spring-cloud-alicloud-oss</td><td>alicloud-oss-spring-cloud</td></tr><tr><td>sms starter</td><td>spring-cloud-alicloud-sms</td><td>alicloud-sms-spring-cloud</td></tr><tr><td>schedulerx starter</td><td>spring-cloud-alicloud-schedulerx</td><td>alicloud-schedulerx-spring-cloud</td></tr><tr><td>ans starter</td><td>spring-cloud-alicloud-ans</td><td>alicloud-ans-spring-cloud</td></tr><tr><td>acm starter</td><td>spring-cloud-alicloud-acm</td><td>alicloud-acm-spring-cloud</td></tr><tr><td>oss module name</td><td>spring-cloud-alicloud-oss</td><td>alicloud-oss-spring-cloud</td></tr><tr><td>sms module name</td><td>spring-cloud-alicloud-sms</td><td>alicloud-sms-spring-cloud</td></tr><tr><td>schedulerx module name</td><td>spring-cloud-alicloud-schedulerx</td><td>alicloud-schedulerx-spring-cloud</td></tr><tr><td>ans module name</td><td>spring-cloud-alicloud-ans</td><td>alicloud-ans-spring-cloud</td></tr><tr><td>acm module name</td><td>spring-cloud-alicloud-acm</td><td>alicloud-acm-spring-cloud</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Cloud Netflix</title>
      <link href="/2019/11/24/045.Spring%20Cloud%20Netflix-%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%85%A5%E7%BB%B4%E6%8A%A4%E6%9C%9F/"/>
      <url>/2019/11/24/045.Spring%20Cloud%20Netflix-%E9%A1%B9%E7%9B%AE%E8%BF%9B%E5%85%A5%E7%BB%B4%E6%8A%A4%E6%9C%9F/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Cloud-Netflix"><a href="#Spring-Cloud-Netflix" class="headerlink" title="Spring Cloud Netflix"></a>Spring Cloud Netflix</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Spring Cloud 为开发人员提供了快速构建分布式系统中一些常见模式的工具（例如配置管理，服务发现，断路器，智能路由，微代理，控制总线）。分布式系统的协调导致了样板模式, 使用 Spring Cloud 开发人员可以快速地支持实现这些模式的服务和应用程序。他们将在任何分布式环境中运行良好，包括开发人员自己的笔记本电脑，裸机数据中心，以及 Cloud Foundry 等托管平台。</p><p>由于 Spring Cloud Netflix 项目已进入维护期。这意味着继续使用它再也没有新功能福利了；故我们采用 <strong>Spring Cloud Alibaba</strong> 方案来替代 Spring Cloud Netflix。</p><h2 id="项目进入维护期"><a href="#项目进入维护期" class="headerlink" title="项目进入维护期"></a>项目进入维护期</h2><p><a href="https://spring.io/blog/2018/12/12/spring-cloud-greenwich-rc1-available-now" target="_blank" rel="noopener">【官方新闻】Spring Cloud Greenwich.RC1 available now</a></p><p><strong>2018 年 12 月 12 日，Netflix 宣布 Spring Cloud Netflix 系列技术栈进入维护模式（不再添加新特性）</strong></p><p>最近，Netflix 宣布 <code>Hystrix</code> 正在进入维护模式。自 2016 年以来，<code>Ribbon</code> 已处于类似状态。虽然 Hystrix 和 Ribbon 现已处于维护模式，但它们仍然在 Netflix 大规模部署。</p><p><code>Hystrix Dashboard</code> 和 <code>Turbine</code> 已被 <strong>Atlas</strong> 取代。这些项目的最后一次提交分别是 2 年前和 4 年前。<code>Zuul1</code> 和 <code>Archaius1</code> 都被后来不兼容的版本所取代。</p><p>以下 Spring Cloud Netflix 模块和相应的 Starter 将进入维护模式：</p><ul><li>spring-cloud-netflix-archaius</li><li>spring-cloud-netflix-hystrix-contract</li><li>spring-cloud-netflix-hystrix-dashboard</li><li>spring-cloud-netflix-hystrix-stream</li><li>spring-cloud-netflix-hystrix</li><li>spring-cloud-netflix-ribbon</li><li>spring-cloud-netflix-turbine-stream</li><li>spring-cloud-netflix-turbine</li><li>spring-cloud-netflix-zuul</li></ul><h2 id="什么是维护模式"><a href="#什么是维护模式" class="headerlink" title="什么是维护模式"></a>什么是维护模式</h2><p>将模块置于维护模式，意味着 Spring Cloud 团队将不会再向模块添加新功能。我们将修复 block 级别的 bug 以及安全问题，我们也会考虑并审查社区的小型 pull request。</p><h2 id="替代品"><a href="#替代品" class="headerlink" title="替代品"></a>替代品</h2><p>我们建议对这些模块提供的功能进行以下替换</p><table><thead><tr><th>CURRENT</th><th>REPLACEMENT</th></tr></thead><tbody><tr><td>Hystrix</td><td>Resilience4j</td></tr><tr><td>Hystrix Dashboard / Turbine</td><td>Micrometer + Monitoring System</td></tr><tr><td>Ribbon</td><td>Spring Cloud Loadbalancer</td></tr><tr><td>Zuul 1</td><td>Spring Cloud Gateway</td></tr><tr><td>Archaius 1</td><td>Spring Boot external config + Spring Cloud Config</td></tr></tbody></table><h2 id="附：扩展阅读"><a href="#附：扩展阅读" class="headerlink" title="附：扩展阅读"></a>附：扩展阅读</h2><h3 id="Netflix-Concurrency-Limits"><a href="#Netflix-Concurrency-Limits" class="headerlink" title="Netflix Concurrency Limits"></a>Netflix Concurrency Limits</h3><p>并发限制模块，它是 Netflix 开源的限流器项目，Spring Cloud 在 Greenwich 版本中引入 spring-cloud-netflix-concurrency-limits</p><h3 id="Archaius-1"><a href="#Archaius-1" class="headerlink" title="Archaius 1"></a>Archaius 1</h3><p>有些人对它可能比较陌生，也是 Netflix 公司开源项目，基于 Java 的配置管理类库（apache common configuration 类库的扩展），主要用于多配置存储的动态获取。它主要的特性：</p><ul><li>动态类型化属性</li><li>高效和线程安全的配置操作</li><li>配置改变时的回调机制</li><li>轮询框架</li><li>JMX，通过Jconsole检查和调用操作属性</li><li>组合配置</li></ul><h3 id="Resilience4j"><a href="#Resilience4j" class="headerlink" title="Resilience4j"></a>Resilience4j</h3><p>目前还中孵化中，Spring 可能是要抽象一个断路器的统一规范，让不同的断路器（Hystrix、Resilience4j、<strong>Sentinel（阿里开源）</strong>）选择使用</p><h3 id="Micrometer"><a href="#Micrometer" class="headerlink" title="Micrometer"></a>Micrometer</h3><p>Spring Boot 2 中的 Spring Boot Actuator 底层用的就是 Micrometer，它是 <strong>Pivotal</strong> 公司（也就是 Spring 所在的公司）开源的监控门面，类似于监控世界的 Slf4j。<strong>Resilience4j 自带整合了 Micrometer</strong>；目前还无法判断是否比 Hystrix Dashboard /Turbine 的更强大，更好用。</p><h3 id="Spring-Cloud-Loadbalancer"><a href="#Spring-Cloud-Loadbalancer" class="headerlink" title="Spring Cloud Loadbalancer"></a>Spring Cloud Loadbalancer</h3><p>目前还中孵化中，使用上和 Ribbon 区别不大</p><h3 id="Spring-Cloud-Gateway"><a href="#Spring-Cloud-Gateway" class="headerlink" title="Spring Cloud Gateway"></a>Spring Cloud Gateway</h3><p>Zuul 持续跳票 1 年多，1.x 是一个基于阻塞 IO 的 API Gateway 以及 Servlet；直到 2018 年 5 月，Zuul 2.x（基于 Netty，也是非阻塞的，支持长连接）才发布，但 Spring Cloud 暂时还没有整合计划。Spring Cloud Gateway 比 Zuul 1.x 系列的性能和功能整体要好。</p><h3 id="Spring-Boot-external-config-Spring-Cloud-Config"><a href="#Spring-Boot-external-config-Spring-Cloud-Config" class="headerlink" title="Spring Boot external config + Spring Cloud Config"></a>Spring Boot external config + Spring Cloud Config</h3><p>Netflix 开源的组件（Archaius 1/Ribbon/Hystrix）都没有使用 Spring Boot 的规范（spring-boot-configuration-processor），根本没有 metadata.json 文件，于是这部分配置 IDE 无法给你提示</p>]]></content>
      
      
      <categories>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 参考手册</title>
      <link href="/2019/11/23/Thymeleaf%20%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/"/>
      <url>/2019/11/23/Thymeleaf%20%E5%8F%82%E8%80%83%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="Thymeleaf-参考手册"><a href="#Thymeleaf-参考手册" class="headerlink" title="Thymeleaf 参考手册"></a>Thymeleaf 参考手册</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本章为 Thymeleaf 语法参考，主要介绍如：循环、判断、模板布局、内置对象等。</p><h2 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h2><p>修改 html 标签用于引入 thymeleaf 引擎，这样才可以在其他标签里使用 <code>th:*</code> 语法。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html SYSTEM "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-4.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="使用文本"><a href="#使用文本" class="headerlink" title="使用文本"></a>使用文本</h2><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td><code>{home.welcome}</code></td><td>使用国际化文本,国际化传参直接追加 (value…)</td></tr><tr><td><code>${user.name}</code></td><td>使用会话属性</td></tr><tr><td><code>@{}</code> 表达式中使用超链接</td><td><code>&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; media=&quot;all&quot;href=&quot;../../css/gtvg.css&quot; th:href=&quot;@{/css/gtvg.css}&quot; /&gt;</code></td></tr><tr><td>-</td><td>-</td></tr><tr><td><code>${}</code></td><td>表达式中基本对象</td></tr><tr><td>param</td><td>获取请求参数，比如 <code>${param.name}</code>, <code>http://localhost:8080?name=jeff</code></td></tr><tr><td>session</td><td>获取 session 的属性</td></tr><tr><td>application</td><td>获取 application 的属性</td></tr><tr><td>execInfo</td><td>有两个属性 templateName 和 now (是 java 的 Calendar 对象)</td></tr><tr><td>ctx</td><td></td></tr><tr><td>vars</td><td></td></tr><tr><td>locale</td><td></td></tr><tr><td>httpServletRequest</td><td></td></tr><tr><td>httpSession</td><td></td></tr><tr><td>-</td><td>-</td></tr><tr><td>th 扩展标签</td><td></td></tr><tr><td><code>th:text</code></td><td>普通字符串</td></tr><tr><td><code>th:utext</code></td><td>转义文本</td></tr><tr><td><code>th:href</code></td><td>链接</td></tr><tr><td><code>th:attr</code> 设置元素属性</td><td><code>&lt;img src=&quot;../../images/gtvglogo.png&quot; th:attr=&quot;src=@{/images/gtvglogo.png},title=#{logo},alt=#{logo}&quot; /&gt;</code></td></tr><tr><td><code>th:with</code></td><td>定义常量</td></tr><tr><td><code>th:attrappend</code></td><td>追加属性</td></tr><tr><td><code>th:classappend</code></td><td>追加类样式</td></tr><tr><td><code>th:styleappend</code></td><td>追加样式</td></tr></tbody></table><h2 id="其他标签"><a href="#其他标签" class="headerlink" title="其他标签"></a>其他标签</h2><table><thead><tr><th>语法</th><th>说明</th></tr></thead><tbody><tr><td><code>th:abbr</code></td><td></td></tr><tr><td><code>th:accept</code></td><td></td></tr><tr><td><code>th:accept-charset</code></td><td></td></tr><tr><td><code>th:accesskey</code></td><td></td></tr><tr><td><code>th:action</code></td><td></td></tr><tr><td><code>th:align</code></td><td></td></tr><tr><td><code>th:alt</code></td><td></td></tr><tr><td><code>th:archive</code></td><td></td></tr><tr><td><code>th:audio</code></td><td></td></tr><tr><td><code>th:autocomplete</code></td><td></td></tr><tr><td><code>th:axis</code></td><td></td></tr><tr><td><code>th:background</code></td><td></td></tr><tr><td><code>th:bgcolor</code></td><td></td></tr><tr><td><code>th:border</code></td><td></td></tr><tr><td><code>th:cellpadding</code></td><td></td></tr><tr><td><code>th:cellspacing</code></td><td></td></tr><tr><td><code>th:challenge</code></td><td></td></tr><tr><td><code>th:charset</code></td><td></td></tr><tr><td><code>th:cite</code></td><td></td></tr><tr><td><code>th:class</code></td><td></td></tr><tr><td><code>th:classid</code></td><td></td></tr><tr><td><code>th:codebase</code></td><td></td></tr><tr><td><code>th:codetype</code></td><td></td></tr><tr><td><code>th:cols</code></td><td></td></tr><tr><td><code>th:colspan</code></td><td></td></tr><tr><td><code>th:compact</code></td><td></td></tr><tr><td><code>th:content</code></td><td></td></tr><tr><td><code>th:contenteditable</code></td><td></td></tr><tr><td><code>th:contextmenu</code></td><td></td></tr><tr><td><code>th:data</code></td><td></td></tr><tr><td><code>th:datetime</code></td><td></td></tr><tr><td><code>th:dir</code></td><td></td></tr><tr><td><code>th:draggable</code></td><td></td></tr><tr><td><code>th:dropzone</code></td><td></td></tr><tr><td><code>th:enctype</code></td><td></td></tr><tr><td><code>th:for</code></td><td></td></tr><tr><td><code>th:form</code></td><td></td></tr><tr><td><code>th:formaction</code></td><td></td></tr><tr><td><code>th:formenctype</code></td><td></td></tr><tr><td><code>th:formmethod</code></td><td></td></tr><tr><td><code>th:formtarget</code></td><td></td></tr><tr><td><code>th:frame</code></td><td></td></tr><tr><td><code>th:frameborder</code></td><td></td></tr><tr><td><code>th:headers</code></td><td></td></tr><tr><td><code>th:height</code></td><td></td></tr><tr><td><code>th:high</code></td><td></td></tr><tr><td><code>th:href</code></td><td></td></tr><tr><td><code>th:hreflang</code></td><td></td></tr><tr><td><code>th:hspace</code></td><td></td></tr><tr><td><code>th:http-equiv</code></td><td></td></tr><tr><td><code>th:icon</code></td><td></td></tr><tr><td><code>th:id</code></td><td></td></tr><tr><td><code>th:keytype</code></td><td></td></tr><tr><td><code>th:kind</code></td><td></td></tr><tr><td><code>th:label</code></td><td></td></tr><tr><td><code>th:lang</code></td><td></td></tr><tr><td><code>th:list</code></td><td></td></tr><tr><td><code>th:longdesc</code></td><td></td></tr><tr><td><code>th:low</code></td><td></td></tr><tr><td><code>th:manifest</code></td><td></td></tr><tr><td><code>th:marginheight</code></td><td></td></tr><tr><td><code>th:marginwidth</code></td><td></td></tr><tr><td><code>th:max</code></td><td></td></tr><tr><td><code>th:maxlength</code></td><td></td></tr><tr><td><code>th:media</code></td><td></td></tr><tr><td><code>th:method</code></td><td></td></tr><tr><td><code>th:min</code></td><td></td></tr><tr><td><code>th:name</code></td><td></td></tr><tr><td><code>th:optimum</code></td><td></td></tr><tr><td><code>th:pattern</code></td><td></td></tr><tr><td><code>th:placeholder</code></td><td></td></tr><tr><td><code>th:poster</code></td><td></td></tr><tr><td><code>th:preload</code></td><td></td></tr><tr><td><code>th:radiogroup</code></td><td></td></tr><tr><td><code>th:rel</code></td><td></td></tr><tr><td><code>th:rev</code></td><td></td></tr><tr><td><code>th:rows</code></td><td></td></tr><tr><td><code>th:rowspan</code></td><td></td></tr><tr><td><code>th:rules</code></td><td></td></tr><tr><td><code>th:sandbox</code></td><td></td></tr><tr><td><code>th:scheme</code></td><td></td></tr><tr><td><code>th:scope</code></td><td></td></tr><tr><td><code>th:scrolling</code></td><td></td></tr><tr><td><code>th:size</code></td><td></td></tr><tr><td><code>th:sizes</code></td><td></td></tr><tr><td><code>th:span</code></td><td></td></tr><tr><td><code>th:spellcheck</code></td><td></td></tr><tr><td><code>th:src</code></td><td></td></tr><tr><td><code>th:srclang</code></td><td></td></tr><tr><td><code>th:standby</code></td><td></td></tr><tr><td><code>th:start</code></td><td></td></tr><tr><td><code>th:step</code></td><td></td></tr><tr><td><code>th:style</code></td><td></td></tr><tr><td><code>th:summary</code></td><td></td></tr><tr><td><code>th:tabindex</code></td><td></td></tr><tr><td><code>th:target</code></td><td></td></tr><tr><td><code>th:title</code></td><td></td></tr><tr><td><code>th:type</code></td><td></td></tr><tr><td><code>th:usemap</code></td><td></td></tr><tr><td><code>th:value</code></td><td></td></tr><tr><td><code>th:valuetype</code></td><td></td></tr><tr><td><code>th:vspace</code></td><td></td></tr><tr><td><code>th:width</code></td><td></td></tr><tr><td><code>th:wrap</code></td><td></td></tr><tr><td><code>th:xmlbase</code></td><td></td></tr><tr><td><code>th:xmllang</code></td><td></td></tr><tr><td><code>th:xmlspace</code></td><td></td></tr><tr><td><code>th:alt-title</code></td><td></td></tr><tr><td><code>th:lang-xmllang</code></td><td></td></tr></tbody></table><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prod : ${prods}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Onions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.price}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2.41<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.inStock}? #{true} : #{false}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>NAME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>PRICE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>IN STOCK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prod,iterStat : ${prods}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${iterStat.odd}? <span class="token punctuation">'</span>odd<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Onions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.price}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2.41<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.inStock}? #{true} : #{false}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>迭代器的状态：</p><ul><li>index: 当前的索引，从0开始</li><li>count: 当前的索引，从1开始</li><li>size：总数</li><li>current:</li><li>even/odd:</li><li>first</li><li>last</li></ul><h2 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h2><h3 id="if"><a href="#if" class="headerlink" title="if"></a>if</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comments.html<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/product/comments(prodId<span class="token punctuation">=</span>${prod.id})}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>if</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${not #lists.isEmpty(prod.comments)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>view<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="unless"><a href="#unless" class="headerlink" title="unless"></a>unless</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>comments.html<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/comments(prodId<span class="token punctuation">=</span>${prod.id})}<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>unless</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${#lists.isEmpty(prod.comments)}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>view<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.role}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>admin<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is an administrator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{roles.manager}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is a manager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.role}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>admin<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is an administrator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{roles.manager}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is a manager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is some other thing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="th-block"><a href="#th-block" class="headerlink" title="th:block"></a>th:block</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token namespace">th:</span>block</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>user : ${users}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.login}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.address}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token namespace">th:</span>block</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>推荐下面写法（编译前看不见）</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.login}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name">colspan</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>2<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.address}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>...<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!--/*/ &lt;/th:block> /*/--></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="th-inline"><a href="#th-inline" class="headerlink" title="th:inline"></a>th:inline</h2><h3 id="th-inline-1"><a href="#th-inline-1" class="headerlink" title="th:inline"></a><code>th:inline</code></h3><p>th:inline 可以等于 text , javascript(dart) , none</p><h3 id="text-…"><a href="#text-…" class="headerlink" title="text: [[…]]"></a><code>text: [[…]]</code></h3><pre><code>&lt;p th:inline=&quot;text&quot;&gt;Hello, [[#{test}]]&lt;/p&gt;</code></pre><h3 id="javascript-…"><a href="#javascript-…" class="headerlink" title="javascript: /[[…]]/"></a><code>javascript: /[[…]]/</code></h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script th<span class="token punctuation">:</span>inline<span class="token operator">=</span><span class="token string">"javascript"</span><span class="token operator">></span>    <span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token comment" spellcheck="true">/*[[        #{test}    ]]*/</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token comment" spellcheck="true">/*[[        ${param.name[0]}+${execInfo.templateName}+'-'+${#dates.createNow()}+'-'+${#locale}    ]]*/</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token operator">&lt;</span>script th<span class="token punctuation">:</span>inline<span class="token operator">=</span><span class="token string">"javascript"</span><span class="token operator">></span><span class="token comment" spellcheck="true">/*&lt;![CDATA[*/</span>    <span class="token keyword">var</span> username <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>#<span class="token punctuation">{</span>test<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">var</span> name <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span>$<span class="token punctuation">{</span>param<span class="token punctuation">.</span>name<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token operator">+</span>$<span class="token punctuation">{</span>execInfo<span class="token punctuation">.</span>templateName<span class="token punctuation">}</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>$<span class="token punctuation">{</span>#dates<span class="token punctuation">.</span><span class="token function">createNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token operator">+</span><span class="token string">'-'</span><span class="token operator">+</span>$<span class="token punctuation">{</span>#locale<span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*]]>*/</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="adding-code-…"><a href="#adding-code-…" class="headerlink" title="adding code: /* [+…+]*/"></a><code>adding code: /* [+…+]*/</code></h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*[+var msg = 'Hello, ' + [[${session.user.name}]]; +]*/</span><span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="removind-code-and"><a href="#removind-code-and" class="headerlink" title="removind code: /[- / and /* -]*/"></a><code>removind code: /[- / and /* -]*/</code></h3><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">23</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">/*[- */</span><span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token string">'This is a non-working template'</span><span class="token punctuation">;</span> <span class="token comment" spellcheck="true">/* -]*/</span><span class="token keyword">var</span> f <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个 Thymeleaf 页面</title>
      <link href="/2019/11/23/040.Spring%20Boot-Thymeleaf-%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2/"/>
      <url>/2019/11/23/040.Spring%20Boot-Thymeleaf-%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%A1%B5%E9%9D%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="第一个-Thymeleaf-页面"><a href="#第一个-Thymeleaf-页面" class="headerlink" title="第一个 Thymeleaf 页面"></a>第一个 Thymeleaf 页面</h1><h2 id="引入依赖"><a href="#引入依赖" class="headerlink" title="引入依赖"></a>引入依赖</h2><p>主要增加 <code>spring-boot-starter-thymeleaf</code> 和 <code>nekohtml</code> 这两个依赖</p><ul><li><code>spring-boot-starter-thymeleaf</code>：Thymeleaf 自动配置</li><li><code>nekohtml</code>：允许使用非严格的 HTML 语法</li></ul><p>完整的 <code>pom.xml</code> 如下：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>jar<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hello-spring-boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- lookup parent from repository --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.build.sourceEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>UTF-8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project.reporting.outputEncoding</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-actuator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>net.sourceforge.nekohtml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>nekohtml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.9.22<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.funtl.hello.spring.boot.HelloSpringBootApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置-Thymeleaf"><a href="#配置-Thymeleaf" class="headerlink" title="配置 Thymeleaf"></a>配置 Thymeleaf</h2><p>在 <code>application.yml</code> 配置 Thymeleaf</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">thymeleaf</span><span class="token punctuation">:</span>    <span class="token key atrule">cache</span><span class="token punctuation">:</span> <span class="token boolean important">false </span><span class="token comment" spellcheck="true"># 开发时关闭缓存,不然没法看到实时页面</span>    <span class="token key atrule">mode</span><span class="token punctuation">:</span> HTML <span class="token comment" spellcheck="true"># 用非严格的 HTML</span>    <span class="token key atrule">encoding</span><span class="token punctuation">:</span> UTF<span class="token punctuation">-</span><span class="token number">8</span>    <span class="token key atrule">servlet</span><span class="token punctuation">:</span>      <span class="token key atrule">content-type</span><span class="token punctuation">:</span> text/html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建测试用-JavaBean"><a href="#创建测试用-JavaBean" class="headerlink" title="创建测试用 JavaBean"></a>创建测试用 JavaBean</h2><p>创建一个测试效果的 JavaBean，简单封装一下即可</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>entity<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>io<span class="token punctuation">.</span>Serializable<span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">PersonBean</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">{</span>    <span class="token keyword">private</span> String name<span class="token punctuation">;</span>    <span class="token keyword">private</span> Integer age<span class="token punctuation">;</span>    <span class="token keyword">public</span> String <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span>String name<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> Integer <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setAge</span><span class="token punctuation">(</span>Integer age<span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>age <span class="token operator">=</span> age<span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建测试用-Controller"><a href="#创建测试用-Controller" class="headerlink" title="创建测试用 Controller"></a>创建测试用 Controller</h2><p>创建一个 Controller，造一些测试数据并设置跳转</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>PersonBean<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span>Controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>ui<span class="token punctuation">.</span>Model<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RequestMethod<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>ArrayList<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token annotation punctuation">@Controller</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"thymeleaf"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">IndexController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"index"</span><span class="token punctuation">,</span> method <span class="token operator">=</span> RequestMethod<span class="token punctuation">.</span>GET<span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">index</span><span class="token punctuation">(</span>Model model<span class="token punctuation">)</span> <span class="token punctuation">{</span>        PersonBean person <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PersonBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"张三"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        person<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">22</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>PersonBean<span class="token operator">></span> people <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        PersonBean p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PersonBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p1<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"李四"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p1<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        people<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>        PersonBean p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PersonBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p2<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"王五"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p2<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        people<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>        PersonBean p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PersonBean</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p3<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span><span class="token string">"赵六"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        p3<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">25</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        people<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"person"</span><span class="token punctuation">,</span> person<span class="token punctuation">)</span><span class="token punctuation">;</span>        model<span class="token punctuation">.</span><span class="token function">addAttribute</span><span class="token punctuation">(</span><span class="token string">"people"</span><span class="token punctuation">,</span> people<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token string">"index"</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="创建测试页面"><a href="#创建测试页面" class="headerlink" title="创建测试页面"></a>创建测试页面</h2><p>在 <code>templates</code> 目录下创建 <code>index.html</code> 文件，代码如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html SYSTEM "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-4.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>Hello Thymeleaf<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>访问 Model：<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${person.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>访问列表<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>thead</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>姓名<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>年龄<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>thead</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tbody</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>human : ${people}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${human.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${human.age}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tbody</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改 html 标签用于引入 thymeleaf 引擎，这样才可以在其他标签里使用 <code>th:*</code> 语法，声明如下：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html SYSTEM "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-4.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="测试访问"><a href="#测试访问" class="headerlink" title="测试访问"></a>测试访问</h2><p>启动成功后，访问：<a href="http://localhost:9090/thymeleaf/index" target="_blank" rel="noopener">http://localhost:9090/thymeleaf/index</a> 即可看到效果</p><p><img src="/SpringBoot/Lusifer1527518261.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 内置对象</title>
      <link href="/2019/11/23/Thymeleaf%20%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/"/>
      <url>/2019/11/23/Thymeleaf%20%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="Thymeleaf-内置对象"><a href="#Thymeleaf-内置对象" class="headerlink" title="Thymeleaf 内置对象"></a>Thymeleaf 内置对象</h1><h2 id="dates"><a href="#dates" class="headerlink" title="#dates"></a><code>#dates</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Dates* ======================================================================*//** Format date with the standard locale format* Also works with arrays, lists or sets*/${#dates.format(date)}${#dates.arrayFormat(datesArray)}${#dates.listFormat(datesList)}${#dates.setFormat(datesSet)}/** Format date with the ISO8601 format* Also works with arrays, lists or sets*/${#dates.formatISO(date)}${#dates.arrayFormatISO(datesArray)}${#dates.listFormatISO(datesList)}${#dates.setFormatISO(datesSet)}/** Format date with the specified pattern* Also works with arrays, lists or sets*/${#dates.format(date, &#39;dd/MMM/yyyy HH:mm&#39;)}${#dates.arrayFormat(datesArray, &#39;dd/MMM/yyyy HH:mm&#39;)}${#dates.listFormat(datesList, &#39;dd/MMM/yyyy HH:mm&#39;)}${#dates.setFormat(datesSet, &#39;dd/MMM/yyyy HH:mm&#39;)}/** Obtain date properties* Also works with arrays, lists or sets*/${#dates.day(date)} // also arrayDay(...), listDay(...), etc.${#dates.month(date)} // also arrayMonth(...), listMonth(...), etc.${#dates.monthName(date)} // also arrayMonthName(...), listMonthName(...), etc.${#dates.monthNameShort(date)} // also arrayMonthNameShort(...), listMonthNameShort(...), etc.${#dates.year(date)} // also arrayYear(...), listYear(...), etc.${#dates.dayOfWeek(date)} // also arrayDayOfWeek(...), listDayOfWeek(...), etc.${#dates.dayOfWeekName(date)} // also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.${#dates.dayOfWeekNameShort(date)} // also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.${#dates.hour(date)} // also arrayHour(...), listHour(...), etc.${#dates.minute(date)} // also arrayMinute(...), listMinute(...), etc.${#dates.second(date)} // also arraySecond(...), listSecond(...), etc.${#dates.millisecond(date)} // also arrayMillisecond(...), listMillisecond(...), etc./** Create date (java.util.Date) objects from its components*/${#dates.create(year,month,day)}${#dates.create(year,month,day,hour,minute)}${#dates.create(year,month,day,hour,minute,second)}${#dates.create(year,month,day,hour,minute,second)}${#dates.create(year,month,day,hour,minute,second,millisecond)}/** Create a date (java.util.Date) object for the current date and time*/${#dates.createNow()}/** Create a date (java.util.Date) object for the current date (time set to 00:00)*/${#dates.createToday()}</code></pre><h2 id="Calendars"><a href="#Calendars" class="headerlink" title="#Calendars"></a><code>#Calendars</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Calendars* ======================================================================*//** Format calendar with the standard locale format* Also works with arrays, lists or sets*/${#calendars.format(cal)}${#calendars.arrayFormat(calArray)}${#calendars.listFormat(calList)}${#calendars.setFormat(calSet)}/** Format calendar with the ISO8601 format* Also works with arrays, lists or sets*/${#calendars.formatISO(cal)}${#calendars.arrayFormatISO(calArray)}${#calendars.listFormatISO(calList)}${#calendars.setFormatISO(calSet)}/** Format calendar with the specified pattern* Also works with arrays, lists or sets*/${#calendars.format(cal, &#39;dd/MMM/yyyy HH:mm&#39;)}${#calendars.arrayFormat(calArray, &#39;dd/MMM/yyyy HH:mm&#39;)}${#calendars.listFormat(calList, &#39;dd/MMM/yyyy HH:mm&#39;)}${#calendars.setFormat(calSet, &#39;dd/MMM/yyyy HH:mm&#39;)}/** Obtain calendar properties* Also works with arrays, lists or sets*/${#calendars.day(date)} // also arrayDay(...), listDay(...), etc.${#calendars.month(date)} // also arrayMonth(...), listMonth(...), etc.${#calendars.monthName(date)} // also arrayMonthName(...), listMonthName(...), etc.${#calendars.monthNameShort(date)} // also arrayMonthNameShort(...), listMonthNameShort(...), etc.${#calendars.year(date)} // also arrayYear(...), listYear(...), etc.${#calendars.dayOfWeek(date)} // also arrayDayOfWeek(...), listDayOfWeek(...), etc.${#calendars.dayOfWeekName(date)} // also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.${#calendars.dayOfWeekNameShort(date)} // also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.${#calendars.hour(date)} // also arrayHour(...), listHour(...), etc.${#calendars.hour(date)} // also arrayHour(...), listHour(...), etc.${#calendars.minute(date)} // also arrayMinute(...), listMinute(...), etc.${#calendars.second(date)} // also arraySecond(...), listSecond(...), etc.${#calendars.millisecond(date)} // also arrayMillisecond(...), listMillisecond(...), etc./** Create calendar (java.util.Calendar) objects from its components*/${#calendars.create(year,month,day)}${#calendars.create(year,month,day,hour,minute)}${#calendars.create(year,month,day,hour,minute,second)}${#calendars.create(year,month,day,hour,minute,second,millisecond)}/** Create a calendar (java.util.Calendar) object for the current date and time*/${#calendars.createNow()}/** Create a calendar (java.util.Calendar) object for the current date (time set to 00:00)*/${#calendars.createToday()}</code></pre><h2 id="numbers"><a href="#numbers" class="headerlink" title="#numbers"></a><code>#numbers</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Numbers* ======================================================================*//** ==========================* Formatting integer numbers* ==========================*//** Set minimum integer digits.* Also works with arrays, lists or sets*/${#numbers.formatInteger(num,3)}${#numbers.arrayFormatInteger(numArray,3)}${#numbers.listFormatInteger(numList,3)}${#numbers.setFormatInteger(numSet,3)}/** Set minimum integer digits and thousands separator:* &#39;POINT&#39;, &#39;COMMA&#39;, &#39;WHITESPACE&#39;, &#39;NONE&#39; or &#39;DEFAULT&#39; (by locale).* Also works with arrays, lists or sets*/${#numbers.formatInteger(num,3,&#39;POINT&#39;)}${#numbers.arrayFormatInteger(numArray,3,&#39;POINT&#39;)}${#numbers.listFormatInteger(numList,3,&#39;POINT&#39;)}${#numbers.setFormatInteger(numSet,3,&#39;POINT&#39;)}/** ==========================* Formatting decimal numbers* ==========================*//** Set minimum integer digits and (exact) decimal digits.* Also works with arrays, lists or sets*/${#numbers.formatDecimal(num,3,2)}${#numbers.arrayFormatDecimal(numArray,3,2)}${#numbers.listFormatDecimal(numList,3,2)}${#numbers.setFormatDecimal(numSet,3,2)}/** Set minimum integer digits and (exact) decimal digits, and also decimal separator.* Also works with arrays, lists or sets*/${#numbers.formatDecimal(num,3,2,&#39;COMMA&#39;)}${#numbers.arrayFormatDecimal(numArray,3,2,&#39;COMMA&#39;)}${#numbers.listFormatDecimal(numList,3,2,&#39;COMMA&#39;)}${#numbers.setFormatDecimal(numSet,3,2,&#39;COMMA&#39;)}/** Set minimum integer digits and (exact) decimal digits, and also thousands and* decimal separator.* Also works with arrays, lists or sets*/${#numbers.formatDecimal(num,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}${#numbers.arrayFormatDecimal(numArray,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}${#numbers.listFormatDecimal(numList,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}${#numbers.setFormatDecimal(numSet,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}/** ==========================* Utility methods* ==========================*//** Create a sequence (array) of integer numbers going* from x to y*/${#numbers.sequence(from,to)}${#numbers.sequence(from,to,step)}</code></pre><h2 id="strings"><a href="#strings" class="headerlink" title="#strings"></a><code>#strings</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Strings* ======================================================================*//** Null-safe toString()*/${#strings.toString(obj)} // also array*, list* and set*/** Check whether a String is empty (or null). Performs a trim() operation before check* Also works with arrays, lists or sets* * Also works with arrays, lists or sets*/${#strings.isEmpty(name)}${#strings.arrayIsEmpty(nameArr)}${#strings.listIsEmpty(nameList)}${#strings.setIsEmpty(nameSet)}/** Perform an &#39;isEmpty()&#39; check on a string and return it if false, defaulting to* another specified string if true.* Also works with arrays, lists or sets*/${#strings.defaultString(text,default)}${#strings.arrayDefaultString(textArr,default)}${#strings.listDefaultString(textList,default)}${#strings.setDefaultString(textSet,default)}/** Check whether a fragment is contained in a String* Also works with arrays, lists or sets*/${#strings.contains(name,&#39;ez&#39;)} // also array*, list* and set*${#strings.containsIgnoreCase(name,&#39;ez&#39;)} // also array*, list* and set*/** Check whether a String starts or ends with a fragment* Also works with arrays, lists or sets*/${#strings.startsWith(name,&#39;Don&#39;)} // also array*, list* and set*${#strings.endsWith(name,endingFragment)} // also array*, list* and set*/** Substring-related operations* Also works with arrays, lists or sets*/${#strings.indexOf(name,frag)} // also array*, list* and set*${#strings.substring(name,3,5)} // also array*, list* and set*${#strings.substringAfter(name,prefix)} // also array*, list* and set*${#strings.substringBefore(name,suffix)} // also array*, list* and set*${#strings.replace(name,&#39;las&#39;,&#39;ler&#39;)} // also array*, list* and set*/** Append and prepend* Also works with arrays, lists or sets*/${#strings.prepend(str,prefix)} // also array*, list* and set*${#strings.append(str,suffix)} // also array*, list* and set*/** Change case* Also works with arrays, lists or sets*/${#strings.toUpperCase(name)} // also array*, list* and set*${#strings.toLowerCase(name)} // also array*, list* and set*/** Split and join*/${#strings.arrayJoin(namesArray,&#39;,&#39;)}${#strings.listJoin(namesList,&#39;,&#39;)}${#strings.setJoin(namesSet,&#39;,&#39;)}${#strings.arraySplit(namesStr,&#39;,&#39;)} // returns String[]${#strings.listSplit(namesStr,&#39;,&#39;)} // returns List&lt;String&gt;${#strings.setSplit(namesStr,&#39;,&#39;)} // returns Set&lt;String&gt;/** Trim* Also works with arrays, lists or sets*/${#strings.trim(str)} // also array*, list* and set*/** Compute length* Also works with arrays, lists or sets*/${#strings.length(str)} // also array*, list* and set*/** Abbreviate text making it have a maximum size of n. If text is bigger, it* will be clipped and finished in &quot;...&quot;* Also works with arrays, lists or sets*/${#strings.abbreviate(str,10)} // also array*, list* and set*/** Convert the first character to upper-case (and vice-versa)*/${#strings.capitalize(str)} // also array*, list* and set*${#strings.unCapitalize(str)} // also array*, list* and set*/** Convert the first character of every word to upper-case*/${#strings.capitalizeWords(str)} // also array*, list* and set*${#strings.capitalizeWords(str,delimiters)} // also array*, list* and set*/** Escape the string*/${#strings.escapeXml(str)} // also array*, list* and set*${#strings.escapeJava(str)} // also array*, list* and set*${#strings.escapeJavaScript(str)} // also array*, list* and set*${#strings.unescapeJava(str)} // also array*, list* and set*${#strings.unescapeJavaScript(str)} // also array*, list* and set*/** Null-safe comparison and concatenation*/${#strings.equals(first, second)}${#strings.equalsIgnoreCase(first, second)}${#strings.concat(values...)}${#strings.concatReplaceNulls(nullValue, values...)}/** Random*/${#strings.randomAlphanumeric(count)}</code></pre><h2 id="objects"><a href="#objects" class="headerlink" title="#objects"></a><code>#objects</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Objects* ======================================================================*//** Return obj if it is not null, and default otherwise* Also works with arrays, lists or sets*/${#objects.nullSafe(obj,default)}${#objects.arrayNullSafe(objArray,default)}${#objects.listNullSafe(objList,default)}${#objects.setNullSafe(objSet,default)}</code></pre><h2 id="bools"><a href="#bools" class="headerlink" title="#bools"></a><code>#bools</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Bools* ======================================================================*//** Evaluate a condition in the same way that it would be evaluated in a th:if tag* (see conditional evaluation chapter afterwards).* Also works with arrays, lists or sets*/${#bools.isTrue(obj)}${#bools.arrayIsTrue(objArray)}${#bools.listIsTrue(objList)}${#bools.setIsTrue(objSet)}/** Evaluate with negation* Also works with arrays, lists or sets*/${#bools.isFalse(cond)}${#bools.arrayIsFalse(condArray)}${#bools.listIsFalse(condList)}${#bools.setIsFalse(condSet)}/** Evaluate and apply AND operator* Receive an array, a list or a set as parameter*/${#bools.arrayAnd(condArray)}${#bools.listAnd(condList)}${#bools.setAnd(condSet)}/** Evaluate and apply OR operator* Receive an array, a list or a set as parameter*/${#bools.arrayOr(condArray)}${#bools.listOr(condList)}${#bools.setOr(condSet)}</code></pre><h2 id="arrays"><a href="#arrays" class="headerlink" title="#arrays"></a><code>#arrays</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Arrays* ======================================================================*//** Converts to array, trying to infer array component class.* Note that if resulting array is empty, or if the elements* of the target object are not all of the same class,* this method will return Object[].*/${#arrays.toArray(object)}/** Convert to arrays of the specified component class.*/${#arrays.toStringArray(object)}${#arrays.toIntegerArray(object)}${#arrays.toLongArray(object)}${#arrays.toDoubleArray(object)}${#arrays.toFloatArray(object)}${#arrays.toBooleanArray(object)}/** Compute length*/${#arrays.length(array)}/** Check whether array is empty*/${#arrays.isEmpty(array)}/** Check if element or elements are contained in array*/${#arrays.contains(array, element)}${#arrays.containsAll(array, elements)}</code></pre><h2 id="lists"><a href="#lists" class="headerlink" title="#lists"></a><code>#lists</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Lists* ======================================================================*//** Converts to list*/${#lists.toList(object)}/** Compute size*/${#lists.size(list)}/** Check whether list is empty*/${#lists.isEmpty(list)}/** Check if element or elements are contained in list*/${#lists.contains(list, element)}${#lists.containsAll(list, elements)}/** Sort a copy of the given list. The members of the list must implement* comparable or you must define a comparator.*/${#lists.sort(list)}${#lists.sort(list, comparator)}</code></pre><h2 id="sets"><a href="#sets" class="headerlink" title="#sets"></a><code>#sets</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Sets* ======================================================================*//** Converts to set*/${#sets.toSet(object)}/** Compute size*/${#sets.size(set)}/** Check whether set is empty*/${#sets.isEmpty(set)}/** Check if element or elements are contained in set*/${#sets.contains(set, element)}${#sets.containsAll(set, elements)}</code></pre><h2 id="maps"><a href="#maps" class="headerlink" title="#maps"></a><code>#maps</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Maps* ======================================================================*//** Compute size*/${#maps.size(map)}/** Check whether map is empty*/${#maps.isEmpty(map)}/** Check if key/s or value/s are contained in maps*/${#maps.containsKey(map, key)}${#maps.containsAllKeys(map, keys)}${#maps.containsValue(map, value)}${#maps.containsAllValues(map, value)}</code></pre><h2 id="aggregates"><a href="#aggregates" class="headerlink" title="#aggregates"></a><code>#aggregates</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Aggregates* ======================================================================*//** Compute sum. Returns null if array or collection is empty*/${#aggregates.sum(array)}${#aggregates.sum(collection)}/** Compute average. Returns null if array or collection is empty*/${#aggregates.avg(array)}${#aggregates.avg(collection)}</code></pre><h2 id="messages"><a href="#messages" class="headerlink" title="#messages"></a><code>#messages</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Messages* ======================================================================*//** Obtain externalized messages. Can receive a single key, a key plus arguments,* or an array/list/set of keys (in which case it will return an array/list/set of* externalized messages).* If a message is not found, a default message (like &#39;??msgKey??&#39;) is returned.*/${#messages.msg(&#39;msgKey&#39;)}${#messages.msg(&#39;msgKey&#39;, param1)}${#messages.msg(&#39;msgKey&#39;, param1, param2)}${#messages.msg(&#39;msgKey&#39;, param1, param2, param3)}${#messages.msgWithParams(&#39;msgKey&#39;, new Object[] {param1, param2, param3, param4})}${#messages.arrayMsg(messageKeyArray)}${#messages.listMsg(messageKeyList)}${#messages.setMsg(messageKeySet)}/** Obtain externalized messages or null. Null is returned instead of a default* message if a message for the specified key is not found.*/${#messages.msgOrNull(&#39;msgKey&#39;)}${#messages.msgOrNull(&#39;msgKey&#39;, param1)}${#messages.msgOrNull(&#39;msgKey&#39;, param1, param2)}${#messages.msgOrNull(&#39;msgKey&#39;, param1, param2, param3)}${#messages.msgOrNullWithParams(&#39;msgKey&#39;, new Object[] {param1, param2, param3, param4})}${#messages.arrayMsgOrNull(messageKeyArray)}${#messages.listMsgOrNull(messageKeyList)}${#messages.setMsgOrNull(messageKeySet)}</code></pre><h2 id="ids"><a href="#ids" class="headerlink" title="#ids"></a><code>#ids</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Ids* ======================================================================*//** Normally used in th:id attributes, for appending a counter to the id attribute value* so that it remains unique even when involved in an iteration process.*/${#ids.seq(&#39;someId&#39;)}/** Normally used in th:for attributes in &lt;label&gt; tags, so that these labels can refer to Ids* generated by means if the #ids.seq(...) function.** Depending on whether the &lt;label&gt; goes before or after the element with the #ids.seq(...)* function, the &quot;next&quot; (label goes before &quot;seq&quot;) or the &quot;prev&quot; function (label goes after* &quot;seq&quot;) function should be called.*/${#ids.next(&#39;someId&#39;)}${#ids.prev(&#39;someId&#39;)}</code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 内置对象</title>
      <link href="/2019/11/23/Thymeleaf%20%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1(1)/"/>
      <url>/2019/11/23/Thymeleaf%20%E5%86%85%E7%BD%AE%E5%AF%B9%E8%B1%A1(1)/</url>
      
        <content type="html"><![CDATA[<h1 id="Thymeleaf-内置对象"><a href="#Thymeleaf-内置对象" class="headerlink" title="Thymeleaf 内置对象"></a>Thymeleaf 内置对象</h1><h2 id="dates"><a href="#dates" class="headerlink" title="#dates"></a><code>#dates</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Dates* ======================================================================*//** Format date with the standard locale format* Also works with arrays, lists or sets*/${#dates.format(date)}${#dates.arrayFormat(datesArray)}${#dates.listFormat(datesList)}${#dates.setFormat(datesSet)}/** Format date with the ISO8601 format* Also works with arrays, lists or sets*/${#dates.formatISO(date)}${#dates.arrayFormatISO(datesArray)}${#dates.listFormatISO(datesList)}${#dates.setFormatISO(datesSet)}/** Format date with the specified pattern* Also works with arrays, lists or sets*/${#dates.format(date, &#39;dd/MMM/yyyy HH:mm&#39;)}${#dates.arrayFormat(datesArray, &#39;dd/MMM/yyyy HH:mm&#39;)}${#dates.listFormat(datesList, &#39;dd/MMM/yyyy HH:mm&#39;)}${#dates.setFormat(datesSet, &#39;dd/MMM/yyyy HH:mm&#39;)}/** Obtain date properties* Also works with arrays, lists or sets*/${#dates.day(date)} // also arrayDay(...), listDay(...), etc.${#dates.month(date)} // also arrayMonth(...), listMonth(...), etc.${#dates.monthName(date)} // also arrayMonthName(...), listMonthName(...), etc.${#dates.monthNameShort(date)} // also arrayMonthNameShort(...), listMonthNameShort(...), etc.${#dates.year(date)} // also arrayYear(...), listYear(...), etc.${#dates.dayOfWeek(date)} // also arrayDayOfWeek(...), listDayOfWeek(...), etc.${#dates.dayOfWeekName(date)} // also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.${#dates.dayOfWeekNameShort(date)} // also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.${#dates.hour(date)} // also arrayHour(...), listHour(...), etc.${#dates.minute(date)} // also arrayMinute(...), listMinute(...), etc.${#dates.second(date)} // also arraySecond(...), listSecond(...), etc.${#dates.millisecond(date)} // also arrayMillisecond(...), listMillisecond(...), etc./** Create date (java.util.Date) objects from its components*/${#dates.create(year,month,day)}${#dates.create(year,month,day,hour,minute)}${#dates.create(year,month,day,hour,minute,second)}${#dates.create(year,month,day,hour,minute,second)}${#dates.create(year,month,day,hour,minute,second,millisecond)}/** Create a date (java.util.Date) object for the current date and time*/${#dates.createNow()}/** Create a date (java.util.Date) object for the current date (time set to 00:00)*/${#dates.createToday()}</code></pre><h2 id="Calendars"><a href="#Calendars" class="headerlink" title="#Calendars"></a><code>#Calendars</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Calendars* ======================================================================*//** Format calendar with the standard locale format* Also works with arrays, lists or sets*/${#calendars.format(cal)}${#calendars.arrayFormat(calArray)}${#calendars.listFormat(calList)}${#calendars.setFormat(calSet)}/** Format calendar with the ISO8601 format* Also works with arrays, lists or sets*/${#calendars.formatISO(cal)}${#calendars.arrayFormatISO(calArray)}${#calendars.listFormatISO(calList)}${#calendars.setFormatISO(calSet)}/** Format calendar with the specified pattern* Also works with arrays, lists or sets*/${#calendars.format(cal, &#39;dd/MMM/yyyy HH:mm&#39;)}${#calendars.arrayFormat(calArray, &#39;dd/MMM/yyyy HH:mm&#39;)}${#calendars.listFormat(calList, &#39;dd/MMM/yyyy HH:mm&#39;)}${#calendars.setFormat(calSet, &#39;dd/MMM/yyyy HH:mm&#39;)}/** Obtain calendar properties* Also works with arrays, lists or sets*/${#calendars.day(date)} // also arrayDay(...), listDay(...), etc.${#calendars.month(date)} // also arrayMonth(...), listMonth(...), etc.${#calendars.monthName(date)} // also arrayMonthName(...), listMonthName(...), etc.${#calendars.monthNameShort(date)} // also arrayMonthNameShort(...), listMonthNameShort(...), etc.${#calendars.year(date)} // also arrayYear(...), listYear(...), etc.${#calendars.dayOfWeek(date)} // also arrayDayOfWeek(...), listDayOfWeek(...), etc.${#calendars.dayOfWeekName(date)} // also arrayDayOfWeekName(...), listDayOfWeekName(...), etc.${#calendars.dayOfWeekNameShort(date)} // also arrayDayOfWeekNameShort(...), listDayOfWeekNameShort(...), etc.${#calendars.hour(date)} // also arrayHour(...), listHour(...), etc.${#calendars.hour(date)} // also arrayHour(...), listHour(...), etc.${#calendars.minute(date)} // also arrayMinute(...), listMinute(...), etc.${#calendars.second(date)} // also arraySecond(...), listSecond(...), etc.${#calendars.millisecond(date)} // also arrayMillisecond(...), listMillisecond(...), etc./** Create calendar (java.util.Calendar) objects from its components*/${#calendars.create(year,month,day)}${#calendars.create(year,month,day,hour,minute)}${#calendars.create(year,month,day,hour,minute,second)}${#calendars.create(year,month,day,hour,minute,second,millisecond)}/** Create a calendar (java.util.Calendar) object for the current date and time*/${#calendars.createNow()}/** Create a calendar (java.util.Calendar) object for the current date (time set to 00:00)*/${#calendars.createToday()}</code></pre><h2 id="numbers"><a href="#numbers" class="headerlink" title="#numbers"></a><code>#numbers</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Numbers* ======================================================================*//** ==========================* Formatting integer numbers* ==========================*//** Set minimum integer digits.* Also works with arrays, lists or sets*/${#numbers.formatInteger(num,3)}${#numbers.arrayFormatInteger(numArray,3)}${#numbers.listFormatInteger(numList,3)}${#numbers.setFormatInteger(numSet,3)}/** Set minimum integer digits and thousands separator:* &#39;POINT&#39;, &#39;COMMA&#39;, &#39;WHITESPACE&#39;, &#39;NONE&#39; or &#39;DEFAULT&#39; (by locale).* Also works with arrays, lists or sets*/${#numbers.formatInteger(num,3,&#39;POINT&#39;)}${#numbers.arrayFormatInteger(numArray,3,&#39;POINT&#39;)}${#numbers.listFormatInteger(numList,3,&#39;POINT&#39;)}${#numbers.setFormatInteger(numSet,3,&#39;POINT&#39;)}/** ==========================* Formatting decimal numbers* ==========================*//** Set minimum integer digits and (exact) decimal digits.* Also works with arrays, lists or sets*/${#numbers.formatDecimal(num,3,2)}${#numbers.arrayFormatDecimal(numArray,3,2)}${#numbers.listFormatDecimal(numList,3,2)}${#numbers.setFormatDecimal(numSet,3,2)}/** Set minimum integer digits and (exact) decimal digits, and also decimal separator.* Also works with arrays, lists or sets*/${#numbers.formatDecimal(num,3,2,&#39;COMMA&#39;)}${#numbers.arrayFormatDecimal(numArray,3,2,&#39;COMMA&#39;)}${#numbers.listFormatDecimal(numList,3,2,&#39;COMMA&#39;)}${#numbers.setFormatDecimal(numSet,3,2,&#39;COMMA&#39;)}/** Set minimum integer digits and (exact) decimal digits, and also thousands and* decimal separator.* Also works with arrays, lists or sets*/${#numbers.formatDecimal(num,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}${#numbers.arrayFormatDecimal(numArray,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}${#numbers.listFormatDecimal(numList,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}${#numbers.setFormatDecimal(numSet,3,&#39;POINT&#39;,2,&#39;COMMA&#39;)}/** ==========================* Utility methods* ==========================*//** Create a sequence (array) of integer numbers going* from x to y*/${#numbers.sequence(from,to)}${#numbers.sequence(from,to,step)}</code></pre><h2 id="strings"><a href="#strings" class="headerlink" title="#strings"></a><code>#strings</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Strings* ======================================================================*//** Null-safe toString()*/${#strings.toString(obj)} // also array*, list* and set*/** Check whether a String is empty (or null). Performs a trim() operation before check* Also works with arrays, lists or sets* * Also works with arrays, lists or sets*/${#strings.isEmpty(name)}${#strings.arrayIsEmpty(nameArr)}${#strings.listIsEmpty(nameList)}${#strings.setIsEmpty(nameSet)}/** Perform an &#39;isEmpty()&#39; check on a string and return it if false, defaulting to* another specified string if true.* Also works with arrays, lists or sets*/${#strings.defaultString(text,default)}${#strings.arrayDefaultString(textArr,default)}${#strings.listDefaultString(textList,default)}${#strings.setDefaultString(textSet,default)}/** Check whether a fragment is contained in a String* Also works with arrays, lists or sets*/${#strings.contains(name,&#39;ez&#39;)} // also array*, list* and set*${#strings.containsIgnoreCase(name,&#39;ez&#39;)} // also array*, list* and set*/** Check whether a String starts or ends with a fragment* Also works with arrays, lists or sets*/${#strings.startsWith(name,&#39;Don&#39;)} // also array*, list* and set*${#strings.endsWith(name,endingFragment)} // also array*, list* and set*/** Substring-related operations* Also works with arrays, lists or sets*/${#strings.indexOf(name,frag)} // also array*, list* and set*${#strings.substring(name,3,5)} // also array*, list* and set*${#strings.substringAfter(name,prefix)} // also array*, list* and set*${#strings.substringBefore(name,suffix)} // also array*, list* and set*${#strings.replace(name,&#39;las&#39;,&#39;ler&#39;)} // also array*, list* and set*/** Append and prepend* Also works with arrays, lists or sets*/${#strings.prepend(str,prefix)} // also array*, list* and set*${#strings.append(str,suffix)} // also array*, list* and set*/** Change case* Also works with arrays, lists or sets*/${#strings.toUpperCase(name)} // also array*, list* and set*${#strings.toLowerCase(name)} // also array*, list* and set*/** Split and join*/${#strings.arrayJoin(namesArray,&#39;,&#39;)}${#strings.listJoin(namesList,&#39;,&#39;)}${#strings.setJoin(namesSet,&#39;,&#39;)}${#strings.arraySplit(namesStr,&#39;,&#39;)} // returns String[]${#strings.listSplit(namesStr,&#39;,&#39;)} // returns List&lt;String&gt;${#strings.setSplit(namesStr,&#39;,&#39;)} // returns Set&lt;String&gt;/** Trim* Also works with arrays, lists or sets*/${#strings.trim(str)} // also array*, list* and set*/** Compute length* Also works with arrays, lists or sets*/${#strings.length(str)} // also array*, list* and set*/** Abbreviate text making it have a maximum size of n. If text is bigger, it* will be clipped and finished in &quot;...&quot;* Also works with arrays, lists or sets*/${#strings.abbreviate(str,10)} // also array*, list* and set*/** Convert the first character to upper-case (and vice-versa)*/${#strings.capitalize(str)} // also array*, list* and set*${#strings.unCapitalize(str)} // also array*, list* and set*/** Convert the first character of every word to upper-case*/${#strings.capitalizeWords(str)} // also array*, list* and set*${#strings.capitalizeWords(str,delimiters)} // also array*, list* and set*/** Escape the string*/${#strings.escapeXml(str)} // also array*, list* and set*${#strings.escapeJava(str)} // also array*, list* and set*${#strings.escapeJavaScript(str)} // also array*, list* and set*${#strings.unescapeJava(str)} // also array*, list* and set*${#strings.unescapeJavaScript(str)} // also array*, list* and set*/** Null-safe comparison and concatenation*/${#strings.equals(first, second)}${#strings.equalsIgnoreCase(first, second)}${#strings.concat(values...)}${#strings.concatReplaceNulls(nullValue, values...)}/** Random*/${#strings.randomAlphanumeric(count)}</code></pre><h2 id="objects"><a href="#objects" class="headerlink" title="#objects"></a><code>#objects</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Objects* ======================================================================*//** Return obj if it is not null, and default otherwise* Also works with arrays, lists or sets*/${#objects.nullSafe(obj,default)}${#objects.arrayNullSafe(objArray,default)}${#objects.listNullSafe(objList,default)}${#objects.setNullSafe(objSet,default)}</code></pre><h2 id="bools"><a href="#bools" class="headerlink" title="#bools"></a><code>#bools</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Bools* ======================================================================*//** Evaluate a condition in the same way that it would be evaluated in a th:if tag* (see conditional evaluation chapter afterwards).* Also works with arrays, lists or sets*/${#bools.isTrue(obj)}${#bools.arrayIsTrue(objArray)}${#bools.listIsTrue(objList)}${#bools.setIsTrue(objSet)}/** Evaluate with negation* Also works with arrays, lists or sets*/${#bools.isFalse(cond)}${#bools.arrayIsFalse(condArray)}${#bools.listIsFalse(condList)}${#bools.setIsFalse(condSet)}/** Evaluate and apply AND operator* Receive an array, a list or a set as parameter*/${#bools.arrayAnd(condArray)}${#bools.listAnd(condList)}${#bools.setAnd(condSet)}/** Evaluate and apply OR operator* Receive an array, a list or a set as parameter*/${#bools.arrayOr(condArray)}${#bools.listOr(condList)}${#bools.setOr(condSet)}</code></pre><h2 id="arrays"><a href="#arrays" class="headerlink" title="#arrays"></a><code>#arrays</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Arrays* ======================================================================*//** Converts to array, trying to infer array component class.* Note that if resulting array is empty, or if the elements* of the target object are not all of the same class,* this method will return Object[].*/${#arrays.toArray(object)}/** Convert to arrays of the specified component class.*/${#arrays.toStringArray(object)}${#arrays.toIntegerArray(object)}${#arrays.toLongArray(object)}${#arrays.toDoubleArray(object)}${#arrays.toFloatArray(object)}${#arrays.toBooleanArray(object)}/** Compute length*/${#arrays.length(array)}/** Check whether array is empty*/${#arrays.isEmpty(array)}/** Check if element or elements are contained in array*/${#arrays.contains(array, element)}${#arrays.containsAll(array, elements)}</code></pre><h2 id="lists"><a href="#lists" class="headerlink" title="#lists"></a><code>#lists</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Lists* ======================================================================*//** Converts to list*/${#lists.toList(object)}/** Compute size*/${#lists.size(list)}/** Check whether list is empty*/${#lists.isEmpty(list)}/** Check if element or elements are contained in list*/${#lists.contains(list, element)}${#lists.containsAll(list, elements)}/** Sort a copy of the given list. The members of the list must implement* comparable or you must define a comparator.*/${#lists.sort(list)}${#lists.sort(list, comparator)}</code></pre><h2 id="sets"><a href="#sets" class="headerlink" title="#sets"></a><code>#sets</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Sets* ======================================================================*//** Converts to set*/${#sets.toSet(object)}/** Compute size*/${#sets.size(set)}/** Check whether set is empty*/${#sets.isEmpty(set)}/** Check if element or elements are contained in set*/${#sets.contains(set, element)}${#sets.containsAll(set, elements)}</code></pre><h2 id="maps"><a href="#maps" class="headerlink" title="#maps"></a><code>#maps</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Maps* ======================================================================*//** Compute size*/${#maps.size(map)}/** Check whether map is empty*/${#maps.isEmpty(map)}/** Check if key/s or value/s are contained in maps*/${#maps.containsKey(map, key)}${#maps.containsAllKeys(map, keys)}${#maps.containsValue(map, value)}${#maps.containsAllValues(map, value)}</code></pre><h2 id="aggregates"><a href="#aggregates" class="headerlink" title="#aggregates"></a><code>#aggregates</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Aggregates* ======================================================================*//** Compute sum. Returns null if array or collection is empty*/${#aggregates.sum(array)}${#aggregates.sum(collection)}/** Compute average. Returns null if array or collection is empty*/${#aggregates.avg(array)}${#aggregates.avg(collection)}</code></pre><h2 id="messages"><a href="#messages" class="headerlink" title="#messages"></a><code>#messages</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Messages* ======================================================================*//** Obtain externalized messages. Can receive a single key, a key plus arguments,* or an array/list/set of keys (in which case it will return an array/list/set of* externalized messages).* If a message is not found, a default message (like &#39;??msgKey??&#39;) is returned.*/${#messages.msg(&#39;msgKey&#39;)}${#messages.msg(&#39;msgKey&#39;, param1)}${#messages.msg(&#39;msgKey&#39;, param1, param2)}${#messages.msg(&#39;msgKey&#39;, param1, param2, param3)}${#messages.msgWithParams(&#39;msgKey&#39;, new Object[] {param1, param2, param3, param4})}${#messages.arrayMsg(messageKeyArray)}${#messages.listMsg(messageKeyList)}${#messages.setMsg(messageKeySet)}/** Obtain externalized messages or null. Null is returned instead of a default* message if a message for the specified key is not found.*/${#messages.msgOrNull(&#39;msgKey&#39;)}${#messages.msgOrNull(&#39;msgKey&#39;, param1)}${#messages.msgOrNull(&#39;msgKey&#39;, param1, param2)}${#messages.msgOrNull(&#39;msgKey&#39;, param1, param2, param3)}${#messages.msgOrNullWithParams(&#39;msgKey&#39;, new Object[] {param1, param2, param3, param4})}${#messages.arrayMsgOrNull(messageKeyArray)}${#messages.listMsgOrNull(messageKeyList)}${#messages.setMsgOrNull(messageKeySet)}</code></pre><h2 id="ids"><a href="#ids" class="headerlink" title="#ids"></a><code>#ids</code></h2><pre><code>/** ======================================================================* See javadoc API for class org.thymeleaf.expression.Ids* ======================================================================*//** Normally used in th:id attributes, for appending a counter to the id attribute value* so that it remains unique even when involved in an iteration process.*/${#ids.seq(&#39;someId&#39;)}/** Normally used in th:for attributes in &lt;label&gt; tags, so that these labels can refer to Ids* generated by means if the #ids.seq(...) function.** Depending on whether the &lt;label&gt; goes before or after the element with the #ids.seq(...)* function, the &quot;next&quot; (label goes before &quot;seq&quot;) or the &quot;prev&quot; function (label goes after* &quot;seq&quot;) function should be called.*/${#ids.next(&#39;someId&#39;)}${#ids.prev(&#39;someId&#39;)}</code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 模板布局</title>
      <link href="/2019/11/23/Thymeleaf%20%E6%A8%A1%E6%9D%BF%E5%B8%83%E5%B1%80/"/>
      <url>/2019/11/23/Thymeleaf%20%E6%A8%A1%E6%9D%BF%E5%B8%83%E5%B1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="Thymeleaf-模板布局"><a href="#Thymeleaf-模板布局" class="headerlink" title="Thymeleaf 模板布局"></a>Thymeleaf 模板布局</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>这节主要介绍模板的引入。及如何在不改变前端人员的 HTML 显示结果的情况下设计模板（通过属性配置动态时不显示的部分）。</p><h2 id="模板模块导入"><a href="#模板模块导入" class="headerlink" title="模板模块导入"></a>模板模块导入</h2><p>首先定义一个 <code>/resources/templates/footer.html</code> 文件：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html SYSTEM "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-4.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token entity" title="&copy;">&amp;copy;</span> 2018 Copyright by Lusifer.        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的代码定义了一个片段称为 <code>copy</code>，我们可以很容易地使用 <code>th:include</code> 或者 <code>th:replace</code> 属性包含在我们的主页上</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>include</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>include</code> 的表达式想当简洁。这里有三种写法：</p><ul><li><code>templatename::domselector</code> 或者 <code>templatename::[domselector]</code> 引入模板页面中的某个模块</li><li><code>templatename</code> 引入模板页面</li><li><code>::domselector</code> 或者 <code>this::domselector</code> 引入自身模板的模块</li></ul><p>上面所有的 <code>templatename</code> 和 <code>domselector</code> 的写法都支持表达式写法：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>include</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer :: (${user.isAdmin}? #{footer.admin} : #{footer.normaluser})<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="不使用-fragment-来引用模块"><a href="#不使用-fragment-来引用模块" class="headerlink" title="不使用 fragment 来引用模块"></a>不使用 fragment 来引用模块</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>copy-section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token entity" title="&copy;">&amp;copy;</span> 2018 Copyright by Lusifer.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>我们可以用 CSS 的选择器写法来引入</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>include</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer :: #copy-section<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="include-和-replace-的区别"><a href="#include-和-replace-的区别" class="headerlink" title="include 和 replace 的区别"></a>include 和 replace 的区别</h2><p><code>th:include</code> 和 <code>th:replace</code> 都可以引入模块，两者的区别在于：</p><ul><li><code>th:include</code>：引入子模块的 children，依然保留父模块的 tag</li><li><code>th:replace</code>：引入子模块的所有，不保留父模块的 tag</li></ul><h3 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span> <span class="token attr-name"><span class="token namespace">th:</span>fragment</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token entity" title="&copy;">&amp;copy;</span> 2018 Copyright by Lusifer.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="引入界面"><a href="#引入界面" class="headerlink" title="引入界面"></a>引入界面</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>include</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>replace</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>footer :: copy<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="显示结果"><a href="#显示结果" class="headerlink" title="显示结果"></a>显示结果</h3><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>        <span class="token entity" title="&copy;">&amp;copy;</span> 2018 Copyright by Lusifer.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>footer</span><span class="token punctuation">></span></span>        <span class="token entity" title="&copy;">&amp;copy;</span> 2018 Copyright by Lusifer.    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>footer</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 常用语法</title>
      <link href="/2019/11/23/Thymeleaf%20%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/11/23/Thymeleaf%20%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Thymeleaf-常用语法"><a href="#Thymeleaf-常用语法" class="headerlink" title="Thymeleaf 常用语法"></a>Thymeleaf 常用语法</h1><h2 id="引入-Thymeleaf"><a href="#引入-Thymeleaf" class="headerlink" title="引入 Thymeleaf"></a>引入 Thymeleaf</h2><p>修改 html 标签用于引入 thymeleaf 引擎，这样才可以在其他标签里使用 <code>th:*</code> 语法，这是下面语法的前提。</p><pre class="line-numbers language-html"><code class="language-html"><span class="token doctype">&lt;!DOCTYPE html SYSTEM "http://www.thymeleaf.org/dtd/xhtml1-strict-thymeleaf-spring4-4.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/1999/xhtml<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>th</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.thymeleaf.org<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="获取变量值"><a href="#获取变量值" class="headerlink" title="获取变量值"></a>获取变量值</h2><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>Hello！, <span class="token punctuation">'</span> + ${name} + <span class="token punctuation">'</span>!<span class="token punctuation">'</span><span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>name<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>可以看出获取变量值用 <code>$</code> 符号,对于javaBean的话使用 <code>变量名.属性名</code> 方式获取,这点和 <code>EL</code> 表达式一样.</p><p>另外 <code>$</code> 表达式只能写在th标签内部,不然不会生效,上面例子就是使用 <code>th:text</code> 标签的值替换 <code>p</code> 标签里面的值,至于 <code>p</code> 里面的原有的值只是为了给前端开发时做展示用的.这样的话很好的做到了前后端分离.</p><h2 id="引入-URL"><a href="#引入-URL" class="headerlink" title="引入 URL"></a>引入 URL</h2><p>Thymeleaf 对于 URL 的处理是通过语法 <code>@{…}</code> 来处理的</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{http://www.baidu.com}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>绝对路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>相对路径<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{css/bootstrap.min.css}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Content路径,默认访问static下的css文件夹<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>类似的标签有:<code>th:href</code> 和 <code>th:src</code></p><h2 id="字符串替换"><a href="#字符串替换" class="headerlink" title="字符串替换"></a>字符串替换</h2><p>很多时候可能我们只需要对一大段文字中的某一处地方进行替换，可以通过字符串拼接操作完成：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>Welcome to our application, <span class="token punctuation">'</span> + ${user.name} + <span class="token punctuation">'</span>!<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一种更简洁的方式是：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>|Welcome to our application, ${user.name}!|<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>当然这种形式限制比较多，|…|中只能包含变量表达式${…}，不能包含其他常量、条件表达式等。</p><h2 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h2><p>在表达式中可以使用各类算术运算符，例如+, -, *, /, %</p><pre class="line-numbers language-html"><code class="language-html">th:with="isEven=(${prodStat.count} % 2 == 0)"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>逻辑运算符&gt;, &lt;, &lt;=,&gt;=，==,!=都可以使用，唯一需要注意的是使用&lt;,&gt;时需要用它的HTML转义符：</p><pre class="line-numbers language-html"><code class="language-html">th:if="${prodStat.count} <span class="token entity" title="&gt;">&amp;gt;</span> 1"th:text="'Execution mode is ' + ( (${execMode} == 'dev')? 'Development' : 'Production')"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="条件"><a href="#条件" class="headerlink" title="条件"></a>条件</h2><h3 id="if-unless"><a href="#if-unless" class="headerlink" title="if/unless"></a>if/unless</h3><p>Thymeleaf 中使用 <code>th:if</code> 和 <code>th:unless</code> 属性进行条件判断，下面的例子中，标签只有在 <code>th:if</code> 中条件成立时才显示：</p><pre class="line-numbers language-html"><code class="language-html">&lt;a th:href="@{/login}" th:unless=${session.user != null}>Login<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>th:unless</code> 于 <code>th:if</code> 恰好相反，只有表达式中的条件不成立，才会显示其内容。</p><h3 id="switch"><a href="#switch" class="headerlink" title="switch"></a>switch</h3><p>Thymeleaf 同样支持多路选择 Switch 结构：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.role}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>admin<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is an administrator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{roles.manager}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is a manager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>默认属性 default 可以用 * 表示：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>switch</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${user.role}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span><span class="token punctuation">'</span>admin<span class="token punctuation">'</span><span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is an administrator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{roles.manager}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is a manager<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>case</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>User is some other thing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h2><p>渲染列表数据是一种非常常见的场景，例如现在有 n 条记录需要渲染成一个表格，该数据集合必须是可以遍历的，使用 <code>th:each</code> 标签：</p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>h1</span><span class="token punctuation">></span></span>Product list<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>h1</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>NAME<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>PRICE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>th</span><span class="token punctuation">></span></span>IN STOCK<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>th</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>tr</span> <span class="token attr-name"><span class="token namespace">th:</span>each</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>prod : ${prods}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Onions<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.price}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>2.41<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>td</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${prod.inStock}? #{true} : #{false}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>yes<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>td</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>tr</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>../home.html<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Return to home<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，需要在被循环渲染的元素（这里是）中加入 <code>th:each</code> 标签，其中 <code>th:each=&quot;prod : ${prods}&quot;</code> 意味着对集合变量 <code>prods</code> 进行遍历，循环变量是 <code>prod</code> 在循环体中可以通过表达式访问。</p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 表达式语法</title>
      <link href="/2019/11/23/Thymeleaf%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95/"/>
      <url>/2019/11/23/Thymeleaf%20%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Thymeleaf-表达式语法"><a href="#Thymeleaf-表达式语法" class="headerlink" title="Thymeleaf 表达式语法"></a>Thymeleaf 表达式语法</h1><h2 id="Message-表达式"><a href="#Message-表达式" class="headerlink" title="Message 表达式"></a>Message 表达式</h2><p><code>#{...}</code></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>utext</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{home.welcome(${session.user.name})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> Welcome to our grocery store, Sebastian Pepper!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span> <span class="token attr-name"><span class="token namespace">th:</span>utext</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>#{${welcomeMsgKey}(${session.user.name})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span> Welcome to our grocery store, Sebastian Pepper!<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="变量表达式"><a href="#变量表达式" class="headerlink" title="变量表达式"></a>变量表达式</h2><p><code>${}</code></p><pre><code>ongl 标准语法，方法也可以被调用</code></pre><h2 id="选择变量表达式"><a href="#选择变量表达式" class="headerlink" title="选择变量表达式"></a>选择变量表达式</h2><p><code>*{}</code></p><pre class="line-numbers language-html"><code class="language-html"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name"><span class="token namespace">th:</span>object</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${session.user}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*{firstName}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sebastian<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Surname: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*{lastName}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Pepper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Nationality: &lt;span th:text={nationality}">Saturn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span> 等价于<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${session.user.firstName}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sebastian<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Surname: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${session.user.lastName}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Pepper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Nationality: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${session.user.nationality}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Saturn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>当然了，这两者可以混合使用还有一种方式<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Name: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*{session.user.name}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Sebastian<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Surname: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*{session.user.surname}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Pepper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>     <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>Nationality: <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name"><span class="token namespace">th:</span>text</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>*{session.user.nationality}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Saturn<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span>.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>  <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="链接-URL-表达式"><a href="#链接-URL-表达式" class="headerlink" title="链接 URL 表达式"></a>链接 URL 表达式</h2><p><code>@{}</code></p><pre class="line-numbers language-html"><code class="language-html"><span class="token comment" spellcheck="true">&lt;!-- Will produce 'http://localhost:8080/gtvg/order/details?orderId=3' (plus rewriting) --></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>details.html<span class="token punctuation">"</span></span><span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{http://localhost:8080/gtvg/order/details(orderId<span class="token punctuation">=</span>${o.id})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>view<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span> <span class="token comment" spellcheck="true">&lt;!-- Will produce '/gtvg/order/details?orderId=3' (plus rewriting) --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>details.html<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/order/details(orderId<span class="token punctuation">=</span>${o.id})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>view<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- Will produce '/gtvg/order/3/details' (plus rewriting) --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>a</span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>details.html<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">th:</span>href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>@{/order/{orderId}/details(orderId<span class="token punctuation">=</span>${o.id})}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>view<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>a</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><table><thead><tr><th>分类</th><th>实例</th></tr></thead><tbody><tr><td>文本</td><td><code>one text</code>，<code>Another one!</code>，…</td></tr><tr><td>数字</td><td>0 , 34 , 3.0 , 12.3 ,…</td></tr><tr><td>真假</td><td>true , false</td></tr><tr><td>文字符号</td><td>one , sometext , main ,…</td></tr></tbody></table><h2 id="算数运算"><a href="#算数运算" class="headerlink" title="算数运算"></a>算数运算</h2><table><thead><tr><th>分类</th><th>实例</th></tr></thead><tbody><tr><td>+, -, *, /, %</td><td>二元运算符</td></tr><tr><td>-</td><td>减号（一元运算符）</td></tr></tbody></table><h2 id="真假运算"><a href="#真假运算" class="headerlink" title="真假运算"></a>真假运算</h2><table><thead><tr><th>分类</th><th>实例</th></tr></thead><tbody><tr><td>and , or</td><td>二元运算符</td></tr><tr><td>! , not</td><td>否定（一元运算符）</td></tr></tbody></table><h2 id="比较运算"><a href="#比较运算" class="headerlink" title="比较运算"></a>比较运算</h2><table><thead><tr><th>分类</th><th>实例</th></tr></thead><tbody><tr><td>&gt;, &lt;, &gt;=, &lt;= (gt, lt, ge, le)</td><td>比较</td></tr><tr><td>== , != ( eq , ne )</td><td>平等</td></tr></tbody></table><h2 id="条件运算"><a href="#条件运算" class="headerlink" title="条件运算"></a>条件运算</h2><table><thead><tr><th>分类</th><th>实例</th></tr></thead><tbody><tr><td>if-then</td><td>(if) ? (then)</td></tr><tr><td>if-then-else</td><td>(if) ? (then) : (else)</td></tr><tr><td>Default</td><td>(value) ?: (defaultvalue)</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CRUD 操作</title>
      <link href="/2019/11/23/044.Spring%20Boot-MyBatis-CRUD/"/>
      <url>/2019/11/23/044.Spring%20Boot-MyBatis-CRUD/</url>
      
        <content type="html"><![CDATA[<h1 id="CRUD-操作"><a href="#CRUD-操作" class="headerlink" title="CRUD 操作"></a>CRUD 操作</h1><h2 id="案例代码如下"><a href="#案例代码如下" class="headerlink" title="案例代码如下"></a>案例代码如下</h2><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>Date<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>domain<span class="token punctuation">.</span>TbUser<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>TbUserMapper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token punctuation">.</span>PageHelper<span class="token punctuation">;</span><span class="token keyword">import</span> com<span class="token punctuation">.</span>github<span class="token punctuation">.</span>pagehelper<span class="token punctuation">.</span>PageInfo<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Rollback<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>transaction<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Transactional<span class="token punctuation">;</span><span class="token keyword">import</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>entity<span class="token punctuation">.</span>Example<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>List<span class="token punctuation">;</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token annotation punctuation">@Transactional</span><span class="token annotation punctuation">@Rollback</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloSpringBootApplicationTests</span> <span class="token punctuation">{</span>    <span class="token comment" spellcheck="true">/**     * 注入 DAO     */</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> TbUserMapper tbUserMapper<span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">/**     * 查询     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        List<span class="token operator">&lt;</span>TbUser<span class="token operator">></span> tbUsers <span class="token operator">=</span> tbUserMapper<span class="token punctuation">.</span><span class="token function">selectAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUsers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>tbUser <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>tbUser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 条件查询     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testSelectCondition</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>TbUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andEqualTo</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token string">"zhangsan"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        List<span class="token operator">&lt;</span>TbUser<span class="token operator">></span> tbUsers <span class="token operator">=</span> tbUserMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUsers<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>tbUser <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>tbUser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 新增     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testInsert</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        TbUser tbUser <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">TbUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUser<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"Lusifer"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUser<span class="token punctuation">.</span><span class="token function">setPassword</span><span class="token punctuation">(</span><span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUser<span class="token punctuation">.</span><span class="token function">setPhone</span><span class="token punctuation">(</span><span class="token string">"15888888888"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUser<span class="token punctuation">.</span><span class="token function">setEmail</span><span class="token punctuation">(</span><span class="token string">"topsale@vip.qq.com"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUser<span class="token punctuation">.</span><span class="token function">setCreated</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUser<span class="token punctuation">.</span><span class="token function">setUpdated</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUserMapper<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span>tbUser<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 更新     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testUpdate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        TbUser tbUser <span class="token operator">=</span> tbUserMapper<span class="token punctuation">.</span><span class="token function">selectByPrimaryKey</span><span class="token punctuation">(</span>37L<span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUser<span class="token punctuation">.</span><span class="token function">setUsername</span><span class="token punctuation">(</span><span class="token string">"Happy"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        tbUserMapper<span class="token punctuation">.</span><span class="token function">updateByPrimaryKey</span><span class="token punctuation">(</span>tbUser<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 修改     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testDelete</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        tbUserMapper<span class="token punctuation">.</span><span class="token function">deleteByPrimaryKey</span><span class="token punctuation">(</span>37L<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token comment" spellcheck="true">/**     * 分页     */</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testPage</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        Example example <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Example</span><span class="token punctuation">(</span>TbUser<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        example<span class="token punctuation">.</span><span class="token function">createCriteria</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">andLike</span><span class="token punctuation">(</span><span class="token string">"username"</span><span class="token punctuation">,</span> <span class="token string">"z%"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        PageHelper<span class="token punctuation">.</span><span class="token function">startPage</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        PageInfo<span class="token operator">&lt;</span>TbUser<span class="token operator">></span> pageInfo <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PageInfo</span><span class="token operator">&lt;</span><span class="token operator">></span><span class="token punctuation">(</span>tbUserMapper<span class="token punctuation">.</span><span class="token function">selectByExample</span><span class="token punctuation">(</span>example<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span><span class="token function">getTotal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>pageInfo<span class="token punctuation">.</span><span class="token function">getPages</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        pageInfo<span class="token punctuation">.</span><span class="token function">getList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>tbUser <span class="token operator">-</span><span class="token operator">></span> <span class="token punctuation">{</span>            System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>tbUser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码生成插件</title>
      <link href="/2019/11/23/043.-Spring%20Boot-MyBatis-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E6%8F%92%E4%BB%B6/"/>
      <url>/2019/11/23/043.-Spring%20Boot-MyBatis-%E4%BB%A3%E7%A0%81%E7%94%9F%E6%88%90%E6%8F%92%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="代码生成插件"><a href="#代码生成插件" class="headerlink" title="代码生成插件"></a>代码生成插件</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>我们无需手动编写 实体类、DAO、XML 配置文件，只需要使用 MyBatis 提供的一个 Maven 插件就可以自动生成所需的各种文件便能够满足基本的业务需求，如果业务比较复杂只需要修改相关文件即可。</p><h2 id="配置插件"><a href="#配置插件" class="headerlink" title="配置插件"></a>配置插件</h2><p>在 <code>pom.xml</code> 文件中增加 <code>mybatis-generator-maven-plugin</code> 插件</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.mybatis.generator<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-generator-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.3.7<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configurationFile</span><span class="token punctuation">></span></span>${basedir}/src/main/resources/generator/generatorConfig.xml<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configurationFile</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>overwrite</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>overwrite</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>verbose</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>verbose</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${mysql.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mapper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> <code>configurationFile</code> 自动生成所需的配置文件路径</p></blockquote><h2 id="自动生成的配置"><a href="#自动生成的配置" class="headerlink" title="自动生成的配置"></a>自动生成的配置</h2><p>在 <code>src/main/resources/generator/</code> 目录下创建 <code>generatorConfig.xml</code> 配置文件：</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE generatorConfiguration        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 引入数据库连接配置 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span> <span class="token attr-name">resource</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbc.properties<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mysql<span class="token punctuation">"</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MyBatis3Simple<span class="token punctuation">"</span></span> <span class="token attr-name">defaultModelType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>flat<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>beginningDelimiter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>`<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>endingDelimiter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>`<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 配置 tk.mybatis 插件 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>tk.mybatis.mapper.generator.MapperPlugin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mappers<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.funtl.utils.MyMapper<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 配置数据库连接 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span>                <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.driverClass}<span class="token punctuation">"</span></span>                <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.connectionURL}<span class="token punctuation">"</span></span>                <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.username}<span class="token punctuation">"</span></span>                <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>${jdbc.password}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 配置实体类存放路径 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.funtl.hello.spring.boot.domain<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src/main/java<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 配置 XML 存放路径 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mapper<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src/main/resources<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 配置 DAO 存放路径 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span>                <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.funtl.hello.spring.boot.mapper<span class="token punctuation">"</span></span>                <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src/main/java<span class="token punctuation">"</span></span>                <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>XMLMAPPER<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 配置需要指定生成的数据库和表，% 代表所有表 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">catalog</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>myshop<span class="token punctuation">"</span></span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>%<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>            <span class="token comment" spellcheck="true">&lt;!-- 默认为 false，如果设置为 true，在生成的 SQL 中，table 名字不会加上 catalog 或 schema --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ignoreQualifiersAtRuntime<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>            <span class="token comment" spellcheck="true">&lt;!-- mysql 配置 --></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatedKey</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>id<span class="token punctuation">"</span></span> <span class="token attr-name">sqlStatement</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>Mysql<span class="token punctuation">"</span></span> <span class="token attr-name">identity</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置数据源"><a href="#配置数据源" class="headerlink" title="配置数据源"></a>配置数据源</h2><p>在 <code>src/main/resources</code> 目录下创建 <code>jdbc.properties</code> 数据源配置：</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">jdbc.driverClass</span><span class="token punctuation">=</span><span class="token attr-value">com.mysql.cj.jdbc.Driver</span><span class="token attr-name">jdbc.connectionURL</span><span class="token punctuation">=</span><span class="token attr-value">jdbc:mysql://192.168.141.130:3306/myshop?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false</span><span class="token attr-name">jdbc.username</span><span class="token punctuation">=</span><span class="token attr-value">root</span><span class="token attr-name">jdbc.password</span><span class="token punctuation">=</span><span class="token attr-value">123456</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="插件自动生成"><a href="#插件自动生成" class="headerlink" title="插件自动生成"></a>插件自动生成</h2><pre class="line-numbers language-bash"><code class="language-bash">mvn mybatis-generator:generate<span class="token comment" spellcheck="true"># 输出如下</span><span class="token string">"C:\Program Files\Java\jdk1.8.0_181\bin\java.exe"</span> -Dvisualvm.id<span class="token operator">=</span>757855494303000 -Dmaven.multiModuleProjectDirectory<span class="token operator">=</span>D:\Workspace\Study\other\hello-spring-boot <span class="token string">"-Dmaven.home=C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\plugins\maven\lib\maven3"</span> <span class="token string">"-Dclassworlds.conf=C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\plugins\maven\lib\maven3\bin\m2.conf"</span> <span class="token string">"-javaagent:C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\lib\idea_rt.jar=64651:C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\bin"</span> -Dfile.encoding<span class="token operator">=</span>UTF-8 -classpath <span class="token string">"C:\Program Files\JetBrains\IntelliJ IDEA 2019.1.3\plugins\maven\lib\maven3\boot\plexus-classworlds-2.5.2.jar"</span> org.codehaus.classworlds.Launcher -Didea.version2019.1.3 --update-snapshots -s D:\apache-maven-3.6.1\conf\settings.xml org.mybatis.generator:mybatis-generator-maven-plugin:1.3.7:generate<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Scanning <span class="token keyword">for</span> projects<span class="token punctuation">..</span>.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span>                                                                         <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Building hello-spring-boot 0.0.1-SNAPSHOT<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> --- mybatis-generator-maven-plugin:1.3.7:generate <span class="token punctuation">(</span>default-cli<span class="token punctuation">)</span> @ hello-spring-boot ---<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Connecting to the Database<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Introspecting table myshop<span class="token punctuation">..</span>%<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_param_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_param_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_param_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_cat<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_cat<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_cat<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_content<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_content<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_content<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_desc<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_desc<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_desc<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_param<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_param<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_item_param<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order_shipping<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order_shipping<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_order_shipping<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_user<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_user<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_user<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Record class <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_content_category<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating Mapper Interface <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_content_category<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Generating SQL Map <span class="token keyword">for</span> table myshop<span class="token punctuation">..</span>tb_content_category<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemParamItemMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemCatMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbContentMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderItemMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemDescMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemParamMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderShippingMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbUserMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbContentCategoryMapper.xml<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemParamItem.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemParamItemMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemCat.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemCatMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrder.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbContent.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbContentMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderItem.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderItemMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItem.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemDesc.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemDescMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemParam.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbItemParamMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderShipping.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbOrderShippingMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbUser.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbUserMapper.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbContentCategory.java<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Saving <span class="token function">file</span> TbContentCategoryMapper.java<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Column id, specified as an identity column <span class="token keyword">in</span> table myshop<span class="token punctuation">..</span>tb_order, does not exist <span class="token keyword">in</span> the table.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Column id, specified as an identity column <span class="token keyword">in</span> table myshop<span class="token punctuation">..</span>tb_item_desc, does not exist <span class="token keyword">in</span> the table.<span class="token punctuation">[</span>WARNING<span class="token punctuation">]</span> Column id, specified as an identity column <span class="token keyword">in</span> table myshop<span class="token punctuation">..</span>tb_order_shipping, does not exist <span class="token keyword">in</span> the table.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> BUILD SUCCESS<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Total time: 1.892 s<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Finished at: 2019-06-24T03:40:09+08:00<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Final Memory: 30M/634M<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> ------------------------------------------------------------------------Process finished with <span class="token keyword">exit</span> code 0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="附：扩展阅读"><a href="#附：扩展阅读" class="headerlink" title="附：扩展阅读"></a>附：扩展阅读</h2><h3 id="完整配置案例"><a href="#完整配置案例" class="headerlink" title="完整配置案例"></a>完整配置案例</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token doctype">&lt;!DOCTYPE generatorConfiguration  PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN""http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"></span><span class="token comment" spellcheck="true">&lt;!-- 配置生成器 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>generatorConfiguration</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- 可以用于加载配置项或者配置文件，在整个配置文件中就可以使用${propertyKey}的方式来引用配置项    resource：配置资源加载地址，使用resource，MBG从classpath开始找，比如com/myproject/generatorConfig.properties            url：配置资源加载地质，使用URL的方式，比如file:///C:/myfolder/generatorConfig.properties.    注意，两个属性只能选址一个;    另外，如果使用了mybatis-generator-maven-plugin，那么在pom.xml中定义的properties都可以直接在generatorConfig.xml中使用&lt;properties resource="" url="" /> --></span> <span class="token comment" spellcheck="true">&lt;!-- 在MBG工作的时候，需要额外加载的依赖包     location属性指明加载jar/zip包的全路径&lt;classPathEntry location="/Program Files/IBM/SQLLIB/java/db2java.zip" />  --></span><span class="token comment" spellcheck="true">&lt;!--     context:生成一组对象的环境     id:必选，上下文id，用于在生成错误时提示    defaultModelType:指定生成对象的样式        1，conditional：类似hierarchical；        2，flat：所有内容（主键，blob）等全部生成在一个对象中；        3，hierarchical：主键生成一个XXKey对象(key class)，Blob等单独生成一个对象，其他简单属性在一个对象中(record class)    targetRuntime:        1，MyBatis3：默认的值，生成基于MyBatis3.x以上版本的内容，包括XXXBySample；        2，MyBatis3Simple：类似MyBatis3，只是不生成XXXBySample；    introspectedColumnImpl：类全限定名，用于扩展MBG--></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>context</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>mysql<span class="token punctuation">"</span></span> <span class="token attr-name">defaultModelType</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>hierarchical<span class="token punctuation">"</span></span> <span class="token attr-name">targetRuntime</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>MyBatis3Simple<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 自动识别数据库关键字，默认false，如果设置为true，根据SqlReservedWords中定义的关键字列表；        一般保留默认值，遇到数据库关键字（Java关键字），使用columnOverride覆盖     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>autoDelimitKeywords<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 生成的Java文件的编码 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javaFileEncoding<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>UTF-8<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 格式化java代码 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>javaFormatter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.generator.api.dom.DefaultJavaFormatter<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 格式化XML代码 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>xmlFormatter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.generator.api.dom.DefaultXmlFormatter<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- beginningDelimiter和endingDelimiter：指明数据库的用于标记数据库对象名的符号，比如ORACLE就是双引号，MYSQL默认是`反引号； --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>beginningDelimiter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>`<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>endingDelimiter<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>`<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 必须要有的，使用这个配置链接数据库        @TODO:是否可以扩展        # MySQL 8.x: com.mysql.cj.jdbc.Driver     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>jdbcConnection</span> <span class="token attr-name">driverClass</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com.mysql.jdbc.Driver<span class="token punctuation">"</span></span> <span class="token attr-name">connectionURL</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>jdbc:mysql:///pss<span class="token punctuation">"</span></span> <span class="token attr-name">userId</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>root<span class="token punctuation">"</span></span> <span class="token attr-name">password</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>admin<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 这里面可以设置property属性，每一个property属性都设置到配置的Driver上 --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>jdbcConnection</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- java类型处理器         用于处理DB中的类型到Java中的类型，默认使用JavaTypeResolverDefaultImpl；        注意一点，默认会先尝试使用Integer，Long，Short等来对应DECIMAL和 NUMERIC数据类型；     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaTypeResolver</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>org.mybatis.generator.internal.types.JavaTypeResolverDefaultImpl<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--             true：使用BigDecimal对应DECIMAL和 NUMERIC数据类型            false：默认,                scale>0;length>18：使用BigDecimal;                scale=0;length[10,18]：使用Long；                scale=0;length[5,9]：使用Integer；                scale=0;length&lt;5：使用Short；         --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>forceBigDecimals<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaTypeResolver</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- java模型创建器，是必须要的元素        负责：1，key类（见context的defaultModelType）；2，java类；3，查询类        targetPackage：生成的类要放的包，真实的包受enableSubPackages属性控制；        targetProject：目标项目，指定一个存在的目录下，生成的内容会放到指定目录中，如果目录不存在，MBG不会自动建目录     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaModelGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com._520it.mybatis.domain<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src/main/java<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!--  for MyBatis3/MyBatis3Simple            自动为每一个生成的类创建一个构造方法，构造方法包含了所有的field；而不是使用setter；         --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>constructorBased<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- for MyBatis3 / MyBatis3Simple            是否创建一个不可变的类，如果为true，            那么MBG会创建一个没有setter方法的类，取而代之的是类似constructorBased的类         --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>immutable<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 设置一个根对象，            如果设置了这个根对象，那么生成的keyClass或者recordClass会继承这个类；在Table的rootClass属性中可以覆盖该选项            注意：如果在key class或者record class中有root class相同的属性，MBG就不会重新生成这些属性了，包括：                1，属性名相同，类型相同，有相同的getter/setter方法；         --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>rootClass<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com._520it.mybatis.domain.BaseDomain<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 设置是否在getter方法中，对String类型字段调用trim()方法 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>trimStrings<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaModelGenerator</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 生成SQL map的XML文件生成器，        注意，在Mybatis3之后，我们可以使用mapper.xml文件+Mapper接口（或者不用mapper接口），            或者只使用Mapper接口+Annotation，所以，如果 javaClientGenerator配置中配置了需要生成XML的话，这个元素就必须配置        targetPackage/targetProject:同javaModelGenerator     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>sqlMapGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com._520it.mybatis.mapper<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src/main/resources<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>sqlMapGenerator</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 对于mybatis来说，即生成Mapper接口，注意，如果没有配置该元素，那么默认不会生成Mapper接口         targetPackage/targetProject:同javaModelGenerator        type：选择怎么生成mapper接口（在MyBatis3/MyBatis3Simple下）：            1，ANNOTATEDMAPPER：会生成使用Mapper接口+Annotation的方式创建（SQL生成在annotation中），不会生成对应的XML；            2，MIXEDMAPPER：使用混合配置，会生成Mapper接口，并适当添加合适的Annotation，但是XML会生成在XML中；            3，XMLMAPPER：会生成Mapper接口，接口完全依赖XML；        注意，如果context是MyBatis3Simple：只支持ANNOTATEDMAPPER和XMLMAPPER    --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>javaClientGenerator</span> <span class="token attr-name">targetPackage</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>com._520it.mybatis.mapper<span class="token punctuation">"</span></span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ANNOTATEDMAPPER<span class="token punctuation">"</span></span> <span class="token attr-name">targetProject</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>src/main/java<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 在targetPackage的基础上，根据数据库的schema再生成一层package，最终生成的类放在这个package下，默认为false --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>enableSubPackages<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>true<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 可以为所有生成的接口添加一个父接口，但是MBG只负责生成，不负责检查        &lt;property name="rootInterface" value=""/>         --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>javaClientGenerator</span><span class="token punctuation">></span></span>    <span class="token comment" spellcheck="true">&lt;!-- 选择一个table来生成相关文件，可以有一个或多个table，必须要有table元素        选择的table会生成一下文件：        1，SQL map文件        2，生成一个主键类；        3，除了BLOB和主键的其他字段的类；        4，包含BLOB的类；        5，一个用户生成动态查询的条件类（selectByExample, deleteByExample），可选；        6，Mapper接口（可选）        tableName（必要）：要生成对象的表名；        注意：大小写敏感问题。正常情况下，MBG会自动的去识别数据库标识符的大小写敏感度，在一般情况下，MBG会            根据设置的schema，catalog或tablename去查询数据表，按照下面的流程：            1，如果schema，catalog或tablename中有空格，那么设置的是什么格式，就精确的使用指定的大小写格式去查询；            2，否则，如果数据库的标识符使用大写的，那么MBG自动把表名变成大写再查找；            3，否则，如果数据库的标识符使用小写的，那么MBG自动把表名变成小写再查找；            4，否则，使用指定的大小写格式查询；        另外的，如果在创建表的时候，使用的""把数据库对象规定大小写，就算数据库标识符是使用的大写，在这种情况下也会使用给定的大小写来创建表名；        这个时候，请设置delimitIdentifiers="true"即可保留大小写格式；        可选：        1，schema：数据库的schema；        2，catalog：数据库的catalog；        3，alias：为数据表设置的别名，如果设置了alias，那么生成的所有的SELECT SQL语句中，列名会变成：alias_actualColumnName        4，domainObjectName：生成的domain类的名字，如果不设置，直接使用表名作为domain类的名字；可以设置为somepck.domainName，那么会自动把domainName类再放到somepck包里面；        5，enableInsert（默认true）：指定是否生成insert语句；        6，enableSelectByPrimaryKey（默认true）：指定是否生成按照主键查询对象的语句（就是getById或get）；        7，enableSelectByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询语句；        8，enableUpdateByPrimaryKey（默认true）：指定是否生成按照主键修改对象的语句（即update)；        9，enableDeleteByPrimaryKey（默认true）：指定是否生成按照主键删除对象的语句（即delete）；        10，enableDeleteByExample（默认true）：MyBatis3Simple为false，指定是否生成动态删除语句；        11，enableCountByExample（默认true）：MyBatis3Simple为false，指定是否生成动态查询总条数语句（用于分页的总条数查询）；        12，enableUpdateByExample（默认true）：MyBatis3Simple为false，指定是否生成动态修改语句（只修改对象中不为空的属性）；        13，modelType：参考context元素的defaultModelType，相当于覆盖；        14，delimitIdentifiers：参考tableName的解释，注意，默认的delimitIdentifiers是双引号，如果类似MYSQL这样的数据库，使用的是`（反引号，那么还需要设置context的beginningDelimiter和endingDelimiter属性）        15，delimitAllColumns：设置是否所有生成的SQL中的列名都使用标识符引起来。默认为false，delimitIdentifiers参考context的属性        注意，table里面很多参数都是对javaModelGenerator，context等元素的默认属性的一个复写；     --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>table</span> <span class="token attr-name">tableName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userinfo<span class="token punctuation">"</span></span> <span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 参考 javaModelGenerator 的 constructorBased属性--></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>constructorBased<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 默认为false，如果设置为true，在生成的SQL中，table名字不会加上catalog或schema； --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>ignoreQualifiersAtRuntime<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 参考 javaModelGenerator 的 immutable 属性 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>immutable<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 指定是否只生成domain类，如果设置为true，只生成domain类，如果还配置了sqlMapGenerator，那么在mapper XML文件中，只生成resultMap元素 --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>modelOnly<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 参考 javaModelGenerator 的 rootClass 属性         &lt;property name="rootClass" value=""/>         --></span>        <span class="token comment" spellcheck="true">&lt;!-- 参考javaClientGenerator 的  rootInterface 属性        &lt;property name="rootInterface" value=""/>        --></span>        <span class="token comment" spellcheck="true">&lt;!-- 如果设置了runtimeCatalog，那么在生成的SQL中，使用该指定的catalog，而不是table元素上的catalog         &lt;property name="runtimeCatalog" value=""/>        --></span>        <span class="token comment" spellcheck="true">&lt;!-- 如果设置了runtimeSchema，那么在生成的SQL中，使用该指定的schema，而不是table元素上的schema         &lt;property name="runtimeSchema" value=""/>        --></span>        <span class="token comment" spellcheck="true">&lt;!-- 如果设置了runtimeTableName，那么在生成的SQL中，使用该指定的tablename，而不是table元素上的tablename         &lt;property name="runtimeTableName" value=""/>        --></span>        <span class="token comment" spellcheck="true">&lt;!-- 注意，该属性只针对MyBatis3Simple有用；            如果选择的runtime是MyBatis3Simple，那么会生成一个SelectAll方法，如果指定了selectAllOrderByClause，那么会在该SQL中添加指定的这个order条件；         --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectAllOrderByClause<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>age desc,username asc<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 如果设置为true，生成的model类会直接使用column本身的名字，而不会再使用驼峰命名方法，比如BORN_DATE，生成的属性名字就是BORN_DATE,而不会是bornDate --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>useActualColumnNames<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>false<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>        <span class="token comment" spellcheck="true">&lt;!-- generatedKey用于生成生成主键的方法，            如果设置了该元素，MBG会在生成的&lt;insert>元素中生成一条正确的&lt;selectKey>元素，该元素可选            column:主键的列名；            sqlStatement：要生成的selectKey语句，有以下可选项：                Cloudscape:相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()                DB2       :相当于selectKey的SQL为： VALUES IDENTITY_VAL_LOCAL()                DB2_MF    :相当于selectKey的SQL为：SELECT IDENTITY_VAL_LOCAL() FROM SYSIBM.SYSDUMMY1                Derby      :相当于selectKey的SQL为：VALUES IDENTITY_VAL_LOCAL()                HSQLDB      :相当于selectKey的SQL为：CALL IDENTITY()                Informix  :相当于selectKey的SQL为：select dbinfo('sqlca.sqlerrd1') from systables where tabid=1                MySql      :相当于selectKey的SQL为：SELECT LAST_INSERT_ID()                SqlServer :相当于selectKey的SQL为：SELECT SCOPE_IDENTITY()                SYBASE      :相当于selectKey的SQL为：SELECT @@IDENTITY                JDBC      :相当于在生成的insert元素上添加useGeneratedKeys="true"和keyProperty属性        &lt;generatedKey column="" sqlStatement=""/>         --></span>        <span class="token comment" spellcheck="true">&lt;!--             该元素会在根据表中列名计算对象属性名之前先重命名列名，非常适合用于表中的列都有公用的前缀字符串的时候，            比如列名为：CUST_ID,CUST_NAME,CUST_EMAIL,CUST_ADDRESS等；            那么就可以设置searchString为"^CUST_"，并使用空白替换，那么生成的Customer对象中的属性名称就不是            custId,custName等，而是先被替换为ID,NAME,EMAIL,然后变成属性：id，name，email；            注意，MBG是使用java.util.regex.Matcher.replaceAll来替换searchString和replaceString的，            如果使用了columnOverride元素，该属性无效；        &lt;columnRenamingRule searchString="" replaceString=""/>         --></span>         <span class="token comment" spellcheck="true">&lt;!-- 用来修改表中某个列的属性，MBG会使用修改后的列来生成domain的属性；             column:要重新设置的列名；             注意，一个table元素中可以有多个columnOverride元素哈~          --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>columnOverride</span> <span class="token attr-name">column</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>username<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>             <span class="token comment" spellcheck="true">&lt;!-- 使用property属性来指定列要生成的属性名称 --></span>             <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>property</span> <span class="token attr-name">name</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>property<span class="token punctuation">"</span></span> <span class="token attr-name">value</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>userName<span class="token punctuation">"</span></span><span class="token punctuation">/></span></span>             <span class="token comment" spellcheck="true">&lt;!-- javaType用于指定生成的domain的属性类型，使用类型的全限定名             &lt;property name="javaType" value=""/>              --></span>             <span class="token comment" spellcheck="true">&lt;!-- jdbcType用于指定该列的JDBC类型              &lt;property name="jdbcType" value=""/>              --></span>             <span class="token comment" spellcheck="true">&lt;!-- typeHandler 用于指定该列使用到的TypeHandler，如果要指定，配置类型处理器的全限定名                 注意，mybatis中，不会生成到mybatis-config.xml中的typeHandler                 只会生成类似：where id = #{id,jdbcType=BIGINT,typeHandler=com._520it.mybatis.MyTypeHandler}的参数描述             &lt;property name="jdbcType" value=""/>             --></span>             <span class="token comment" spellcheck="true">&lt;!-- 参考table元素的delimitAllColumns配置，默认为false             &lt;property name="delimitedColumnName" value=""/>              --></span>         <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>columnOverride</span><span class="token punctuation">></span></span>         <span class="token comment" spellcheck="true">&lt;!-- ignoreColumn设置一个MGB忽略的列，如果设置了改列，那么在生成的domain中，生成的SQL中，都不会有该列出现              column:指定要忽略的列的名字；             delimitedColumnName：参考table元素的delimitAllColumns配置，默认为false             注意，一个table元素中可以有多个ignoreColumn元素         &lt;ignoreColumn column="deptId" delimitedColumnName=""/>         --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>table</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>context</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>generatorConfiguration</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 整合 TkMyBatis</title>
      <link href="/2019/11/23/042.Spring%20Boot-MyBatis-TkMyBatis/"/>
      <url>/2019/11/23/042.Spring%20Boot-MyBatis-TkMyBatis/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-整合-TkMyBatis"><a href="#Spring-Boot-整合-TkMyBatis" class="headerlink" title="Spring Boot 整合 TkMyBatis"></a>Spring Boot 整合 TkMyBatis</h1><h2 id="什么是-TkMyBatis"><a href="#什么是-TkMyBatis" class="headerlink" title="什么是 TkMyBatis"></a>什么是 TkMyBatis</h2><p>tk.mybatis 是在 MyBatis 框架的基础上提供了很多工具，让开发更加高效</p><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><p>在 <code>pom.xml</code> 文件中引入 <code>mapper-spring-boot-starter</code> 依赖，该依赖会自动引入 MyBaits 相关依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>tk.mybatis<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mapper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.5<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">mybatis</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 实体类的存放路径</span>    <span class="token key atrule">type-aliases-package</span><span class="token punctuation">:</span> com.funtl.hello.spring.boot.domain    <span class="token key atrule">mapper-locations</span><span class="token punctuation">:</span> classpath<span class="token punctuation">:</span>mapper/*.xml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建通用父级接口"><a href="#创建通用父级接口" class="headerlink" title="创建通用父级接口"></a>创建通用父级接口</h3><p>主要作用是让 DAO 层的接口继承该接口，以达到使用 tk.mybatis 的目的</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">;</span><span class="token keyword">import</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>common<span class="token punctuation">.</span>Mapper<span class="token punctuation">;</span><span class="token keyword">import</span> tk<span class="token punctuation">.</span>mybatis<span class="token punctuation">.</span>mapper<span class="token punctuation">.</span>common<span class="token punctuation">.</span>MySqlMapper<span class="token punctuation">;</span><span class="token comment" spellcheck="true">/** * 自己的 Mapper * 特别注意，该接口不能被扫描到，否则会出错 * &lt;p>Title: MyMapper&lt;/p> * &lt;p>Description: &lt;/p> * * @author Lusifer * @version 1.0.0 * @date 2018/5/29 0:57 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">MyMapper</span><span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token keyword">extends</span> <span class="token class-name">Mapper</span><span class="token operator">&lt;</span>T<span class="token operator">></span><span class="token punctuation">,</span> MySqlMapper<span class="token operator">&lt;</span>T<span class="token operator">></span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="什么是-PageHelper"><a href="#什么是-PageHelper" class="headerlink" title="什么是 PageHelper"></a>什么是 PageHelper</h2><p>PageHelper 是 Mybatis 的分页插件，支持多数据库、多数据源。可以简化数据库的分页查询操作，整合过程也极其简单，只需引入依赖即可。</p><h3 id="POM-1"><a href="#POM-1" class="headerlink" title="POM"></a>POM</h3><p>在 <code>pom.xml</code> 文件中引入 <code>pagehelper-spring-boot-starter</code> 依赖</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.github.pagehelper<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>pagehelper-spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.12<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 整合 HikariCP</title>
      <link href="/2019/11/23/041.Spring%20Boot-MyBatis-HikariCP/"/>
      <url>/2019/11/23/041.Spring%20Boot-MyBatis-HikariCP/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-整合-HikariCP"><a href="#Spring-Boot-整合-HikariCP" class="headerlink" title="Spring Boot 整合 HikariCP"></a>Spring Boot 整合 HikariCP</h1><h2 id="什么是-HikariCP"><a href="#什么是-HikariCP" class="headerlink" title="什么是 HikariCP"></a>什么是 HikariCP</h2><p>HiKariCP 是数据库连接池的一个后起之秀，号称性能最好，可以完美地 PK 掉其他连接池。是一个高性能的 JDBC 连接池，基于 BoneCP 做了不少的改进和优化。超快，快到连 Spring Boot 2 都宣布支持了。</p><p><a href="https://github.com/brettwooldridge/HikariCP" target="_blank" rel="noopener">官方 GitHub 地址</a></p><h2 id="什么是-BoneCP"><a href="#什么是-BoneCP" class="headerlink" title="什么是 BoneCP"></a>什么是 BoneCP</h2><p>传说中 BoneCP 在快速这个特点上做到了极致，官方数据是 C3P0 等的 25 倍左右，以下为性能测试报告。</p><h3 id="单线程"><a href="#单线程" class="headerlink" title="单线程"></a>单线程</h3><ul><li>1,000,000 获取连接/释放连接请求</li><li>获取/释放连接之间没有延迟</li><li>连接池范围：20-50</li><li>增量：5</li><li>线程：1</li><li>分区：1</li></ul><p><img src="/SpringBoot/images-benchmarks-bonecp-singlethread.jpg" alt></p><h3 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h3><ul><li>500 个线程分别获取释放 100 个连接</li><li>在获取连接和释放连接之间引入了 10ms 的延迟 <code>Thread.sleep()</code>，模拟连接完成工作</li><li>连接池范围：50-200</li><li>增量：5</li><li>线程：5</li></ul><p><img src="/SpringBoot/images-benchmarks-bonecp-multithread-10ms-delay.jpg" alt></p><h3 id="Prepared-Statement"><a href="#Prepared-Statement" class="headerlink" title="Prepared Statement"></a>Prepared Statement</h3><ul><li>500 个线程分别获取释放 100 个连接</li><li>无延迟</li><li>连接池范围：50-200</li><li>增量：5</li><li>线程：5</li></ul><p><img src="/SpringBoot/Lusifer_20190618071006.png" alt></p><h2 id="为什么需要-HikariCP"><a href="#为什么需要-HikariCP" class="headerlink" title="为什么需要 HikariCP"></a>为什么需要 HikariCP</h2><p>BoneCP 作者放弃维护，并在 Github 项目主页推荐大家使用 HikariCP，Hikari（ひかり[shi ga li]） 来自日文，是 <strong>光</strong> 的意思。这个产品的口号是 <strong>快速、简单、可靠</strong></p><h3 id="优化"><a href="#优化" class="headerlink" title="优化"></a>优化</h3><ul><li><strong>字节码精简 ：</strong> 优化代码，直到编译后的字节码最少，这样，CPU 缓存可以加载更多的程序代码</li><li><strong>优化代理和拦截器 ：</strong> 减少代码，例如 HikariCP 的 Statement proxy 只有 100 行代码，只有 BoneCP 的十分之一</li><li><strong>自定义数组类型（FastStatementList）代替 ArrayList ：</strong> 避免每次 <code>get()</code> 调用都要进行 range check，避免调用 <code>remove()</code> 时的从头到尾的扫描</li><li><strong>自定义集合类型（ConcurrentBag）：</strong> 提高并发读写的效率</li><li><strong>其他针对 BoneCP 缺陷的优化：</strong> 比如对于耗时超过一个 CPU 时间片的方法调用的研究（但没说具体怎么优化）</li></ul><h3 id="代码量"><a href="#代码量" class="headerlink" title="代码量"></a>代码量</h3><p>几个连接池的代码量对比（代码量越少，一般意味着执行效率越高、发生 BUG 的可能性越低）</p><table><thead><tr><th>Pool</th><th>Files</th><th>Code</th></tr></thead><tbody><tr><td>Vibur</td><td>34</td><td>1927</td></tr><tr><td>HikariCP</td><td>21</td><td>2228</td></tr><tr><td>Tomcat</td><td>31</td><td>6345</td></tr><tr><td>BoneCP</td><td>49</td><td>7293</td></tr><tr><td>C3P0</td><td>120</td><td>15550</td></tr></tbody></table><h3 id="速度"><a href="#速度" class="headerlink" title="速度"></a>速度</h3><p>别人发推文测试 Hikari 速度</p><p><img src="/SpringBoot/B1IiUUxCAAEgIHY.jpg" alt></p><h3 id="稳定性"><a href="#稳定性" class="headerlink" title="稳定性"></a>稳定性</h3><p><img src="/SpringBoot/5658815-997cb1b8151acc9b.webp" alt></p><h3 id="可靠性"><a href="#可靠性" class="headerlink" title="可靠性"></a>可靠性</h3><p>另外，关于可靠性方面，也是有实验和数据支持的。对于数据库连接中断的情况，通过测试 <code>getConnection()</code>，各种 CP 的不相同处理方法如下（所有 CP 都配置了跟 <code>connectionTimeout</code> 类似的参数为 5 秒钟）</p><ul><li><strong>HikariCP(A)：</strong> 等待 5 秒钟后，如果连接还是没有恢复，则抛出一个 <code>SQLExceptions</code> 异常；后续的 <code>getConnection()</code> 也是一样处理</li><li><strong>C3P0(C-)：</strong> 完全没有反应，没有提示，也不会在 <code>CheckoutTimeout</code> 配置的时长超时后有任何通知给调用者；然后等待 2 分钟后终于醒来了，返回一个 error</li><li><strong>Tomcat(F)：</strong> 返回一个 connection，然后调用者如果利用这个无效的 connection 执行 SQL 语句 结果可想而知；大约 55 秒之后终于醒来了，这时候的 <code>getConnection()</code> 终于可以返回一个 error，但没有等待参数配置的 5 秒钟，而是立即返回 error</li><li><strong>BoneCP(C)：</strong> 跟 Tomcat 的处理方法一样；也是大约 55 秒之后才醒来，有了正常的反应，并且终于会等待 5 秒钟之后返回 error 了</li></ul><h2 id="整合-HikariCP"><a href="#整合-HikariCP" class="headerlink" title="整合 HikariCP"></a>整合 HikariCP</h2><h3 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h3><pre class="line-numbers language-xml"><code class="language-xml"><span class="token comment" spellcheck="true">&lt;!-- 主要增加 HikariCP 依赖 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.zaxxer<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>HikariCP<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${hikaricp.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>        <span class="token comment" spellcheck="true">&lt;!-- 排除 tomcat-jdbc 以使用 HikariCP --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.apache.tomcat<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>tomcat-jdbc<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token comment" spellcheck="true">&lt;!-- MySQL 驱动 --></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>mysql<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mysql-connector-java<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>${mysql.version}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="application-yml"><a href="#application-yml" class="headerlink" title="application.yml"></a>application.yml</h3><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">datasource</span><span class="token punctuation">:</span>    <span class="token key atrule">type</span><span class="token punctuation">:</span> com.zaxxer.hikari.HikariDataSource    <span class="token key atrule">driver-class-name</span><span class="token punctuation">:</span> com.mysql.cj.jdbc.Driver    <span class="token key atrule">url</span><span class="token punctuation">:</span> jdbc<span class="token punctuation">:</span>mysql<span class="token punctuation">:</span>//192.168.141.130<span class="token punctuation">:</span>3306/myshop<span class="token punctuation">?</span>useUnicode=true<span class="token important">&amp;characterEncoding</span>=utf<span class="token punctuation">-</span>8<span class="token important">&amp;useSSL</span>=false    <span class="token key atrule">username</span><span class="token punctuation">:</span> root    <span class="token key atrule">password</span><span class="token punctuation">:</span> <span class="token number">123456</span>    <span class="token key atrule">hikari</span><span class="token punctuation">:</span>      <span class="token key atrule">minimum-idle</span><span class="token punctuation">:</span> <span class="token number">5</span>      <span class="token key atrule">idle-timeout</span><span class="token punctuation">:</span> <span class="token number">600000</span>      <span class="token key atrule">maximum-pool-size</span><span class="token punctuation">:</span> <span class="token number">10</span>      <span class="token key atrule">auto-commit</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>      <span class="token key atrule">pool-name</span><span class="token punctuation">:</span> MyHikariCP      <span class="token key atrule">max-lifetime</span><span class="token punctuation">:</span> <span class="token number">1800000</span>      <span class="token key atrule">connection-timeout</span><span class="token punctuation">:</span> <span class="token number">30000</span>      <span class="token key atrule">connection-test-query</span><span class="token punctuation">:</span> SELECT 1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> 具体使用方法在 <strong>测试 MyBatis 操作数据库</strong> 时进行介绍，此处仅为准备环节</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Thymeleaf 简介</title>
      <link href="/2019/11/23/039.Spring%20Boot-Thymeleaf-%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/23/039.Spring%20Boot-Thymeleaf-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Thymeleaf-简介"><a href="#Thymeleaf-简介" class="headerlink" title="Thymeleaf 简介"></a>Thymeleaf 简介</h1><h2 id="什么是-Thymeleaf"><a href="#什么是-Thymeleaf" class="headerlink" title="什么是 Thymeleaf"></a>什么是 Thymeleaf</h2><p>Thymeleaf 是一个跟 Velocity、FreeMarker 类似的模板引擎，它可以完全替代 JSP 。相较与其他的模板引擎，它有如下三个极吸引人的特点</p><ul><li>Thymeleaf 在有网络和无网络的环境下皆可运行，即它可以让美工在浏览器查看页面的静态效果，也可以让程序员在服务器查看带数据的动态页面效果。这是由于它支持 html 原型，然后在 html 标签里增加额外的属性来达到模板 + 数据的展示方式。浏览器解释 html 时会忽略未定义的标签属性，所以 thymeleaf 的模板可以静态地运行；当有数据返回到页面时，Thymeleaf 标签会动态地替换掉静态内容，使页面动态显示。</li><li>Thymeleaf 开箱即用的特性。它提供标准和 Spring 标准两种方言，可以直接套用模板实现 JSTL、 OGNL 表达式效果，避免每天套模板、改 JSTL、改标签的困扰。同时开发人员也可以扩展和创建自定义的方言。</li><li>Thymeleaf 提供 Spring 标准方言和一个与 SpringMVC 完美集成的可选模块，可以快速的实现表单绑定、属性编辑器、国际化等功能。</li></ul><h2 id="为什么需要-Thymeleaf"><a href="#为什么需要-Thymeleaf" class="headerlink" title="为什么需要 Thymeleaf"></a>为什么需要 Thymeleaf</h2><p>如果希望以 Jar 形式发布模块则尽量不要使用 JSP 相关知识，这是<strong>因为 JSP 在内嵌的 Servlet 容器上运行有一些问题 (内嵌 Tomcat、 Jetty 不支持 Jar 形式运行 JSP</strong>，Undertow 不支持 JSP)。</p><p>Spring Boot 中推荐使用 Thymeleaf 作为模板引擎，因为 Thymeleaf 提供了完美的 Spring MVC 支持，Spring Boot 提供了大量模板引擎，包括：</p><ul><li>FreeMarker</li><li>Groovy</li><li>Mustache</li><li><strong>Thymeleaf</strong></li><li>Velocity</li><li><strong>Beetl</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot-Thymeleaf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot-Thymeleaf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 常用配置</title>
      <link href="/2019/11/23/038.Spring%20Boot-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
      <url>/2019/11/23/038.Spring%20Boot-%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-常用配置"><a href="#Spring-Boot-常用配置" class="headerlink" title="Spring Boot 常用配置"></a>Spring Boot 常用配置</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>本章节主要介绍一下 Spring Boot 中的一些常用配置，比如：自定义 Banner、配置日志、关闭特定的自动配置等。</p><h2 id="自定义-Banner"><a href="#自定义-Banner" class="headerlink" title="自定义 Banner"></a>自定义 Banner</h2><p>在 Spring Boot 启动的时候会有一个默认的启动图案</p><pre><code>  .   ____          _            __ _ _ /\\ / ___&#39;_ __ _ _(_)_ __  __ _ \ \ \ \( ( )\___ | &#39;_ | &#39;_| | &#39;_ \/ _` | \ \ \ \ \\/  ___)| |_)| | | | | || (_| |  ) ) ) )  &#39;  |____| .__|_| |_|_| |_\__, | / / / / =========|_|==============|___/=/_/_/_/ :: Spring Boot ::        (v2.1.6.RELEASE)</code></pre><p>我们在 <code>src/main/resources</code> 目录下新建一个 banner.txt</p><p>通过 <a href="http://patorjk.com/software/taag" target="_blank" rel="noopener">http://patorjk.com/software/taag</a> 网站生成字符串，将网站生成的字符复制到 banner.txt 中</p><p>再次运行这个程序</p><pre><code>${AnsiColor.BRIGHT_RED}//////////////////////////////////////////////////////////////////////                          _ooOoo_                               ////                         o8888888o                              ////                         88&quot; . &quot;88                              ////                         (| ^_^ |)                              ////                         O\  =  /O                              ////                      ____/`---&#39;\____                           ////                    .&#39;  \\|     |//  `.                         ////                   /  \\|||  :  |||//  \                        ////                  /  _||||| -:- |||||-  \                       ////                  |   | \\\  -  /// |   |                       ////                  | \_|  &#39;&#39;\---/&#39;&#39;  |   |                       ////                  \  .-\__  `-`  ___/-. /                       ////                ___`. .&#39;  /--.--\  `. . ___                     ////              .&quot;&quot; &#39;&lt;  `.___\_&lt;|&gt;_/___.&#39;  &gt;&#39;&quot;&quot;.                  ////            | | :  `- \`.;`\ _ /`;.`/ - ` : | |                 ////            \  \ `-.   \_ __\ /__ _/   .-` /  /                 ////      ========`-.____`-.___\_____/___.-`____.-&#39;========         ////                           `=---=&#39;                              ////      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^        ////            佛祖保佑       永不宕机     永无BUG                  //////////////////////////////////////////////////////////////////////</code></pre><p>常用属性设置：</p><ul><li><code>${AnsiColor.BRIGHT_RED}</code>：设置控制台中输出内容的颜色</li><li><code>${application.version}</code>：用来获取 <code>MANIFEST.MF</code> 文件中的版本号</li><li><code>${application.formatted-version}</code>：格式化后的 <code>${application.version}</code> 版本信息</li><li><code>${spring-boot.version}</code>：Spring Boot 的版本号</li><li><code>${spring-boot.formatted-version}</code>：格式化后的 <code>${spring-boot.version}</code> 版本信息</li></ul><h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><p>Spring Boot 项目使用一个全局的配置文件 <code>application.properties</code> 或者是 <code>application.yml</code>，在 <code>resources</code> 目录下或者类路径下的 <code>/config</code> 下，一般我们放到 <code>resources</code> 下。</p><p>修改 Tomcat 的端口为 9090，并将默认的访问路径 “/“ 修改为 “boot”，可以在 <code>application.properties</code> 中添加：</p><pre class="line-numbers language-properties"><code class="language-properties"><span class="token attr-name">server.port</span><span class="token punctuation">=</span><span class="token attr-value">9090</span><span class="token attr-name">server.context-path</span><span class="token punctuation">=</span><span class="token attr-value">/boot</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>或在 application.yml 中添加：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">9090</span>  <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /boot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>测试效果：</p><p><img src="/SpringBoot/Lusifer1509896204.png" alt></p><p><a href="https://docs.spring.io/spring-boot/docs/2.0.2.RELEASE/reference/html/common-application-properties.html" target="_blank" rel="noopener">更多配置</a></p><h2 id="Starter-POM"><a href="#Starter-POM" class="headerlink" title="Starter POM"></a>Starter POM</h2><p>Spring Boot 为我们提供了简化企业级开发绝大多数场景的 starter pom ，只要使用了应用场景所需要的 starter pom ，相关的技术配置将会消除，就可以得到 Spring Boot 为我们提供的自动配置的 Bean。</p><p><a href="https://docs.spring.io/spring-boot/docs/2.0.2.RELEASE/reference/html/using-boot-build-systems.html#using-boot-starter" target="_blank" rel="noopener">更多 Starter POM</a></p><h2 id="日志配置"><a href="#日志配置" class="headerlink" title="日志配置"></a>日志配置</h2><p>Spring Boot 对各种日志框架都做了支持，我们可以通过配置来修改默认的日志的配置</p><p>默认情况下，Spring Boot 使用 Logback 作为日志框架</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">logging</span><span class="token punctuation">:</span>  <span class="token key atrule">file</span><span class="token punctuation">:</span> ../logs/spring<span class="token punctuation">-</span>boot<span class="token punctuation">-</span>hello.log  <span class="token key atrule">level.org.springframework.web</span><span class="token punctuation">:</span> DEBUG<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="关闭特定的自动配置"><a href="#关闭特定的自动配置" class="headerlink" title="关闭特定的自动配置"></a>关闭特定的自动配置</h2><p>关闭特定的自动配置使用 <code>@SpringBootApplication</code> 注解的 <code>exclude</code> 参数即可，这里以关闭数据源的自动配置为例</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@SpringBootApplication</span><span class="token punctuation">(</span>exclude <span class="token operator">=</span> <span class="token punctuation">{</span>DataSourceAutoConfiguration<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 单元测试</title>
      <link href="/2019/11/23/037.Spring%20Boot-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/"/>
      <url>/2019/11/23/037.Spring%20Boot-%E5%8D%95%E5%85%83%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-单元测试"><a href="#Spring-Boot-单元测试" class="headerlink" title="Spring Boot 单元测试"></a>Spring Boot 单元测试</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>主要是通过 <code>@RunWith</code> 和 <code>@SpringBootTest</code> 注解来开启单元测试功能</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Before<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Test<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>runner<span class="token punctuation">.</span>RunWith<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>Autowired<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>SpringBootTest<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>test<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span>TestRestTemplate<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>web<span class="token punctuation">.</span>server<span class="token punctuation">.</span>LocalServerPort<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>http<span class="token punctuation">.</span>ResponseEntity<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>test<span class="token punctuation">.</span>context<span class="token punctuation">.</span>junit4<span class="token punctuation">.</span>SpringRunner<span class="token punctuation">;</span><span class="token keyword">import</span> java<span class="token punctuation">.</span>net<span class="token punctuation">.</span>URL<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> org<span class="token punctuation">.</span>hamcrest<span class="token punctuation">.</span>CoreMatchers<span class="token punctuation">.</span>equalTo<span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token keyword">static</span> org<span class="token punctuation">.</span>junit<span class="token punctuation">.</span>Assert<span class="token punctuation">.</span>assertThat<span class="token punctuation">;</span><span class="token annotation punctuation">@RunWith</span><span class="token punctuation">(</span>SpringRunner<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token annotation punctuation">@SpringBootTest</span><span class="token punctuation">(</span>classes <span class="token operator">=</span> HelloSpringBootApplication<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> webEnvironment <span class="token operator">=</span> SpringBootTest<span class="token punctuation">.</span>WebEnvironment<span class="token punctuation">.</span>RANDOM_PORT<span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloSpringBootApplicationTests</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@LocalServerPort</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> port<span class="token punctuation">;</span>    <span class="token keyword">private</span> URL base<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> TestRestTemplate template<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Before</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setUp</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> Exception <span class="token punctuation">{</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>base <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span><span class="token string">"http://localhost:"</span> <span class="token operator">+</span> port <span class="token operator">+</span> <span class="token string">"/"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token annotation punctuation">@Test</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">contextLoads</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        ResponseEntity<span class="token operator">&lt;</span>String<span class="token operator">></span> response <span class="token operator">=</span> template<span class="token punctuation">.</span><span class="token function">getForEntity</span><span class="token punctuation">(</span>base<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> String<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">assertThat</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">getBody</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">equalTo</span><span class="token punctuation">(</span><span class="token string">"Hello Spring Boot"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行它会先启动 Spring Boot 工程，再启动单元测试</p>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一个 Spring Boot 应用程序</title>
      <link href="/2019/11/23/036.Spring%20Boot-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/11/23/036.Spring%20Boot-%E7%AC%AC%E4%B8%80%E4%B8%AA%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="第一个-Spring-Boot-应用程序"><a href="#第一个-Spring-Boot-应用程序" class="headerlink" title="第一个 Spring Boot 应用程序"></a>第一个 Spring Boot 应用程序</h1><h2 id="创建项目"><a href="#创建项目" class="headerlink" title="创建项目"></a>创建项目</h2><p>这里我们使用 Intellij IDEA 来新建一个 Spring Boot 项目。</p><h3 id="Spring-初始化器"><a href="#Spring-初始化器" class="headerlink" title="Spring 初始化器"></a>Spring 初始化器</h3><p><img src="/SpringBoot/Lusifer1527230830.png" alt></p><h3 id="填写项目信息"><a href="#填写项目信息" class="headerlink" title="填写项目信息"></a>填写项目信息</h3><p><img src="/SpringBoot/Lusifer1527231009.png" alt></p><h3 id="选择版本和依赖"><a href="#选择版本和依赖" class="headerlink" title="选择版本和依赖"></a>选择版本和依赖</h3><p><img src="/SpringBoot/Lusifer1527231053.png" alt></p><h3 id="保存项目到指定目录"><a href="#保存项目到指定目录" class="headerlink" title="保存项目到指定目录"></a>保存项目到指定目录</h3><p><img src="/SpringBoot/Lusifer1527231065.png" alt></p><h3 id="工程目录结构"><a href="#工程目录结构" class="headerlink" title="工程目录结构"></a>工程目录结构</h3><p>创建完成后的工程目录结构如下：</p><pre><code>│  .gitignore│  pom.xml││└─src    ├─main    │  ├─java    │  │  └─com    │  │      └─funtl    │  │          └─hello    │  │              └─spring    │  │                  └─boot    │  │                          HelloSpringBootApplication.java    │  │    │  └─resources    │      │  application.properties    │      │    │      ├─static    │      └─templates    └─test        └─java            └─com                └─funtl                    └─hello                        └─spring                            └─boot                                    HelloSpringBootApplicationTests.java</code></pre><ul><li>.gitignore：Git 过滤配置文件</li><li>pom.xml：Maven 的依赖管理配置文件</li><li>HelloSpringBootApplication.java：程序入口</li><li>resources：资源文件目录<ul><li>static: 静态资源文件目录</li><li>templates：模板资源文件目录</li><li>application.properties：Spring Boot 的配置文件，实际开发中会替换成 YAML 语言配置（application.yml）</li></ul></li></ul><h2 id="POM"><a href="#POM" class="headerlink" title="POM"></a>POM</h2><pre class="line-numbers language-xml"><code class="language-xml"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>project</span> <span class="token attr-name">xmlns</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0<span class="token punctuation">"</span></span> <span class="token attr-name"><span class="token namespace">xmlns:</span>xsi</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://www.w3.org/2001/XMLSchema-instance<span class="token punctuation">"</span></span>         <span class="token attr-name"><span class="token namespace">xsi:</span>schemaLocation</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>modelVersion</span><span class="token punctuation">></span></span>4.0.0<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>modelVersion</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>parent</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-parent<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.1.6.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>relativePath</span><span class="token punctuation">/></span></span> <span class="token comment" spellcheck="true">&lt;!-- lookup parent from repository --></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>parent</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.funtl<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>hello-spring-boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>0.0.1-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>hello-spring-boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>description</span><span class="token punctuation">></span></span>Demo project for Spring Boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>description</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>build</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugins</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>plugin</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-maven-plugin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>configuration</span><span class="token punctuation">></span></span>                    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>mainClass</span><span class="token punctuation">></span></span>com.funtl.hello.spring.boot.HelloSpringBootApplication<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>mainClass</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>configuration</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugin</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>plugins</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>build</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>project</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>parent：继承了 Spring Boot 的 Parent，表示我们是一个 Spring Boot 工程</li><li><code>spring-boot-starter-web</code>：包含了 <code>spring-boot-starter</code> 还自动帮我们开启了 Web 支持</li></ul><h2 id="功能演示"><a href="#功能演示" class="headerlink" title="功能演示"></a>功能演示</h2><p>我们创建一个 Controller 来演示一下 Spring Boot 的神奇功能</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">package</span> com<span class="token punctuation">.</span>funtl<span class="token punctuation">.</span>hello<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>controller<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>GetMapping<span class="token punctuation">;</span><span class="token keyword">import</span> org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span>RestController<span class="token punctuation">;</span><span class="token annotation punctuation">@RestController</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">HelloController</span> <span class="token punctuation">{</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span>value <span class="token operator">=</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> String <span class="token function">sayHi</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        <span class="token keyword">return</span> <span class="token string">"Hello Spring Boot."</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动 <code>HelloSpringBootApplication</code> 的 <code>main()</code> 方法，浏览器访问 <a href="http://localhost:8080" target="_blank" rel="noopener">http://localhost:8080</a> 可以看到：</p><pre class="line-numbers language-html"><code class="language-html">Hello Spring Boot.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="神奇之处"><a href="#神奇之处" class="headerlink" title="神奇之处"></a>神奇之处</h2><ul><li>没有配置 web.xml</li><li>没有配置 application.xml，Spring Boot 帮你配置了</li><li>没有配置 application-mvc.xml，Spring Boot 帮你配置了</li><li>没有配置 Tomcat，Spring Boot 内嵌了 Tomcat 容器</li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Spring Boot 简介</title>
      <link href="/2019/11/23/035.Spring%20Boot-%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/23/035.Spring%20Boot-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Spring-Boot-简介"><a href="#Spring-Boot-简介" class="headerlink" title="Spring Boot 简介"></a>Spring Boot 简介</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Spring Boot 可以称之为 <strong>新一代 JavaEE 开发标准</strong>；随着动态语言的流行 (Ruby、Groovy、Scala、Node.js)，Java 的开发显得格外的笨重：繁多的配置、低下的开发效率、复杂的部署流程以及第三方技术集成难度大。</p><p>在上述环境下，Spring Boot 应运而生。它使用 “<strong>习惯优于配置</strong>” （项目中存在大量的配置，此外还内置了一个习惯性的配置，让你无需手动进行配置）的理念让你的项目快速的运行起来。使用 Spring Boot 很容易创建一个独立运行（运行 Jar，内嵌 Servlet 容器）准生产级别的基于 Spring 框架的项目，使用 Spring Boot 你可以不用或者只需很少的 Spring 配置。</p><h2 id="Spring-简史"><a href="#Spring-简史" class="headerlink" title="Spring 简史"></a>Spring 简史</h2><h3 id="Spring-1-x-时代"><a href="#Spring-1-x-时代" class="headerlink" title="Spring 1.x 时代"></a>Spring 1.x 时代</h3><p>在 Spring1.x 时代，都是通过 xml 文件配置 bean，随着项目的不断扩大，需要将 xml 配置分放到不同的配置文件中，需要频繁的在 java 类和 xml 配置文件中切换。</p><h3 id="Spring-2-x-时代"><a href="#Spring-2-x-时代" class="headerlink" title="Spring 2.x 时代"></a>Spring 2.x 时代</h3><p>随着 JDK 1.5 带来的注解支持，Spring2.x 可以使用注解对 Bean 进行申明和注入，大大的减少了 xml 配置文件，同时也大大简化了项目的开发。</p><p>那么，问题来了，究竟是应该使用 xml 还是注解呢？</p><p>最佳实践：</p><ul><li>应用的基本配置用 xml，比如：数据源、资源文件等</li><li>业务开发用注解，比如：Service 中注入 bean 等</li></ul><h3 id="Spring-3-x-时代"><a href="#Spring-3-x-时代" class="headerlink" title="Spring 3.x 时代"></a>Spring 3.x 时代</h3><p>从 Spring3.x 开始提供了 Java 配置方式，使用 Java 配置方式可以更好的理解你配置的 Bean，现在我们就处于这个时代，并且 Spring4.x 和 Spring boot 都推荐使用 java 配置的方式。</p><h3 id="Spring-5-x-时代"><a href="#Spring-5-x-时代" class="headerlink" title="Spring 5.x 时代"></a>Spring 5.x 时代</h3><p>Spring5.x 是 Java 界首个支持响应式的 Web 框架，是 Spring 的一个重要版本，距离 Spring4.x 差不多四年。在此期间，大多数增强都是在 Spring Boot 项目中完成的，其最大的亮点就是提供了完整的端到端响应式编程的支持（新增 Spring WebFlux 模块）。</p><p>Spring WebFlux 同时支持使用旧的 Spring MVC 注解声明 <code>Reactive Controller</code>。和传统的 <code>MVC Controller</code> 不同，<code>Reactive Controller</code> 操作的是 <strong>非阻塞</strong> 的 <code>ServerHttpRequest</code> 和 <code>ServerHttpResponse</code>，而不再是 Spring MVC 里的 HttpServletRequest 和 HttpServletResponse。</p><p>至此也代表着 Java 正式迎来了响应式异步编程的时代。</p><h2 id="Spring-Boot-优缺点"><a href="#Spring-Boot-优缺点" class="headerlink" title="Spring Boot 优缺点"></a>Spring Boot 优缺点</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li>快速构建项目</li><li>对主流开发框架的无配置集成</li><li>项目可独立运行，无需外部依赖 Servlet 容器</li><li>提供运行时的应用监控</li><li>极大地提高了开发、部署效率</li><li>与云计算的天然集成</li></ul><h3 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h3><ul><li>版本迭代速度很快，一些模块改动很大</li><li>由于不用自己做配置，报错时很难定位</li></ul>]]></content>
      
      
      <categories>
          
          <category> SpringBoot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringBoot </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务设计模式</title>
      <link href="/2019/11/22/034.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
      <url>/2019/11/22/034.%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="微服务设计模式"><a href="#微服务设计模式" class="headerlink" title="微服务设计模式"></a>微服务设计模式</h1><h2 id="微服务架构需要考虑的问题"><a href="#微服务架构需要考虑的问题" class="headerlink" title="微服务架构需要考虑的问题"></a>微服务架构需要考虑的问题</h2><ul><li>API Gateway</li><li>服务间调用</li><li>服务发现</li><li>服务容错</li><li>服务部署</li><li>数据调用</li></ul><p><img src="/weifuwu/983980-20170501200932257-1866725509.png" alt></p><h2 id="聚合器微服务设计模式"><a href="#聚合器微服务设计模式" class="headerlink" title="聚合器微服务设计模式"></a>聚合器微服务设计模式</h2><p>这是一种最常见也最简单的设计模式</p><p><img src="/weifuwu/983980-20170501201000148-1677353522.png" alt></p><p>聚合器调用多个服务实现应用程序所需的功能。它可以是一个简单的 WEB 页面，将检索到的数据进行处理展示。它也可以是一个更高层次的组合微服务，对检索到的数据增加业务逻辑后进一步发布成一个新的微服务，这符合 <strong>DRY</strong> 原则。另外，每个服务都有自己的缓存和数据库。如果聚合器是一个组合服务，那么它也有自己的缓存和数据库。聚合器可以沿 <code>X轴</code> 和 <code>Z轴</code> 独立扩展。</p><h2 id="代理微服务设计模式"><a href="#代理微服务设计模式" class="headerlink" title="代理微服务设计模式"></a>代理微服务设计模式</h2><p>这是聚合模式的一个变种，如下图所示</p><p><img src="/weifuwu/983980-20170501201046898-281749162.png" alt></p><p>在这种情况下，客户端并不聚合数据，但会根据业务需求的差别调用不同的微服务。代理可以仅仅委派请求，也可以进行数据转换工作。</p><h2 id="链式微服务设计模式"><a href="#链式微服务设计模式" class="headerlink" title="链式微服务设计模式"></a>链式微服务设计模式</h2><p>这种模式在接收到请求后会产生一个经过合并的响应，如下图所示</p><p><img src="/weifuwu/983980-20170501201150117-1722000003.png" alt></p><p>在这种情况下，<code>服务A</code> 接收到请求后会与 <code>服务B</code> 进行通信，类似地，<code>服务B</code> 会同 <code>服务C</code> 进行通信。所有服务都使用同步消息传递。在整个链式调用完成之前，客户端会一直阻塞。因此，服务调用链不宜过长，以免客户端长时间等待。</p><h2 id="分支微服务设计模式"><a href="#分支微服务设计模式" class="headerlink" title="分支微服务设计模式"></a>分支微服务设计模式</h2><p>这种模式是聚合器模式的扩展，允许同时调用两个微服务链，如下图所示</p><p><img src="/weifuwu/983980-20170501201226507-2146929767.png" alt></p><h2 id="数据共享微服务设计模式"><a href="#数据共享微服务设计模式" class="headerlink" title="数据共享微服务设计模式"></a>数据共享微服务设计模式</h2><p>自治是微服务的设计原则之一，就是说微服务是全栈式服务。但在重构现有的“单体应用（Monolithic Application）”时，SQL 数据库反规范化可能会导致数据重复和不一致。因此，在单体应用到微服务架构的过渡阶段，可以使用这种设计模式，如下图所示</p><p><img src="/weifuwu/983980-20170501201353945-1013665174.png" alt></p><p>在这种情况下，部分微服务可能会共享缓存和数据库存储。不过，这只有在两个服务之间存在强耦合关系时才可以。对于基于微服务的新建应用程序而言，这是一种反模式。</p><h2 id="异步消息传递微服务设计模式"><a href="#异步消息传递微服务设计模式" class="headerlink" title="异步消息传递微服务设计模式"></a>异步消息传递微服务设计模式</h2><p>虽然 REST 设计模式非常流行，但它是同步的，会造成阻塞。因此部分基于微服务的架构可能会选择使用消息队列代替 REST 请求/响应，如下图所示</p><p><img src="/weifuwu/983980-20170501201415054-327655979.png" alt></p><h2 id="新架构新起点"><a href="#新架构新起点" class="headerlink" title="新架构新起点"></a>新架构新起点</h2><p>对于微服务架构，最重要的是思维上的转变，技术不是问题，思想才是王道（<strong>有道无术，术尚可求，有术无道，止于术</strong>），对于做微服务开发的几点建议：</p><ul><li><strong>应用程序的核心是业务逻辑，按照业务或客户需求组织资源（这是最难的）</strong></li><li><strong>做有生命的产品，而不是项目</strong></li><li><strong>全栈化</strong></li><li><strong>后台服务贯彻 Single Responsibility Principle（单一职责原则）</strong></li><li><strong>VM -&gt; Docker -&gt; Kubernetes -&gt; Istio</strong></li><li><strong>DevOps</strong></li></ul>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务的实践</title>
      <link href="/2019/11/22/033.%E5%86%8D%E8%B0%88%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%9E%E8%B7%B5/"/>
      <url>/2019/11/22/033.%E5%86%8D%E8%B0%88%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%AE%9E%E8%B7%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="微服务的实践"><a href="#微服务的实践" class="headerlink" title="微服务的实践"></a>微服务的实践</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>要实际的应用微服务，需要解决以下问题：</p><ul><li>客户端如何访问这些服务</li><li>每个服务之间如何通信</li><li>如此多的服务，如何实现？</li><li>服务挂了，如何解决？（备份方案，应急处理机制）</li></ul><h2 id="客户端如何访问这些服务"><a href="#客户端如何访问这些服务" class="headerlink" title="客户端如何访问这些服务"></a>客户端如何访问这些服务</h2><p>原来的 Monolithic 方式开发，所有的服务都是本地的，UI 可以直接调用，现在按功能拆分成独立的服务，跑在独立的一般都在独立的虚拟机上的 Java 进程了。客户端 UI 如何访问他？</p><p>后台有 N 个服务，前台就需要记住管理 N 个服务，一个服务 <strong>下线</strong>、<strong>更新</strong>、<strong>升级</strong>，前台就要重新部署，这明显不服务我们拆分的理念，特别当前台是移动应用的时候，通常业务变化的节奏更快。</p><p>另外，N 个小服务的调用也是一个不小的网络开销。还有一般微服务在系统内部，通常是无状态的，用户登录信息和权限管理最好有一个统一的地方维护管理（OAuth）。</p><p>所以，一般在后台 N 个服务和 UI 之间一般会一个代理或者叫 <code>API Gateway</code>，他的作用包括：</p><ul><li>提供统一服务入口，让微服务对前台透明</li><li>聚合后台的服务，节省流量，提升性能</li><li>提供安全，过滤，流控等API管理功能</li></ul><p>其实这个 <code>API Gateway</code> 可以有很多广义的实现办法，可以是一个软硬一体的盒子，也可以是一个简单的 MVC 框架，甚至是一个 <code>Node.js</code> 的服务端。他们最重要的作用是为前台（通常是移动应用）提供后台服务的聚合，提供一个统一的服务出口，解除他们之间的耦合，不过 <code>API Gateway</code> 也有可能成为 <strong>单点故障</strong> 点或者性能的瓶颈。</p><p><img src="/weifuwu/Lusifer2018052805390003.png" alt></p><h2 id="每个服务之间如何通信"><a href="#每个服务之间如何通信" class="headerlink" title="每个服务之间如何通信"></a>每个服务之间如何通信</h2><p>所有的微服务都是独立的 Java 进程跑在独立的虚拟机上，所以服务间的通信就是 IPC（Inter Process Communication），已经有很多成熟的方案。现在基本最通用的有两种方式：</p><h3 id="同步调用"><a href="#同步调用" class="headerlink" title="同步调用"></a>同步调用</h3><ul><li>REST（JAX-RS，Spring Boot）</li><li>RPC（Thrift, Dubbo）</li></ul><p>同步调用比较简单，一致性强，但是容易出调用问题，性能体验上也会差些，特别是调用层次多的时候。一般 REST 基于 HTTP，更容易实现，更容易被接受，服务端实现技术也更灵活些，各个语言都能支持，同时能跨客户端，对客户端没有特殊的要求，只要封装了 HTTP 的 SDK 就能调用，所以相对使用的广一些。RPC 也有自己的优点，传输协议更高效，安全更可控，特别在一个公司内部，如果有统一个的开发规范和统一的服务框架时，他的开发效率优势更明显些。就看各自的技术积累实际条件，自己的选择了。</p><h3 id="异步消息调用"><a href="#异步消息调用" class="headerlink" title="异步消息调用"></a>异步消息调用</h3><ul><li>Kafka</li><li>Notify</li><li>MessageQueue</li></ul><p><img src="/weifuwu/Lusifer2018052805390004.png" alt></p><p>异步消息的方式在分布式系统中有特别广泛的应用，他既能减低调用服务之间的耦合，又能成为调用之间的缓冲，确保消息积压不会冲垮被调用方，同时能保证调用方的服务体验，继续干自己该干的活，不至于被后台性能拖慢。不过需要付出的代价是一致性的减弱，需要接受数据 <strong>最终一致性</strong>；还有就是后台服务一般要实现 <strong>幂等性</strong>，因为消息送出于性能的考虑一般会有重复（保证消息的被收到且仅收到一次对性能是很大的考验）；最后就是必须引入一个独立的 <code>Broker</code></p><h2 id="如此多的服务，如何实现？"><a href="#如此多的服务，如何实现？" class="headerlink" title="如此多的服务，如何实现？"></a>如此多的服务，如何实现？</h2><p>在微服务架构中，一般每一个服务都是有多个拷贝，来做负载均衡。一个服务随时可能下线，也可能应对临时访问压力增加新的服务节点。服务之间如何相互感知？服务如何管理？</p><p>这就是服务发现的问题了。一般有两类做法，也各有优缺点。基本都是通过 Zookeeper 等类似技术做服务注册信息的分布式管理。当服务上线时，服务提供者将自己的服务信息注册到 ZK（或类似框架），并通过心跳维持长链接，实时更新链接信息。服务调用者通过 ZK 寻址，根据可定制算法，找到一个服务，还可以将服务信息缓存在本地以提高性能。当服务下线时，ZK 会发通知给服务客户端。</p><h3 id="基于客户端的服务注册与发现"><a href="#基于客户端的服务注册与发现" class="headerlink" title="基于客户端的服务注册与发现"></a>基于客户端的服务注册与发现</h3><p>优点是架构简单，扩展灵活，只对服务注册器依赖。缺点是客户端要维护所有调用服务的地址，有技术难度，一般大公司都有成熟的内部框架支持，比如 Dubbo。</p><p><img src="/weifuwu/Lusifer2018052805390005.png" alt></p><h3 id="基于服务端的服务注册与发现"><a href="#基于服务端的服务注册与发现" class="headerlink" title="基于服务端的服务注册与发现"></a>基于服务端的服务注册与发现</h3><p>优点是简单，所有服务对于前台调用方透明，一般在小公司在云服务上部署的应用采用的比较多。</p><p><img src="/weifuwu/Lusifer2018052805390006.png" alt></p><h2 id="服务挂了，如何解决？"><a href="#服务挂了，如何解决？" class="headerlink" title="服务挂了，如何解决？"></a>服务挂了，如何解决？</h2><p>前面提到，Monolithic 方式开发一个很大的风险是，把所有鸡蛋放在一个篮子里，一荣俱荣，一损俱损。而分布式最大的特性就是 <strong>网络是不可靠的</strong>。通过微服务拆分能降低这个风险，不过如果没有特别的保障，结局肯定是噩梦。所以当我们的系统是由一系列的服务调用链组成的时候，我们必须确保任一环节出问题都不至于影响整体链路。相应的手段有很多：</p><ul><li>重试机制</li><li>限流</li><li>熔断机制</li><li>负载均衡</li><li>降级（本地缓存）</li></ul>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务的概念</title>
      <link href="/2019/11/22/032.%E5%86%8D%E8%B0%88%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%A6%82%E5%BF%B5/"/>
      <url>/2019/11/22/032.%E5%86%8D%E8%B0%88%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%A6%82%E5%BF%B5/</url>
      
        <content type="html"><![CDATA[<h1 id="微服务的概念"><a href="#微服务的概念" class="headerlink" title="微服务的概念"></a>微服务的概念</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微服务架构是一种架构思想，旨在通过将功能分解到各个离散的服务中以实现对解决方案的解耦。它的主要作用是将功能分解到离散的各个服务当中，从而降低系统的耦合性，并提供更加灵活的服务支持。</p><h2 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h2><p>把一个大型的单个应用程序和服务拆分为数个甚至数十个的支持微服务，它可扩展单个组件而不是整个的应用程序堆栈，从而满足服务等级协议。</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>围绕业务领域组件来创建应用，这些应用可独立地进行开发、管理和迭代。在分散的组件中使用云架构和平台式部署、管理和服务功能，使产品交付变得更加简单。</p><h2 id="本质"><a href="#本质" class="headerlink" title="本质"></a>本质</h2><p>用一些功能比较明确、业务比较精练的服务去解决更大、更实际的问题。</p><blockquote><p><strong>备注：</strong> 微服务这个概念是 2012 年出现的，作为加快 Web 和移动应用程序开发进程的一种方法，2014 年开始受到各方的关注，同年为微服务的元年；</p></blockquote><h2 id="与传统架构的区别"><a href="#与传统架构的区别" class="headerlink" title="与传统架构的区别"></a>与传统架构的区别</h2><h3 id="系统架构需要遵循的三个标准"><a href="#系统架构需要遵循的三个标准" class="headerlink" title="系统架构需要遵循的三个标准"></a>系统架构需要遵循的三个标准</h3><ul><li>提高敏捷性：及时响应业务需求，促进企业发展</li><li>提升用户体验：提升用户体验，减少用户流失</li><li>降低成本：降低增加产品、客户或业务方案的成本</li></ul><h3 id="传统的开发模式"><a href="#传统的开发模式" class="headerlink" title="传统的开发模式"></a>传统的开发模式</h3><p>先来看看传统的 WEB 开发方式，通过对比比较容易理解什么是 <strong>微服务架构</strong>。和 <strong>微服务</strong> 相对应的，这种方式一般被称为 <strong>单体式开发（Monolithic）</strong>。</p><p>既所有的功能打包在一个 WAR 包里，基本没有外部依赖（除了容器），部署在一个 JavaEE 容器（Tomcat，JBoss，WebLogic）里，包含了 DO/DAO，Service，UI 等所有逻辑。</p><p><img src="/weifuwu/Lusifer2018052805390001.png" alt></p><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>开发简单，集中式管理</li><li>基本不会重复开发</li><li>功能都在本地，没有分布式的管理和调用消耗</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>效率低：开发都在同一个项目改代码，相互等待，冲突不断</li><li>维护难：代码功功能耦合在一起，新人不知道何从下手</li><li>不灵活：构建时间长，任何小修改都要重构整个项目，耗时</li><li>稳定性差：一个微小的问题，都可能导致整个应用挂掉</li><li>扩展性不够：无法满足高并发下的业务需求</li></ul><h3 id="微服务架构"><a href="#微服务架构" class="headerlink" title="微服务架构"></a>微服务架构</h3><h4 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h4><p>有效的拆分应用，实现敏捷开发和部署</p><p><img src="/weifuwu/Lusifer2018052805390002.png" alt></p><h2 id="微服务的特征"><a href="#微服务的特征" class="headerlink" title="微服务的特征"></a>微服务的特征</h2><h3 id="官方的定义"><a href="#官方的定义" class="headerlink" title="官方的定义"></a>官方的定义</h3><ul><li>一系列的独立的服务共同组成系统</li><li>单独部署，跑在自己的进程中</li><li>每个服务为独立的业务开发</li><li>分布式管理</li><li>非常强调隔离性</li></ul><h3 id="大概的标准"><a href="#大概的标准" class="headerlink" title="大概的标准"></a>大概的标准</h3><ul><li>分布式服务组成的系统</li><li>按照业务，而不是技术来划分组织</li><li>做有生命的产品而不是项目</li><li>强服务个体和弱通信（ Smart endpoints and dumb pipes ）</li><li>自动化运维（ DevOps ）</li><li>高度容错性</li><li>快速演化和迭代</li></ul>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 常用命令</title>
      <link href="/2019/11/22/Docker%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2019/11/22/Docker%20%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-常用命令"><a href="#Docker-常用命令" class="headerlink" title="Docker 常用命令"></a>Docker 常用命令</h1><h2 id="查看-Docker-版本"><a href="#查看-Docker-版本" class="headerlink" title="查看 Docker 版本"></a>查看 Docker 版本</h2><pre><code>docker version</code></pre><h2 id="从-Docker-文件构建-Docker-映像"><a href="#从-Docker-文件构建-Docker-映像" class="headerlink" title="从 Docker 文件构建 Docker 映像"></a>从 Docker 文件构建 Docker 映像</h2><pre><code>docker build -t image-name docker-file-location</code></pre><h2 id="运行-Docker-映像"><a href="#运行-Docker-映像" class="headerlink" title="运行 Docker 映像"></a>运行 Docker 映像</h2><pre><code>docker run -d image-name</code></pre><h2 id="查看可用的-Docker-映像"><a href="#查看可用的-Docker-映像" class="headerlink" title="查看可用的 Docker 映像"></a>查看可用的 Docker 映像</h2><pre><code>docker images</code></pre><h2 id="查看最近的运行容器"><a href="#查看最近的运行容器" class="headerlink" title="查看最近的运行容器"></a>查看最近的运行容器</h2><pre><code>docker ps -l</code></pre><h2 id="查看所有正在运行的容器"><a href="#查看所有正在运行的容器" class="headerlink" title="查看所有正在运行的容器"></a>查看所有正在运行的容器</h2><pre><code>docker ps -a</code></pre><h2 id="停止运行容器"><a href="#停止运行容器" class="headerlink" title="停止运行容器"></a>停止运行容器</h2><pre><code>docker stop container_id</code></pre><h2 id="删除一个镜像"><a href="#删除一个镜像" class="headerlink" title="删除一个镜像"></a>删除一个镜像</h2><pre><code>docker rmi image-name</code></pre><h2 id="删除所有镜像"><a href="#删除所有镜像" class="headerlink" title="删除所有镜像"></a>删除所有镜像</h2><pre><code>docker rmi $(docker images -q)</code></pre><h2 id="强制删除所有镜像"><a href="#强制删除所有镜像" class="headerlink" title="强制删除所有镜像"></a>强制删除所有镜像</h2><pre><code>docker rmi -r $(docker images -q)</code></pre><h2 id="删除所有虚悬镜像"><a href="#删除所有虚悬镜像" class="headerlink" title="删除所有虚悬镜像"></a>删除所有虚悬镜像</h2><pre><code>docker rmi $(docker images -q -f dangling=true)</code></pre><h2 id="删除所有容器"><a href="#删除所有容器" class="headerlink" title="删除所有容器"></a>删除所有容器</h2><pre><code>docker rm $(docker ps -a -q)</code></pre><h2 id="进入-Docker-容器"><a href="#进入-Docker-容器" class="headerlink" title="进入 Docker 容器"></a>进入 Docker 容器</h2><pre><code>docker exec -it container-id /bin/bash</code></pre><h2 id="查看所有数据卷"><a href="#查看所有数据卷" class="headerlink" title="查看所有数据卷"></a>查看所有数据卷</h2><pre><code>docker volume ls</code></pre><h2 id="删除指定数据卷"><a href="#删除指定数据卷" class="headerlink" title="删除指定数据卷"></a>删除指定数据卷</h2><pre><code>docker volume rm [volume_name]</code></pre><h2 id="删除所有未关联的数据卷"><a href="#删除所有未关联的数据卷" class="headerlink" title="删除所有未关联的数据卷"></a>删除所有未关联的数据卷</h2><pre><code>docker volume rm $(docker volume ls -qf dangling=true)</code></pre><h2 id="从主机复制文件到容器"><a href="#从主机复制文件到容器" class="headerlink" title="从主机复制文件到容器"></a>从主机复制文件到容器</h2><pre><code>docker cp host_path containerID:container_path</code></pre><h2 id="从容器复制文件到主机"><a href="#从容器复制文件到主机" class="headerlink" title="从容器复制文件到主机"></a>从容器复制文件到主机</h2><pre><code>docker cp containerID:container_path host_path</code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 命令说明</title>
      <link href="/2019/11/22/Docker%20Compose%20%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/"/>
      <url>/2019/11/22/Docker%20Compose%20%E5%91%BD%E4%BB%A4%E8%AF%B4%E6%98%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-命令说明"><a href="#Docker-Compose-命令说明" class="headerlink" title="Docker Compose 命令说明"></a>Docker Compose 命令说明</h1><h2 id="命令对象与格式"><a href="#命令对象与格式" class="headerlink" title="命令对象与格式"></a>命令对象与格式</h2><p>对于 Compose 来说，大部分命令的对象既可以是项目本身，也可以指定为项目中的服务或者容器。如果没有特别的说明，命令对象将是项目，这意味着项目中所有的服务都会受到命令影响。</p><p>执行 <code>docker-compose [COMMAND] --help</code> 或者 <code>docker-compose help [COMMAND]</code> 可以查看具体某个命令的使用格式。<code>docker-compose</code> 命令的基本的使用格式是</p><pre class="line-numbers language-bash"><code class="language-bash">docker-compose <span class="token punctuation">[</span>-f<span class="token operator">=</span><span class="token operator">&lt;</span>arg<span class="token operator">></span><span class="token punctuation">..</span>.<span class="token punctuation">]</span> <span class="token punctuation">[</span>options<span class="token punctuation">]</span> <span class="token punctuation">[</span>COMMAND<span class="token punctuation">]</span> <span class="token punctuation">[</span>ARGS<span class="token punctuation">..</span>.<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="命令选项"><a href="#命令选项" class="headerlink" title="命令选项"></a>命令选项</h2><ul><li><code>-f, --file FILE</code> 指定使用的 Compose 模板文件，默认为 <code>docker-compose.yml</code>，可以多次指定。</li><li><code>-p, --project-name NAME</code> 指定项目名称，默认将使用所在目录名称作为项目名。</li><li><code>--x-networking</code> 使用 Docker 的可拔插网络后端特性</li><li><code>--x-network-driver DRIVER</code> 指定网络后端的驱动，默认为 <code>bridge</code></li><li><code>--verbose</code> 输出更多调试信息。</li><li><code>-v, --version</code> 打印版本并退出。</li></ul><h2 id="build"><a href="#build" class="headerlink" title="build"></a>build</h2><p>格式为 <code>docker-compose build [options] [SERVICE...]</code>。</p><p>构建（重新构建）项目中的服务容器。</p><p>服务容器一旦构建后，将会带上一个标记名，例如对于 web 项目中的一个 db 容器，可能是 web_db。</p><p>可以随时在项目目录下运行 <code>docker-compose build</code> 来重新构建服务。</p><p>选项包括：</p><ul><li><code>--force-rm</code> 删除构建过程中的临时容器。</li><li><code>--no-cache</code> 构建镜像过程中不使用 cache（这将加长构建过程）。</li><li><code>--pull</code> 始终尝试通过 pull 来获取更新版本的镜像。</li></ul><h2 id="config"><a href="#config" class="headerlink" title="config"></a>config</h2><p>验证 Compose 文件格式是否正确，若正确则显示配置，若格式错误显示错误原因。</p><h2 id="down"><a href="#down" class="headerlink" title="down"></a>down</h2><p>此命令将会停止 <code>up</code> 命令所启动的容器，并移除网络</p><h2 id="exec"><a href="#exec" class="headerlink" title="exec"></a>exec</h2><p>进入指定的容器。</p><h2 id="help"><a href="#help" class="headerlink" title="help"></a>help</h2><p>获得一个命令的帮助。</p><h2 id="images"><a href="#images" class="headerlink" title="images"></a>images</h2><p>列出 Compose 文件中包含的镜像。</p><h2 id="kill"><a href="#kill" class="headerlink" title="kill"></a>kill</h2><p>格式为 <code>docker-compose kill [options] [SERVICE...]</code>。</p><p>通过发送 <code>SIGKILL</code> 信号来强制停止服务容器。</p><p>支持通过 <code>-s</code> 参数来指定发送的信号，例如通过如下指令发送 <code>SIGINT</code> 信号。</p><pre class="line-numbers language-bash"><code class="language-bash">docker-compose <span class="token function">kill</span> -s SIGINT<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="logs"><a href="#logs" class="headerlink" title="logs"></a>logs</h2><p>格式为 <code>docker-compose logs [options] [SERVICE...]</code>。</p><p>查看服务容器的输出。默认情况下，docker-compose 将对不同的服务输出使用不同的颜色来区分。可以通过 <code>--no-color</code> 来关闭颜色。</p><p>该命令在调试问题的时候十分有用。</p><h2 id="pause"><a href="#pause" class="headerlink" title="pause"></a>pause</h2><p>格式为 <code>docker-compose pause [SERVICE...]</code>。</p><p>暂停一个服务容器。</p><h2 id="port"><a href="#port" class="headerlink" title="port"></a>port</h2><p>格式为 <code>docker-compose port [options] SERVICE PRIVATE_PORT</code>。</p><p>打印某个容器端口所映射的公共端口。</p><p>选项：</p><ul><li><code>--protocol=proto</code> 指定端口协议，tcp（默认值）或者 udp。</li><li><code>--index=index</code> 如果同一服务存在多个容器，指定命令对象容器的序号（默认为 1）。</li></ul><h2 id="ps"><a href="#ps" class="headerlink" title="ps"></a>ps</h2><p>格式为 <code>docker-compose ps [options] [SERVICE...]</code>。</p><p>列出项目中目前的所有容器。</p><p>选项：</p><ul><li><code>-q</code> 只打印容器的 ID 信息。</li></ul><h2 id="pull"><a href="#pull" class="headerlink" title="pull"></a>pull</h2><p>格式为 <code>docker-compose pull [options] [SERVICE...]</code>。</p><p>拉取服务依赖的镜像。</p><p>选项：</p><ul><li><code>--ignore-pull-failures</code> 忽略拉取镜像过程中的错误。</li></ul><h2 id="push"><a href="#push" class="headerlink" title="push"></a>push</h2><p>推送服务依赖的镜像到 Docker 镜像仓库。</p><h2 id="restart"><a href="#restart" class="headerlink" title="restart"></a>restart</h2><p>格式为 <code>docker-compose restart [options] [SERVICE...]</code>。</p><p>重启项目中的服务。</p><p>选项：</p><ul><li><code>-t, --timeout TIMEOUT</code> 指定重启前停止容器的超时（默认为 10 秒）。</li></ul><h2 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h2><p>格式为 <code>docker-compose rm [options] [SERVICE...]</code>。</p><p>删除所有（停止状态的）服务容器。推荐先执行 <code>docker-compose stop</code> 命令来停止容器。</p><p>选项：</p><ul><li><code>-f, --force</code> 强制直接删除，包括非停止状态的容器。一般尽量不要使用该选项。</li><li><code>-v</code> 删除容器所挂载的数据卷。</li></ul><h2 id="run"><a href="#run" class="headerlink" title="run"></a>run</h2><p>格式为 <code>docker-compose run [options] [-p PORT...] [-e KEY=VAL...] SERVICE [COMMAND] [ARGS...]</code>。</p><p>在指定服务上执行一个命令。</p><p>例如：</p><pre class="line-numbers language-bash"><code class="language-bash">docker-compose run ubuntu <span class="token function">ping</span> docker.com<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将会启动一个 ubuntu 服务容器，并执行 <code>ping docker.com</code> 命令。</p><p>默认情况下，如果存在关联，则所有关联的服务将会自动被启动，除非这些服务已经在运行中。</p><p>该命令类似启动容器后运行指定的命令，相关卷、链接等等都将会按照配置自动创建。</p><p>两个不同点：</p><ul><li>给定命令将会覆盖原有的自动运行命令；</li><li>不会自动创建端口，以避免冲突。</li></ul><p>如果不希望自动启动关联的容器，可以使用 <code>--no-deps</code> 选项，例如</p><pre class="line-numbers language-bash"><code class="language-bash">docker-compose run --no-deps web python manage.py shell<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将不会启动 web 容器所关联的其它容器。</p><p>选项：</p><ul><li><code>-d</code> 后台运行容器。</li><li><code>--name NAME</code> 为容器指定一个名字。</li><li><code>--entrypoint CMD</code> 覆盖默认的容器启动指令。</li><li><code>-e KEY=VAL</code> 设置环境变量值，可多次使用选项来设置多个环境变量。</li><li><code>-u, --user=&quot;&quot;</code> 指定运行容器的用户名或者 uid。</li><li><code>--no-deps</code> 不自动启动关联的服务容器。</li><li><code>--rm</code> 运行命令后自动删除容器，<code>d</code> 模式下将忽略。</li><li><code>-p, --publish=[]</code> 映射容器端口到本地主机。</li><li><code>--service-ports</code> 配置服务端口并映射到本地主机。</li><li><code>-T</code> 不分配伪 tty，意味着依赖 tty 的指令将无法运行。</li></ul><h2 id="scale"><a href="#scale" class="headerlink" title="scale"></a>scale</h2><p>格式为 <code>docker-compose scale [options] [SERVICE=NUM...]</code>。</p><p>设置指定服务运行的容器个数。</p><p>通过 <code>service=num</code> 的参数来设置数量。例如：</p><pre class="line-numbers language-bash"><code class="language-bash">docker-compose scale web<span class="token operator">=</span>3 db<span class="token operator">=</span>2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>将启动 3 个容器运行 web 服务，2 个容器运行 db 服务。</p><p>一般的，当指定数目多于该服务当前实际运行容器，将新创建并启动容器；反之，将停止容器。</p><p>选项：</p><ul><li><code>-t, --timeout TIMEOUT</code> 停止容器时候的超时（默认为 10 秒）。</li></ul><h2 id="start"><a href="#start" class="headerlink" title="start"></a>start</h2><p>格式为 <code>docker-compose start [SERVICE...]</code>。</p><p>启动已经存在的服务容器。</p><h2 id="stop"><a href="#stop" class="headerlink" title="stop"></a>stop</h2><p>格式为 <code>docker-compose stop [options] [SERVICE...]</code>。</p><p>停止已经处于运行状态的容器，但不删除它。通过 <code>docker-compose start</code> 可以再次启动这些容器。</p><p>选项：</p><ul><li><code>-t, --timeout TIMEOUT</code> 停止容器时候的超时（默认为 10 秒）。</li></ul><h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><p>查看各个服务容器内运行的进程。</p><h2 id="unpause"><a href="#unpause" class="headerlink" title="unpause"></a>unpause</h2><p>格式为 <code>docker-compose unpause [SERVICE...]</code>。</p><p>恢复处于暂停状态中的服务。</p><h2 id="up"><a href="#up" class="headerlink" title="up"></a>up</h2><p>格式为 <code>docker-compose up [options] [SERVICE...]</code>。</p><p>该命令十分强大，它将尝试自动完成包括构建镜像，（重新）创建服务，启动服务，并关联服务相关容器的一系列操作。</p><p>链接的服务都将会被自动启动，除非已经处于运行状态。</p><p>可以说，大部分时候都可以直接通过该命令来启动一个项目。</p><p>默认情况，<code>docker-compose up</code> 启动的容器都在前台，控制台将会同时打印所有容器的输出信息，可以很方便进行调试。</p><p>当通过 <code>Ctrl-C</code> 停止命令时，所有容器将会停止。</p><p>如果使用 <code>docker-compose up -d</code>，将会在后台启动并运行所有的容器。一般推荐生产环境下使用该选项。</p><p>默认情况，如果服务容器已经存在，<code>docker-compose up</code> 将会尝试停止容器，然后重新创建（保持使用 <code>volumes-from</code> 挂载的卷），以保证新启动的服务匹配 <code>docker-compose.yml</code> 文件的最新内容。如果用户不希望容器被停止并重新创建，可以使用 <code>docker-compose up --no-recreate</code>。这样将只会启动处于停止状态的容器，而忽略已经运行的服务。如果用户只想重新部署某个服务，可以使用 <code>docker-compose up --no-deps -d &lt;SERVICE_NAME&gt;</code> 来重新创建服务并后台停止旧服务，启动新服务，并不会影响到其所依赖的服务。</p><p>选项：</p><ul><li><code>-d</code> 在后台运行服务容器。</li><li><code>--no-color</code> 不使用颜色来区分不同的服务的控制台输出。</li><li><code>--no-deps</code> 不启动服务所链接的容器。</li><li><code>--force-recreate</code> 强制重新创建容器，不能与 <code>--no-recreate</code> 同时使用。</li><li><code>--no-recreate</code> 如果容器已经存在了，则不重新创建，不能与 <code>--force-recreate</code> 同时使用。</li><li><code>--no-build</code> 不自动构建缺失的服务镜像。</li><li><code>-t, --timeout TIMEOUT</code> 停止容器时候的超时（默认为 10 秒）。</li></ul><h2 id="version"><a href="#version" class="headerlink" title="version"></a>version</h2><p>格式为 <code>docker-compose version</code>。</p><p>打印版本信息。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 模板文件</title>
      <link href="/2019/11/22/Docker%20Compose%20%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6/"/>
      <url>/2019/11/22/Docker%20Compose%20%E6%A8%A1%E6%9D%BF%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-模板文件"><a href="#Docker-Compose-模板文件" class="headerlink" title="Docker Compose 模板文件"></a>Docker Compose 模板文件</h1><p>模板文件是使用 Compose 的核心，涉及到的指令关键字也比较多。但大家不用担心，这里面大部分指令跟 <code>docker run</code> 相关参数的含义都是类似的。</p><p>默认的模板文件名称为 <code>docker-compose.yml</code>，格式为 YAML 格式。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">webapp</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> examples/web    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"80:80"</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"/data"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意每个服务都必须通过 <code>image</code> 指令指定镜像或 <code>build</code> 指令（需要 Dockerfile）等来自动构建生成镜像。</p><p>如果使用 <code>build</code> 指令，在 <code>Dockerfile</code> 中设置的选项(例如：<code>CMD</code>, <code>EXPOSE</code>, <code>VOLUME</code>, <code>ENV</code> 等) 将会自动被获取，无需在 <code>docker-compose.yml</code> 中再次设置。</p><p>下面分别介绍各个指令的用法。</p><h2 id="build"><a href="#build" class="headerlink" title="build"></a>build</h2><p>指定 <code>Dockerfile</code> 所在文件夹的路径（可以是绝对路径，或者相对 docker-compose.yml 文件的路径）。 <code>Compose</code> 将会利用它自动构建这个镜像，然后使用这个镜像。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">webapp</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> ./dir<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你也可以使用 <code>context</code> 指令指定 <code>Dockerfile</code> 所在文件夹的路径。使用 <code>dockerfile</code> 指令指定 <code>Dockerfile</code> 文件名。使用 <code>arg</code> 指令指定构建镜像时的变量。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">webapp</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span>      <span class="token key atrule">context</span><span class="token punctuation">:</span> ./dir      <span class="token key atrule">dockerfile</span><span class="token punctuation">:</span> Dockerfile<span class="token punctuation">-</span>alternate      <span class="token key atrule">args</span><span class="token punctuation">:</span>        <span class="token key atrule">buildno</span><span class="token punctuation">:</span> <span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 <code>cache_from</code> 指定构建镜像的缓存</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">build</span><span class="token punctuation">:</span>  <span class="token key atrule">context</span><span class="token punctuation">:</span> .  <span class="token key atrule">cache_from</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> alpine<span class="token punctuation">:</span>latest    <span class="token punctuation">-</span> corp/web_app<span class="token punctuation">:</span><span class="token number">3.14</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="cap-add-cap-drop"><a href="#cap-add-cap-drop" class="headerlink" title="cap_add, cap_drop"></a>cap_add, cap_drop</h2><p>指定容器的内核能力（capacity）分配。例如，让容器拥有所有能力可以指定为：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">cap_add</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> ALL<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>去掉 NET_ADMIN 能力可以指定为：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">cap_drop</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> NET_ADMIN<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="command"><a href="#command" class="headerlink" title="command"></a>command</h2><p>覆盖容器启动后默认执行的命令。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">command</span><span class="token punctuation">:</span> echo "hello world"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="configs"><a href="#configs" class="headerlink" title="configs"></a>configs</h2><p>仅用于 <code>Swarm mode</code></p><h2 id="cgroup-parent"><a href="#cgroup-parent" class="headerlink" title="cgroup_parent"></a>cgroup_parent</h2><p>指定父 <code>cgroup</code> 组，意味着将继承该组的资源限制。例如，创建了一个 cgroup 组名称为 <code>cgroups_1</code>。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">cgroup_parent</span><span class="token punctuation">:</span> cgroups_1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="container-name"><a href="#container-name" class="headerlink" title="container_name"></a>container_name</h2><p>指定容器名称。默认将会使用 <code>项目名称_服务名称_序号</code> 这样的格式。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">container_name</span><span class="token punctuation">:</span> docker<span class="token punctuation">-</span>web<span class="token punctuation">-</span>container<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p><strong>注意:</strong>  指定容器名称后，该服务将无法进行扩展（scale），因为 Docker 不允许多个容器具有相同的名称。</p></blockquote><h2 id="deploy"><a href="#deploy" class="headerlink" title="deploy"></a>deploy</h2><p>仅用于 <code>Swarm mode</code></p><h2 id="devices"><a href="#devices" class="headerlink" title="devices"></a>devices</h2><p>指定设备映射关系。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">devices</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> <span class="token string">"/dev/ttyUSB1:/dev/ttyUSB0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="depends-on"><a href="#depends-on" class="headerlink" title="depends_on"></a>depends_on</h2><p>解决容器的依赖、启动先后的问题。以下例子中会先启动 <code>redis</code> <code>db</code> 再启动 <code>web</code></p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">web</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> .    <span class="token key atrule">depends_on</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> db      <span class="token punctuation">-</span> redis  <span class="token key atrule">redis</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> redis  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> <code>web</code> 服务不会等待 <code>redis</code> <code>db</code> 「完全启动」之后才启动。</p></blockquote><h2 id="dns"><a href="#dns" class="headerlink" title="dns"></a>dns</h2><p>自定义 <code>DNS</code> 服务器。可以是一个值，也可以是一个列表。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">dns</span><span class="token punctuation">:</span> 8.8.8.8<span class="token key atrule">dns</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> 8.8.8.8  <span class="token punctuation">-</span> 114.114.114.114<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="dns-search"><a href="#dns-search" class="headerlink" title="dns_search"></a>dns_search</h2><p>配置 <code>DNS</code> 搜索域。可以是一个值，也可以是一个列表。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">dns_search</span><span class="token punctuation">:</span> example.com<span class="token key atrule">dns_search</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> domain1.example.com  <span class="token punctuation">-</span> domain2.example.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="tmpfs"><a href="#tmpfs" class="headerlink" title="tmpfs"></a>tmpfs</h2><p>挂载一个 tmpfs 文件系统到容器。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">tmpfs</span><span class="token punctuation">:</span> /run<span class="token key atrule">tmpfs</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> /run  <span class="token punctuation">-</span> /tmp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="env-file"><a href="#env-file" class="headerlink" title="env_file"></a>env_file</h2><p>从文件中获取环境变量，可以为单独的文件路径或列表。如果通过 <code>docker-compose -f FILE</code> 方式来指定 Compose 模板文件，则 <code>env_file</code> 中变量的路径会基于模板文件路径。如果有变量名称与 <code>environment</code> 指令冲突，则按照惯例，以后者为准。</p><pre class="line-numbers language-bash"><code class="language-bash">env_file: .envenv_file:  - ./common.env  - ./apps/web.env  - /opt/secrets.env<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>环境变量文件中每一行必须符合格式，支持 <code>#</code> 开头的注释行。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># common.env: Set development environment</span>PROG_ENV<span class="token operator">=</span>development<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="environment"><a href="#environment" class="headerlink" title="environment"></a>environment</h2><p>设置环境变量。你可以使用数组或字典两种格式。</p><p>只给定名称的变量会自动获取运行 Compose 主机上对应变量的值，可以用来防止泄露不必要的数据。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">environment</span><span class="token punctuation">:</span>  <span class="token key atrule">RACK_ENV</span><span class="token punctuation">:</span> development  <span class="token key atrule">SESSION_SECRET</span><span class="token punctuation">:</span><span class="token key atrule">environment</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> RACK_ENV=development  <span class="token punctuation">-</span> SESSION_SECRET<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果变量名称或者值中用到 <code>true|false，yes|no</code> 等表达 <a href="http://yaml.org/type/bool.html" target="_blank" rel="noopener">布尔</a> 含义的词汇，最好放到引号里，避免 YAML 自动解析某些内容为对应的布尔语义。这些特定词汇，包括</p><pre class="line-numbers language-bash"><code class="language-bash">y<span class="token operator">|</span>Y<span class="token operator">|</span><span class="token function">yes</span><span class="token operator">|</span>Yes<span class="token operator">|</span>YES<span class="token operator">|</span>n<span class="token operator">|</span>N<span class="token operator">|</span>no<span class="token operator">|</span>No<span class="token operator">|</span>NO<span class="token operator">|</span><span class="token boolean">true</span><span class="token operator">|</span>True<span class="token operator">|</span>TRUE<span class="token operator">|</span><span class="token boolean">false</span><span class="token operator">|</span>False<span class="token operator">|</span>FALSE<span class="token operator">|</span>on<span class="token operator">|</span>On<span class="token operator">|</span>ON<span class="token operator">|</span>off<span class="token operator">|</span>Off<span class="token operator">|</span>OFF<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="expose"><a href="#expose" class="headerlink" title="expose"></a>expose</h2><p>暴露端口，但不映射到宿主机，只被连接的服务访问。仅可以指定内部端口为参数</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">expose</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token string">"3000"</span> <span class="token punctuation">-</span> <span class="token string">"8000"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="external-links"><a href="#external-links" class="headerlink" title="external_links"></a>external_links</h2><blockquote><p><strong>注意：</strong> 不建议使用该指令。</p></blockquote><p>链接到 <code>docker-compose.yml</code> 外部的容器，甚至并非 <code>Compose</code> 管理的外部容器。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">external_links</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> redis_1 <span class="token punctuation">-</span> project_db_1<span class="token punctuation">:</span>mysql <span class="token punctuation">-</span> project_db_1<span class="token punctuation">:</span>postgresql<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="extra-hosts"><a href="#extra-hosts" class="headerlink" title="extra_hosts"></a>extra_hosts</h2><p>类似 Docker 中的 <code>--add-host</code> 参数，指定额外的 host 名称映射信息。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">extra_hosts</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token string">"googledns:8.8.8.8"</span> <span class="token punctuation">-</span> <span class="token string">"dockerhub:52.1.157.61"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>会在启动后的服务容器中 <code>/etc/hosts</code> 文件中添加如下两条条目。</p><pre class="line-numbers language-bash"><code class="language-bash">8.8.8.8 googledns52.1.157.61 dockerhub<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="healthcheck"><a href="#healthcheck" class="headerlink" title="healthcheck"></a>healthcheck</h2><p>通过命令检查容器是否健康运行。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">healthcheck</span><span class="token punctuation">:</span>  <span class="token key atrule">test</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">"CMD"</span><span class="token punctuation">,</span> <span class="token string">"curl"</span><span class="token punctuation">,</span> <span class="token string">"-f"</span><span class="token punctuation">,</span> <span class="token string">"http://localhost"</span><span class="token punctuation">]</span>  <span class="token key atrule">interval</span><span class="token punctuation">:</span> 1m30s  <span class="token key atrule">timeout</span><span class="token punctuation">:</span> 10s  <span class="token key atrule">retries</span><span class="token punctuation">:</span> <span class="token number">3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><p>指定为镜像名称或镜像 ID。如果镜像在本地不存在，<code>Compose</code> 将会尝试拉取这个镜像。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">image</span><span class="token punctuation">:</span> ubuntu<span class="token key atrule">image</span><span class="token punctuation">:</span> orchardup/postgresql<span class="token key atrule">image</span><span class="token punctuation">:</span> a4bc65fd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="labels"><a href="#labels" class="headerlink" title="labels"></a>labels</h2><p>为容器添加 Docker 元数据（metadata）信息。例如可以为容器添加辅助说明信息。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">labels</span><span class="token punctuation">:</span>  <span class="token key atrule">com.startupteam.description</span><span class="token punctuation">:</span> <span class="token string">"webapp for a startup team"</span>  <span class="token key atrule">com.startupteam.department</span><span class="token punctuation">:</span> <span class="token string">"devops department"</span>  <span class="token key atrule">com.startupteam.release</span><span class="token punctuation">:</span> <span class="token string">"rc3 for v1.0"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="links"><a href="#links" class="headerlink" title="links"></a>links</h2><blockquote><p>注意：不推荐使用该指令。</p></blockquote><h2 id="logging"><a href="#logging" class="headerlink" title="logging"></a>logging</h2><p>配置日志选项。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">logging</span><span class="token punctuation">:</span>  <span class="token key atrule">driver</span><span class="token punctuation">:</span> syslog  <span class="token key atrule">options</span><span class="token punctuation">:</span>    <span class="token key atrule">syslog-address</span><span class="token punctuation">:</span> <span class="token string">"tcp://192.168.0.42:123"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>目前支持三种日志驱动类型。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">"json-file"</span><span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">"syslog"</span><span class="token key atrule">driver</span><span class="token punctuation">:</span> <span class="token string">"none"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><code>options</code> 配置日志驱动的相关参数。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">options</span><span class="token punctuation">:</span>  <span class="token key atrule">max-size</span><span class="token punctuation">:</span> <span class="token string">"200k"</span>  <span class="token key atrule">max-file</span><span class="token punctuation">:</span> <span class="token string">"10"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="network-mode"><a href="#network-mode" class="headerlink" title="network_mode"></a>network_mode</h2><p>设置网络模式。使用和 <code>docker run</code> 的 <code>--network</code> 参数一样的值。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"bridge"</span><span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"host"</span><span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"none"</span><span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"service:[service name]"</span><span class="token key atrule">network_mode</span><span class="token punctuation">:</span> <span class="token string">"container:[container name/id]"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="networks"><a href="#networks" class="headerlink" title="networks"></a>networks</h2><p>配置容器连接的网络。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">some-service</span><span class="token punctuation">:</span>    <span class="token key atrule">networks</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> some<span class="token punctuation">-</span>network     <span class="token punctuation">-</span> other<span class="token punctuation">-</span>network<span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">some-network</span><span class="token punctuation">:</span>  other<span class="token punctuation">-</span>network<span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="pid"><a href="#pid" class="headerlink" title="pid"></a>pid</h2><p>跟主机系统共享进程命名空间。打开该选项的容器之间，以及容器和宿主机系统之间可以通过进程 ID 来相互访问和操作。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">pid</span><span class="token punctuation">:</span> <span class="token string">"host"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="ports"><a href="#ports" class="headerlink" title="ports"></a>ports</h2><p>暴露端口信息。</p><p>使用宿主端口：容器端口 <code>(HOST:CONTAINER)</code> 格式，或者仅仅指定容器的端口（宿主将会随机选择端口）都可以。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">ports</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> <span class="token string">"3000"</span> <span class="token punctuation">-</span> <span class="token string">"8000:8000"</span> <span class="token punctuation">-</span> <span class="token string">"49100:22"</span> <span class="token punctuation">-</span> <span class="token string">"127.0.0.1:8001:8001"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> 当使用 <code>HOST:CONTAINER</code> 格式来映射端口时，如果你使用的容器端口小于 60 并且没放到引号里，可能会得到错误结果，因为 <code>YAML</code> 会自动解析 <code>xx:yy</code> 这种数字格式为 60 进制。为避免出现这种问题，建议数字串都采用引号包括起来的字符串格式。</p></blockquote><h2 id="secrets"><a href="#secrets" class="headerlink" title="secrets"></a>secrets</h2><p>存储敏感数据，例如 <code>mysql</code> 服务密码。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3.1"</span><span class="token key atrule">services</span><span class="token punctuation">:</span><span class="token key atrule">mysql</span><span class="token punctuation">:</span>  <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql  <span class="token key atrule">environment</span><span class="token punctuation">:</span>    <span class="token key atrule">MYSQL_ROOT_PASSWORD_FILE</span><span class="token punctuation">:</span> /run/secrets/db_root_password  <span class="token key atrule">secrets</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> db_root_password    <span class="token punctuation">-</span> my_other_secret<span class="token key atrule">secrets</span><span class="token punctuation">:</span>  <span class="token key atrule">my_secret</span><span class="token punctuation">:</span>    <span class="token key atrule">file</span><span class="token punctuation">:</span> ./my_secret.txt  <span class="token key atrule">my_other_secret</span><span class="token punctuation">:</span>    <span class="token key atrule">external</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="security-opt"><a href="#security-opt" class="headerlink" title="security_opt"></a>security_opt</h2><p>指定容器模板标签（label）机制的默认属性（用户、角色、类型、级别等）。例如配置标签的用户名和角色名。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">security_opt</span><span class="token punctuation">:</span>    <span class="token punctuation">-</span> label<span class="token punctuation">:</span>user<span class="token punctuation">:</span>USER    <span class="token punctuation">-</span> label<span class="token punctuation">:</span>role<span class="token punctuation">:</span>ROLE<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="stop-signal"><a href="#stop-signal" class="headerlink" title="stop_signal"></a>stop_signal</h2><p>设置另一个信号来停止容器。在默认情况下使用的是 SIGTERM 停止容器。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">stop_signal</span><span class="token punctuation">:</span> SIGUSR1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="sysctls"><a href="#sysctls" class="headerlink" title="sysctls"></a>sysctls</h2><p>配置容器内核参数。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">sysctls</span><span class="token punctuation">:</span>  <span class="token key atrule">net.core.somaxconn</span><span class="token punctuation">:</span> <span class="token number">1024</span>  <span class="token key atrule">net.ipv4.tcp_syncookies</span><span class="token punctuation">:</span> <span class="token number">0</span><span class="token key atrule">sysctls</span><span class="token punctuation">:</span>  <span class="token punctuation">-</span> net.core.somaxconn=1024  <span class="token punctuation">-</span> net.ipv4.tcp_syncookies=0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ulimits"><a href="#ulimits" class="headerlink" title="ulimits"></a>ulimits</h2><p>指定容器的 ulimits 限制值。</p><p>例如，指定最大进程数为 65535，指定文件句柄数为 20000（软限制，应用可以随时修改，不能超过硬限制） 和 40000（系统硬限制，只能 root 用户提高）。</p><pre class="line-numbers language-yaml"><code class="language-yaml">  <span class="token key atrule">ulimits</span><span class="token punctuation">:</span>    <span class="token key atrule">nproc</span><span class="token punctuation">:</span> <span class="token number">65535</span>    <span class="token key atrule">nofile</span><span class="token punctuation">:</span>      <span class="token key atrule">soft</span><span class="token punctuation">:</span> <span class="token number">20000</span>      <span class="token key atrule">hard</span><span class="token punctuation">:</span> <span class="token number">40000</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="volumes"><a href="#volumes" class="headerlink" title="volumes"></a>volumes</h2><p>数据卷所挂载路径设置。可以设置宿主机路径 （<code>HOST:CONTAINER</code>） 或加上访问模式 （<code>HOST:CONTAINER:ro</code>）。</p><p>该指令中路径支持相对路径。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">volumes</span><span class="token punctuation">:</span> <span class="token punctuation">-</span> /var/lib/mysql <span class="token punctuation">-</span> cache/<span class="token punctuation">:</span>/tmp/cache <span class="token punctuation">-</span> ~/configs<span class="token punctuation">:</span>/etc/configs/<span class="token punctuation">:</span>ro<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="其它指令"><a href="#其它指令" class="headerlink" title="其它指令"></a>其它指令</h2><p>此外，还有包括 <code>domainname, entrypoint, hostname, ipc, mac_address, privileged, read_only, shm_size, restart, stdin_open, tty, user, working_dir</code> 等指令，基本跟 <code>docker run</code> 中对应参数的功能一致。</p><p>指定服务容器启动后执行的入口文件。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">entrypoint</span><span class="token punctuation">:</span> /code/entrypoint.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>指定容器中运行应用的用户名。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">user</span><span class="token punctuation">:</span> nginx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>指定容器中工作目录。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">working_dir</span><span class="token punctuation">:</span> /code<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>指定容器中搜索域名、主机名、mac 地址等。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">domainname</span><span class="token punctuation">:</span> your_website.com<span class="token key atrule">hostname</span><span class="token punctuation">:</span> test<span class="token key atrule">mac_address</span><span class="token punctuation">:</span> 08<span class="token punctuation">-</span>00<span class="token punctuation">-</span>27<span class="token punctuation">-</span>00<span class="token punctuation">-</span>0C<span class="token punctuation">-</span>0A<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>允许容器中运行一些特权命令。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">privileged</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>指定容器退出后的重启策略为始终重启。该命令对保持服务始终运行十分有效，在生产环境中推荐配置为 <code>always</code> 或者 <code>unless-stopped</code>。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">restart</span><span class="token punctuation">:</span> always<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>以只读模式挂载容器的 root 文件系统，意味着不能对容器内容进行修改。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">read_only</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>打开标准输入，可以接受外部输入。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">stdin_open</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>模拟一个伪终端。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">tty</span><span class="token punctuation">:</span> <span class="token boolean important">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="读取变量"><a href="#读取变量" class="headerlink" title="读取变量"></a>读取变量</h2><p>Compose 模板文件支持动态读取主机的系统环境变量和当前目录下的 <code>.env</code> 文件中的变量。</p><p>例如，下面的 Compose 文件将从运行它的环境中读取变量 <code>${MONGO_VERSION}</code> 的值，并写入执行的指令中。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">"3"</span><span class="token key atrule">services</span><span class="token punctuation">:</span><span class="token key atrule">db</span><span class="token punctuation">:</span>  <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">"mongo:${MONGO_VERSION}"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果执行 <code>MONGO_VERSION=3.2 docker-compose up</code> 则会启动一个 <code>mongo:3.2</code> 镜像的容器；如果执行 <code>MONGO_VERSION=2.8 docker-compose up</code> 则会启动一个 <code>mongo:2.8</code> 镜像的容器。若当前目录存在 <code>.env</code> 文件，执行 <code>docker-compose</code> 命令时将从该文件中读取变量。在当前目录新建 <code>.env</code> 文件并写入以下内容。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 支持 # 号注释</span>MONGO_VERSION<span class="token operator">=</span>3.6<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>执行 <code>docker-compose up</code> 则会启动一个 <code>mongo:3.6</code> 镜像的容器。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 部署 Nexus</title>
      <link href="/2019/11/22/029.DockerCompose-%E9%83%A8%E7%BD%B2%20Nexus/"/>
      <url>/2019/11/22/029.DockerCompose-%E9%83%A8%E7%BD%B2%20Nexus/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-部署-Nexus"><a href="#Docker-Compose-部署-Nexus" class="headerlink" title="Docker Compose 部署 Nexus"></a>Docker Compose 部署 Nexus</h1><h2 id="什么是-Nexus"><a href="#什么是-Nexus" class="headerlink" title="什么是 Nexus"></a>什么是 Nexus</h2><p>Nexus 是一个强大的 Maven 仓库管理器，极大地简化了内部仓库的维护和外部仓库的访问。2016 年 4 月 6 日 Nexus 3.0 版本发布，相较 2.x 版本有了很大的改变</p><ul><li>对低层代码进行了大规模重构，提升性能，增加可扩展性以及改善用户体验。</li><li>升级界面，极大的简化了用户界面的操作和管理。</li><li>提供新的安装包，让部署更加简单。</li><li>增加对 Docker,  NeGet,  npm,  Bower 的支持。</li><li>提供新的管理接口，以及增强对自动任务的管理。</li></ul><h2 id="部署-Nexus"><a href="#部署-Nexus" class="headerlink" title="部署 Nexus"></a>部署 Nexus</h2><p>我们使用 Docker 来安装和运行 Nexus，<code>docker-compose.yml</code> 配置如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">nexus</span><span class="token punctuation">:</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">image</span><span class="token punctuation">:</span> sonatype/nexus3    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> nexus    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8081<span class="token punctuation">:</span><span class="token number">8081</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/nexus<span class="token punctuation">-</span>data<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> 启动时如果出现权限问题可以使用 <code>chmod 777 /usr/local/docker/nexus/data</code> 赋予数据卷目录可读可写的权限</p></blockquote><h2 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h2><ul><li><strong>地址：</strong> <a href="http://ip:port/" target="_blank" rel="noopener">http://ip:port/</a></li><li><strong>用户名：</strong> admin</li><li><strong>密码：</strong> admin123</li></ul><p><img src="/DockerCompose/Lusifer1521047001.png" alt></p><h2 id="Maven-仓库介绍"><a href="#Maven-仓库介绍" class="headerlink" title="Maven 仓库介绍"></a>Maven 仓库介绍</h2><h3 id="代理仓库-Proxy-Repository"><a href="#代理仓库-Proxy-Repository" class="headerlink" title="代理仓库(Proxy Repository)"></a>代理仓库(Proxy Repository)</h3><ul><li>第三方仓库<ul><li><strong>maven-central</strong></li><li><strong>nuget.org-proxy</strong></li></ul></li><li>版本策略(Version Policy)<ul><li><strong>Release：</strong>  正式版本</li><li><strong>Snapshot：</strong> 快照版本</li><li><strong>Mixed：</strong> 混合模式</li></ul></li><li>布局策略(Layout Policy)<ul><li><strong>Strict：</strong> 严格</li><li><strong>Permissive：</strong> 宽松</li></ul></li></ul><h3 id="宿主仓库-Hosted-Repository"><a href="#宿主仓库-Hosted-Repository" class="headerlink" title="宿主仓库(Hosted Repository)"></a>宿主仓库(Hosted Repository)</h3><ul><li>存储本地上传的组件和资源的<ul><li><strong>maven-releases</strong></li><li><strong>maven-snapshots</strong></li><li><strong>nuget-hosted</strong></li></ul></li><li>部署策略(Deployment Policy)<ul><li><strong>Allow Redeploy：</strong> 允许重新部署</li><li><strong>Disable Redeploy：</strong> 禁止重新部署</li><li><strong>Read-Only：</strong> 只读</li></ul></li></ul><h3 id="仓库组-Repository-Group"><a href="#仓库组-Repository-Group" class="headerlink" title="仓库组(Repository Group)"></a>仓库组(Repository Group)</h3><p>通常包含了多个代理仓库和宿主仓库，在项目中只要引入仓库组就可以下载到代理仓库和宿主仓库中的包</p><ul><li><strong>maven-public</strong></li><li><strong>nuget-group</strong></li></ul><h2 id="在项目中使用-Nexus"><a href="#在项目中使用-Nexus" class="headerlink" title="在项目中使用 Nexus"></a>在项目中使用 Nexus</h2><h3 id="配置认证信息"><a href="#配置认证信息" class="headerlink" title="配置认证信息"></a>配置认证信息</h3><p>在 Maven <code>settings.xml</code> 中添加 Nexus 认证信息 (<strong>servers</strong> 节点下)</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-releases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>admin123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>server</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-snapshots<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>username</span><span class="token punctuation">></span></span>admin<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>username</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>password</span><span class="token punctuation">></span></span>admin123<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>password</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>server</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Snapshots-与-Releases-的区别"><a href="#Snapshots-与-Releases-的区别" class="headerlink" title="Snapshots 与 Releases 的区别"></a>Snapshots 与 Releases 的区别</h3><ul><li><strong>nexus-releases：</strong>  用于发布 Release 版本</li><li><strong>nexus-snapshots：</strong>  用于发布 Snapshot 版本（快照版）</li></ul><p>Release 版本与 Snapshot 定义</p><pre><code>Release: 1.0.0/1.0.0-RELEASESnapshot: 1.0.0-SNAPSHOT</code></pre><ul><li>在项目 <code>pom.xml</code> 中设置的版本号添加 <code>SNAPSHOT</code> 标识的都会发布为 <code>SNAPSHOT</code> 版本，没有 <code>SNAPSHOT</code> 标识的都会发布为 <code>RELEASE</code> 版本。</li><li><code>SNAPSHOT</code> 版本会自动加一个时间作为标识，如：<code>1.0.0-SNAPSHOT</code> 发布后为变成 <code>1.0.0-SNAPSHOT-20180522.123456-1.jar</code></li></ul><h3 id="配置自动化部署"><a href="#配置自动化部署" class="headerlink" title="配置自动化部署"></a>配置自动化部署</h3><p>在 <code>pom.xml</code> 中添加如下代码</p><pre class="line-numbers language-xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>distributionManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>repository</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-releases<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Nexus Release Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://127.0.0.1:8081/repository/maven-releases/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>repository</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>snapshotRepository</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>id</span><span class="token punctuation">></span></span>nexus-snapshots<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>id</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>name</span><span class="token punctuation">></span></span>Nexus Snapshot Repository<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>name</span><span class="token punctuation">></span></span>      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>url</span><span class="token punctuation">></span></span>http://127.0.0.1:8081/repository/maven-snapshots/<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>url</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>snapshotRepository</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>distributionManagement</span><span class="token punctuation">></span></span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意事项</strong></p><ul><li>ID 名称必须要与 <code>settings.xml</code> 中 Servers 配置的 ID 名称保持一致</li><li>项目版本号中有 <code>SNAPSHOT</code> 标识的，会发布到 Nexus Snapshots Repository， 否则发布到 Nexus Release Repository，并根据 ID 去匹配授权账号</li></ul><h3 id="部署到仓库"><a href="#部署到仓库" class="headerlink" title="部署到仓库"></a>部署到仓库</h3><pre class="line-numbers language-bash"><code class="language-bash">mvn deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="配置代理仓库"><a href="#配置代理仓库" class="headerlink" title="配置代理仓库"></a>配置代理仓库</h3><pre class="line-numbers language-yaml"><code class="language-yaml">&lt;repositories<span class="token punctuation">></span>    &lt;repository<span class="token punctuation">></span>        &lt;id<span class="token punctuation">></span>nexus&lt;/id<span class="token punctuation">></span>        &lt;name<span class="token punctuation">></span>Nexus Repository&lt;/name<span class="token punctuation">></span>        &lt;url<span class="token punctuation">></span>http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>8081/repository/maven<span class="token punctuation">-</span>public/&lt;/url<span class="token punctuation">></span>        &lt;snapshots<span class="token punctuation">></span>            &lt;enabled<span class="token punctuation">></span>true&lt;/enabled<span class="token punctuation">></span>        &lt;/snapshots<span class="token punctuation">></span>        &lt;releases<span class="token punctuation">></span>            &lt;enabled<span class="token punctuation">></span>true&lt;/enabled<span class="token punctuation">></span>        &lt;/releases<span class="token punctuation">></span>    &lt;/repository<span class="token punctuation">></span>&lt;/repositories<span class="token punctuation">></span>&lt;pluginRepositories<span class="token punctuation">></span>    &lt;pluginRepository<span class="token punctuation">></span>        &lt;id<span class="token punctuation">></span>nexus&lt;/id<span class="token punctuation">></span>        &lt;name<span class="token punctuation">></span>Nexus Plugin Repository&lt;/name<span class="token punctuation">></span>        &lt;url<span class="token punctuation">></span>http<span class="token punctuation">:</span>//127.0.0.1<span class="token punctuation">:</span>8081/repository/maven<span class="token punctuation">-</span>public/&lt;/url<span class="token punctuation">></span>        &lt;snapshots<span class="token punctuation">></span>            &lt;enabled<span class="token punctuation">></span>true&lt;/enabled<span class="token punctuation">></span>        &lt;/snapshots<span class="token punctuation">></span>        &lt;releases<span class="token punctuation">></span>            &lt;enabled<span class="token punctuation">></span>true&lt;/enabled<span class="token punctuation">></span>        &lt;/releases<span class="token punctuation">></span>    &lt;/pluginRepository<span class="token punctuation">></span>&lt;/pluginRepositories<span class="token punctuation">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h3 id="手动上传第三方依赖"><a href="#手动上传第三方依赖" class="headerlink" title="手动上传第三方依赖"></a>手动上传第三方依赖</h3><p>Nexus 3.1.x 开始支持页面上传第三方依赖功能，以下为手动上传命令</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 如第三方JAR包：aliyun-sdk-oss-2.2.3.jar</span>mvn deploy:deploy-file   -DgroupId<span class="token operator">=</span>com.aliyun.oss   -DartifactId<span class="token operator">=</span>aliyun-sdk-oss   -Dversion<span class="token operator">=</span>2.2.3   -Dpackaging<span class="token operator">=</span>jar   -Dfile<span class="token operator">=</span>D:\aliyun-sdk-oss-2.2.3.jar   -Durl<span class="token operator">=</span>http://127.0.0.1:8081/repository/maven-3rd/   -DrepositoryId<span class="token operator">=</span>nexus-releases<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意事项</strong></p><ul><li>建议在上传第三方 JAR 包时，创建单独的第三方 JAR 包管理仓库，便于管理有维护。（maven-3rd）</li><li><code>-DrepositoryId=nexus-releases</code> 对应的是 <code>settings.xml</code> 中 <strong>Servers</strong> 配置的 ID 名称。（授权）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 网络设置</title>
      <link href="/2019/11/22/031.DockerCompose-%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/"/>
      <url>/2019/11/22/031.DockerCompose-%E7%BD%91%E7%BB%9C%E8%AE%BE%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-网络设置"><a href="#Docker-Compose-网络设置" class="headerlink" title="Docker Compose 网络设置"></a>Docker Compose 网络设置</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>默认情况下，Compose 会为我们的应用创建一个网络，服务的每个容器都会加入该网络中。这样，容器就可被该网络中的其他容器访问，不仅如此，<strong>该容器还能以服务名称作为 Hostname 被其他容器访问</strong>。</p><p>默认情况下，应用程序的网络名称基于 Compose 的工程名称，而项目名称基于 <code>docker-compose.yml</code> 所在目录的名称。如需修改工程名称，可使用 <code>--project-name</code> 标识或 <code>COMPOSE_PORJECT_NAME</code> 环境变量。</p><p>假如一个应用程序在名为 myapp 的目录中，并且 <code>docker-compose.yml</code> 如下所示：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">web</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> .    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8000:8000"</span>  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当我们运行 <code>docker-compose up</code> 时，将会执行以下几步：</p><ul><li>创建一个名为 <strong>myapp_default</strong> 的网络</li><li>使用 web 服务的配置创建容器，它以 <strong>web</strong> 这个名称加入网络 myapp_default</li><li>使用 db 服务的配置创建容器，它以 <strong>db</strong> 这个名称加入网络 myapp_default</li></ul><p>容器间可使用服务名称（web 或 db）作为 Hostname 相互访问。例如，web 这个服务可使用 <code>postgres://db:5432</code> 访问 db 容器。</p><p>当服务的配置发生更改时，可使用 <code>docker-compose up</code> 命令更新配置。此时，Compose 会删除旧容器并创建新容器。新容器会以不同的 IP 地址加入网络，名称保持不变。任何指向旧容器的连接都会被关闭，容器会重新找到新容器并连接上去。</p><h2 id="使用-links"><a href="#使用-links" class="headerlink" title="使用 links"></a>使用 links</h2><p>默认情况下，服务之间可使用服务名称相互访问。links 允许我们定义一个别名，从而使用该别名访问其他服务。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">web</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> .    <span class="token key atrule">links</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"db:database"</span>  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="自定义网络"><a href="#自定义网络" class="headerlink" title="自定义网络"></a>自定义网络</h2><p>一些场景下，默认的网络配置满足不了我们的需求，此时我们可使用 networks 命令自定义网络。networks 命令允许我们创建更加复杂的网络拓扑并指定自定义网络驱动和选项。不仅如此，我们还可使用 networks 将服务连接到不是由 Compose 管理的、外部创建的网络。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">proxy</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> ./proxy    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> front  <span class="token key atrule">app</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> ./app    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> front      <span class="token punctuation">-</span> back  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres    <span class="token key atrule">networks</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> back<span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">front</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Use a custom driver</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> custom<span class="token punctuation">-</span>driver<span class="token punctuation">-</span><span class="token number">1</span>  <span class="token key atrule">back</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Use a custom driver which takes special options</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> custom<span class="token punctuation">-</span>driver<span class="token punctuation">-</span><span class="token number">2</span>    <span class="token key atrule">driver_opts</span><span class="token punctuation">:</span>      <span class="token key atrule">foo</span><span class="token punctuation">:</span> <span class="token string">"1"</span>      <span class="token key atrule">bar</span><span class="token punctuation">:</span> <span class="token string">"2"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中，proxy 服务与 db 服务隔离，两者分别使用自己的网络；app 服务可与两者通信。使用 networks 命令，即可方便实现服务间的网络隔离与连接。</p><h2 id="配置默认网络"><a href="#配置默认网络" class="headerlink" title="配置默认网络"></a>配置默认网络</h2><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'2'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">web</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> .    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> <span class="token string">"8000:8000"</span>  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> postgres<span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># Use a custom driver</span>    <span class="token key atrule">driver</span><span class="token punctuation">:</span> custom<span class="token punctuation">-</span>driver<span class="token punctuation">-</span><span class="token number">1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这样，就可为该应用指定自定义的网络驱动</p><h2 id="已存在的网络"><a href="#已存在的网络" class="headerlink" title="已存在的网络"></a>已存在的网络</h2><p>我们可以预先创建一个名为 myapp 的网络，让 Compose  加入这个新创建的网络，使所有 Compose  可以通信，此时使用 external 选项。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 创建网络</span>docker network create <span class="token operator">&lt;</span>Network Name<span class="token operator">></span><span class="token comment" spellcheck="true"># 查看已存在的网络</span>docker network list<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">networks</span><span class="token punctuation">:</span>  <span class="token key atrule">default</span><span class="token punctuation">:</span>    <span class="token key atrule">external</span><span class="token punctuation">:</span>      <span class="token key atrule">name</span><span class="token punctuation">:</span> myapp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="一次构建，到处运行"><a href="#一次构建，到处运行" class="headerlink" title="一次构建，到处运行"></a>一次构建，到处运行</h2><p>请参考本节视频</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 部署 Harbor</title>
      <link href="/2019/11/22/030.DockerCompose-%E9%83%A8%E7%BD%B2%20Harbor/"/>
      <url>/2019/11/22/030.DockerCompose-%E9%83%A8%E7%BD%B2%20Harbor/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-部署-Harbor"><a href="#Docker-Compose-部署-Harbor" class="headerlink" title="Docker Compose 部署 Harbor"></a>Docker Compose 部署 Harbor</h1><h2 id="什么是-Harbor"><a href="#什么是-Harbor" class="headerlink" title="什么是 Harbor"></a>什么是 Harbor</h2><p>Harbor 是一个用于存储和分发 Docker 镜像的企业级 Registry 服务器，通过添加一些企业必需的功能特性，例如安全、标识和管理等，扩展了开源 Docker Distribution。作为一个企业级私有 Registry 服务器，Harbor 提供了更好的性能和安全。提升用户使用 Registry 构建和运行环境传输镜像的效率。Harbor 支持安装在多个 Registry 节点的镜像资源复制，镜像全部保存在私有 Registry 中， 确保数据和知识产权在公司内部网络中管控。另外，Harbor 也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。</p><h2 id="Harbor-特性"><a href="#Harbor-特性" class="headerlink" title="Harbor 特性"></a>Harbor 特性</h2><ul><li><strong>基于角色的访问控制 ：</strong> 用户与 Docker 镜像仓库通过 “项目” 进行组织管理，一个用户可以对多个镜像仓库在同一命名空间（project）里有不同的权限。</li><li><strong>镜像复制 ：</strong>  镜像可以在多个 Registry 实例中复制（同步）。尤其适合于负载均衡，高可用，混合云和多云的场景。</li><li>*<em>图形化用户界面 ： *</em> 用户可以通过浏览器来浏览，检索当前 Docker 镜像仓库，管理项目和命名空间。</li><li><strong>AD/LDAP 支持 ：</strong>  Harbor 可以集成企业内部已有的 AD/LDAP，用于鉴权认证管理。</li><li><strong>审计管理 ：</strong>  所有针对镜像仓库的操作都可以被记录追溯，用于审计管理。</li><li><strong>国际化 ：</strong>  已拥有英文、中文、德文、日文和俄文的本地化版本。更多的语言将会添加进来。</li><li><strong>RESTful API ：</strong>  RESTful API 提供给管理员对于 Harbor 更多的操控，使得与其它管理软件集成变得更容易。</li><li><strong>部署简单 ：</strong>  提供在线和离线两种安装工具， 也可以安装到 vSphere 平台 (OVA 方式) 虚拟设备。</li></ul><h2 id="Harbor-组件"><a href="#Harbor-组件" class="headerlink" title="Harbor 组件"></a>Harbor 组件</h2><ul><li><strong>Proxy：</strong> Harbor 的 registry,  UI,  token 等服务，通过一个前置的反向代理统一接收浏览器、Docker 客户端的请求，并将请求转发给后端不同的服务。</li><li><strong>Registry：</strong>  负责储存 Docker 镜像，并处理 docker push/pull 命令。由于我们要对用户进行访问控制，即不同用户对 Docker image 有不同的读写权限，Registry 会指向一个 token 服务，强制用户的每次 docker pull/push 请求都要携带一个合法的 token, Registry 会通过公钥对 token 进行解密验证。</li><li><strong>Core services：</strong>  这是 Harbor 的核心功能，主要提供以下服务：<ul><li><strong>UI：</strong> 提供图形化界面，帮助用户管理 registry 上的镜像（image）, 并对用户进行授权。</li><li><strong>WebHook：</strong> 为了及时获取 registry 上 image 状态变化的情况， 在 Registry 上配置 webhook，把状态变化传递给 UI 模块。</li><li><strong>Token：</strong> 负责根据用户权限给每个 docker push/pull 命令签发 token. Docker 客户端向 - Registry 服务发起的请求，如果不包含 token，会被重定向到这里，获得 token 后再重新向 Registry 进行请求。</li></ul></li><li><strong>Database：</strong> 为 core services 提供数据库服务，负责储存用户权限、审计日志、Docker image 分组信息等数据。</li><li><strong>Job Services：</strong> 提供镜像远程复制功能，可以把本地镜像同步到其他 Harbor 实例中。</li><li><strong>Log Collector：</strong> 为了帮助监控 Harbor 运行，负责收集其他组件的 log，供日后进行分析。</li></ul><p><img src="/DockerCompose/2017101103304659.png" alt></p><h2 id="安装-Harbor"><a href="#安装-Harbor" class="headerlink" title="安装 Harbor"></a>安装 Harbor</h2><p><a href="https://github.com/goharbor/harbor" target="_blank" rel="noopener">官方 GitHub</a> 上下载最新离线安装版（我已经下载并放置在群分享的 <strong>Linux</strong> 目录下）并上传至服务器</p><h3 id="解压安装包"><a href="#解压安装包" class="headerlink" title="解压安装包"></a>解压安装包</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tar</span> -zxvf harbor-offline-installer-v1.8.0.tgz<span class="token comment" spellcheck="true"># 输出如下</span>harbor/harbor.v1.8.0.tar.gzharbor/prepareharbor/LICENSEharbor/install.shharbor/harbor.yml<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> harbor.yml<span class="token comment" spellcheck="true"># 修改为域名或你服务器 IP</span>hostname: 192.168.141.150<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="执行安装脚本"><a href="#执行安装脚本" class="headerlink" title="执行安装脚本"></a>执行安装脚本</h3><pre class="line-numbers language-bash"><code class="language-bash">./install.sh<span class="token comment" spellcheck="true"># 输出如下</span><span class="token punctuation">[</span>Step 0<span class="token punctuation">]</span>: checking installation environment <span class="token punctuation">..</span>.Note: docker version: 18.09.6Note: docker-compose version: 1.24.0<span class="token punctuation">[</span>Step 1<span class="token punctuation">]</span>: loading Harbor images <span class="token punctuation">..</span>.23d9f72a5270: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  33.25MB/33.25MB1d4a1da12c02: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  50.51MB/50.51MB8eb1a006f3b0: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.584kB/3.584kB41b6f75847f4: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kBec9bd6e4d4e8: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   2.56kB/2.56kB6d852bb664c2: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kB0e4ed2b5a5b8: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.584kB/3.584kB8dfb2b644f30: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  12.29kB/12.29kBLoaded image: goharbor/harbor-log:v1.8.0d8c53538042b: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  63.34MB/63.34MB1b5fb7ee22e0: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  47.96MB/47.96MBa8bdca5e9d71: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  6.656kB/6.656kBf7cec940b52c: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  2.048kB/2.048kB301a4a2af7db: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   7.68kB/7.68kBe588e1e3a775: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   2.56kB/2.56kB539f28a5d0ea: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   2.56kB/2.56kB8b4a72241226: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   2.56kB/2.56kBLoaded image: goharbor/harbor-db:v1.8.0c88db349fb2f: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  8.972MB/8.972MB1f2d4d72bba2: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  35.77MB/35.77MBdddbcf598df5: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  2.048kB/2.048kB0ced476c2d9c: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kBaf24eb0bf40b: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  35.77MB/35.77MBLoaded image: goharbor/chartmuseum-photon:v0.8.1-v1.8.0b185d348bd7d: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   2.56kB/2.56kBf032ded7f92e: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  1.536kB/1.536kBc6c822edbc47: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   66.9MB/66.9MB73ef3c4363bf: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  39.75MB/39.75MB0c490e002448: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  144.4kB/144.4kB31afe2abafb4: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.004MB/3.004MBLoaded image: goharbor/prepare:v1.8.0257ebcc1c9c4: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  8.967MB/8.967MB7579d3c94fca: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  38.68MB/38.68MB323611f7dd17: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  38.68MB/38.68MBLoaded image: goharbor/harbor-jobservice:v1.8.0587a5757a7f6: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.548MB/3.548MBLoaded image: goharbor/nginx-photon:v1.8.0a61ab2060e6e: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  8.967MB/8.967MB25359ae00f57: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  5.143MB/5.143MB610a1668f8bf: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  15.13MB/15.13MBdb2252abd9e0: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  26.47MB/26.47MB4f406312560b: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  22.02kB/22.02kB1cee0947e5a7: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kB48db2b9b0752: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  46.74MB/46.74MBLoaded image: goharbor/notary-server-photon:v0.6.1-v1.8.0aaf447150765: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>    113MB/113MB6835441e1a1d: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  10.94MB/10.94MB9f4739e3a532: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  2.048kB/2.048kB928f489135f0: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  48.13kB/48.13kB1495a1a09ada: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kB1a5f5b141717: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  10.99MB/10.99MBLoaded image: goharbor/clair-photon:v2.0.8-v1.8.066006ea937c6: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  337.8MB/337.8MBd272ba122880: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  106.5kB/106.5kBLoaded image: goharbor/harbor-migrator:v1.8.005bc5efb1724: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  8.967MB/8.967MBaf3a6f89469a: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  46.85MB/46.85MB452d238b3e48: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  5.632kB/5.632kB36e1cb2d6ffa: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  27.14kB/27.14kB5385ffb8451e: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  46.85MB/46.85MBLoaded image: goharbor/harbor-core:v1.8.0268091c30a67: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  71.66MB/71.66MB4433bcd802e7: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kB420b26399278: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   59.9kB/59.9kB8864c4b9ac3d: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  61.95kB/61.95kBLoaded image: goharbor/redis-photon:v1.8.063645c97bf5d: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  8.968MB/8.968MBccb295818ad9: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kB1ec2d1eefa8f: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   2.56kB/2.56kBb88acf0f9f5f: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   20.1MB/20.1MB0e7375de12e6: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   20.1MB/20.1MBLoaded image: goharbor/registry-photon:v2.7.1-patch-2819-v1.8.0444b0c8bfeee: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.548MB/3.548MBed0415346760: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  6.568MB/6.568MB572bd51089e0: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  160.8kB/160.8kB1410c2919a92: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>    215kB/215kB8ecdca210598: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.584kB/3.584kBLoaded image: goharbor/harbor-portal:v1.8.07fb66591fb58: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  8.968MB/8.968MB42ec4a6394bf: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kBbe6c2180cb57: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>   20.1MB/20.1MBd956d9e974c5: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kBe2e0b4f17ad8: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  7.465MB/7.465MB7e29d670afe9: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  27.56MB/27.56MBLoaded image: goharbor/harbor-registryctl:v1.8.0453732ea69d4: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  13.72MB/13.72MBc985f3824f33: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  26.47MB/26.47MB76eaa2763221: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  22.02kB/22.02kB0ef55a752948: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  3.072kB/3.072kBc5749b90723d: Loading layer <span class="token punctuation">[</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">==</span><span class="token operator">></span><span class="token punctuation">]</span>  45.33MB/45.33MBLoaded image: goharbor/notary-signer-photon:v0.6.1-v1.8.0<span class="token punctuation">[</span>Step 2<span class="token punctuation">]</span>: preparing environment <span class="token punctuation">..</span>.prepare base <span class="token function">dir</span> is <span class="token keyword">set</span> to /usr/local/docker/harbor/harborGenerated configuration file: /config/log/logrotate.confGenerated configuration file: /config/nginx/nginx.confGenerated configuration file: /config/core/envGenerated configuration file: /config/core/app.confGenerated configuration file: /config/registry/config.ymlGenerated configuration file: /config/registryctl/envGenerated configuration file: /config/db/envGenerated configuration file: /config/jobservice/envGenerated configuration file: /config/jobservice/config.ymlGenerated and saved secret to file: /secret/keys/secretkeyGenerated certificate, key file: /secret/core/private_key.pem, cert file: /secret/registry/root.crtGenerated configuration file: /compose_location/docker-compose.ymlClean up the input <span class="token function">dir</span><span class="token punctuation">[</span>Step 3<span class="token punctuation">]</span>: starting Harbor <span class="token punctuation">..</span>.Creating network <span class="token string">"harbor_harbor"</span> with the default driverCreating harbor-log <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating harbor-db   <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating registryctl <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating redis       <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating registry    <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating harbor-core <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating harbor-jobservice <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating harbor-portal     <span class="token punctuation">..</span>. <span class="token keyword">done</span>Creating nginx             <span class="token punctuation">..</span>. <span class="token keyword">done</span>✔ ----Harbor has been installed and started successfully.----Now you should be able to visit the admin portal at http://192.168.141.150. For <span class="token function">more</span> details, please visit https://github.com/goharbor/harbor <span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h3><p>通过浏览器访问 <a href="http://192.168.141.150" target="_blank" rel="noopener">http://192.168.141.150</a> ，看到登录页面</p><p><img src="/DockerCompose/Lusifer_20190617010524.png" alt></p><p>输入账号 <code>admin</code>，密码 <code>Harbor12345</code>，登录成功后</p><p><img src="/DockerCompose/Lusifer_20190617010713.png" alt></p><h2 id="Harbor-启动和停止"><a href="#Harbor-启动和停止" class="headerlink" title="Harbor 启动和停止"></a>Harbor 启动和停止</h2><p>Harbor 的日常运维管理是通过 docker-compose 来完成的，Harbor 本身有多个服务进程，都放在 docker 容器之中运行，我们可以通过 <code>docker ps</code> 命令查看。</p><pre class="line-numbers language-bash"><code class="language-bash">docker <span class="token function">ps</span> <span class="token operator">|</span> <span class="token function">grep</span> goharbor<span class="token comment" spellcheck="true"># 输出如下</span>07b401504357        goharbor/nginx-photon:v1.8.0                        <span class="token string">"nginx -g 'daemon of…"</span>   23 minutes ago      Up 23 minutes <span class="token punctuation">(</span>healthy<span class="token punctuation">)</span>   0.0.0.0:80-<span class="token operator">></span>80/tcp          nginx050f39a147bc        goharbor/harbor-portal:v1.8.0                       <span class="token string">"nginx -g 'daemon of…"</span>   23 minutes ago      Up 23 minutes <span class="token punctuation">(</span>healthy<span class="token punctuation">)</span>   80/tcp                      harbor-portal305077bc0a3e        goharbor/harbor-jobservice:v1.8.0                   <span class="token string">"/harbor/start.sh"</span>       23 minutes ago      Up 23 minutes                                         harbor-jobservice4eb33b09b268        goharbor/harbor-core:v1.8.0                         <span class="token string">"/harbor/start.sh"</span>       23 minutes ago      Up 23 minutes <span class="token punctuation">(</span>healthy<span class="token punctuation">)</span>                               harbor-coree9efb7a6abf9        goharbor/registry-photon:v2.7.1-patch-2819-v1.8.0   <span class="token string">"/entrypoint.sh /etc…"</span>   24 minutes ago      Up 23 minutes <span class="token punctuation">(</span>healthy<span class="token punctuation">)</span>   5000/tcp                    registryf9bc75d47752        goharbor/harbor-registryctl:v1.8.0                  <span class="token string">"/harbor/start.sh"</span>       24 minutes ago      Up 23 minutes <span class="token punctuation">(</span>healthy<span class="token punctuation">)</span>                               registryctl76d33d1755f6        goharbor/redis-photon:v1.8.0                        <span class="token string">"docker-entrypoint.s…"</span>   24 minutes ago      Up 23 minutes             6379/tcp                    redis3870b3b93f46        goharbor/harbor-db:v1.8.0                           <span class="token string">"/entrypoint.sh post…"</span>   24 minutes ago      Up 23 minutes <span class="token punctuation">(</span>healthy<span class="token punctuation">)</span>   5432/tcp                    harbor-db6e848e4d8bc2        goharbor/harbor-log:v1.8.0                          <span class="token string">"/bin/sh -c /usr/loc…"</span>   24 minutes ago      Up 24 minutes <span class="token punctuation">(</span>healthy<span class="token punctuation">)</span>   127.0.0.1:1514-<span class="token operator">></span>10514/tcp   harbor-log<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 启动</span>docker-compose start<span class="token comment" spellcheck="true"># 停止</span>docker-comose stop<span class="token comment" spellcheck="true"># 重启</span>docker-compose restart<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>说明：</strong></p><ul><li><strong>nginx：</strong> nginx 负责流量转发和安全验证，对外提供的流量都是从 nginx 中转，所以开放 https 的 443 端口，它将流量分发到后端的 ui 和正在 docker 镜像存储的 docker registry。</li><li><strong>harbor-jobservice：</strong> harbor-jobservice 是 harbor 的 job 管理模块，job 在 harbor 里面主要是为了镜像仓库之前同步使用的；</li><li><strong>harbor-ui：</strong> harbor-ui 是 web 管理页面，主要是前端的页面和后端 CURD 的接口；</li><li><strong>registry：</strong> registry 就是 docker 原生的仓库，负责保存镜像。</li><li><strong>harbor-adminserver：</strong> harbor-adminserver 是 harbor 系统管理接口，可以修改系统配置以及获取系统信息。</li><li><strong>harbor-db：</strong> harbor-db 是 harbor 的数据库，这里保存了系统的 job 以及项目、人员权限管理。由于本 harbor 的认证也是通过数据，在生产环节大多对接到企业的 ldap 中；</li><li><strong>harbor-log：</strong> harbor-log 是 harbor 的日志服务，统一管理 harbor 的日志。通过 inspect 可以看出容器统一将日志输出的 syslog。</li></ul><p>这几个容器通过 Docker link 的形式连接在一起，这样，在容器之间可以通过容器名字互相访问。对终端用户而言，只需要暴露 proxy （即 Nginx）的服务端口。</p><h2 id="配置客户端"><a href="#配置客户端" class="headerlink" title="配置客户端"></a>配置客户端</h2><p>在 <code>/etc/docker/daemon.json</code> 中增加如下内容（如果文件不存在请新建该文件）</p><pre class="line-numbers language-json"><code class="language-json"><span class="token punctuation">{</span>  <span class="token property">"registry-mirrors"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"https://registry.docker-cn.com"</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token property">"insecure-registries"</span><span class="token operator">:</span> <span class="token punctuation">[</span>    <span class="token string">"192.168.141.150"</span>  <span class="token punctuation">]</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> 该文件必须符合 JSON 规范，否则 Docker 将不能启动。</p></blockquote><p>重启服务</p><pre class="line-numbers language-bash"><code class="language-bash">systemctl daemon-reloadsystemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="检查客户端配置是否生效"><a href="#检查客户端配置是否生效" class="headerlink" title="检查客户端配置是否生效"></a>检查客户端配置是否生效</h2><p>使用 <code>docker info</code> 命令手动检查，如果从配置中看到如下内容，说明配置成功</p><pre><code>Insecure Registries: 192.168.141.150 127.0.0.0/8</code></pre><h2 id="Harbor-上传镜像"><a href="#Harbor-上传镜像" class="headerlink" title="Harbor 上传镜像"></a>Harbor 上传镜像</h2><h3 id="新建项目"><a href="#新建项目" class="headerlink" title="新建项目"></a>新建项目</h3><p>我们以推送 Nginx 为例，首先需要在 Harbor 上创建一个 <strong>公开/私有</strong> 的项目</p><p><img src="/DockerCompose/Lusifer_20190618052805.png" alt></p><p><img src="/DockerCompose/Lusifer_20190618052902.png" alt></p><h3 id="推送镜像"><a href="#推送镜像" class="headerlink" title="推送镜像"></a>推送镜像</h3><p><img src="/DockerCompose/Lusifer_20190618052957.png" alt></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 在项目中标记镜像</span>docker tag nginx 192.168.141.150/myshop/nginx:latest<span class="token comment" spellcheck="true"># 登录 Harbor</span>docker login 192.168.141.150 -u admin -p Harbor12345<span class="token comment" spellcheck="true"># 推送镜像到项目</span>docker push 192.168.141.150/myshop/nginx:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看镜像"><a href="#查看镜像" class="headerlink" title="查看镜像"></a>查看镜像</h3><p><img src="/DockerCompose/Lusifer_20190618053555.png" alt></p><p><img src="/DockerCompose/Lusifer_20190618053614.png" alt></p><h2 id="Harbor-下载镜像"><a href="#Harbor-下载镜像" class="headerlink" title="Harbor 下载镜像"></a>Harbor 下载镜像</h2><p>在其它机器下载镜像只需要配置好客户端即可</p><pre class="line-numbers language-bash"><code class="language-bash">docker pull 192.168.141.150/myshop/nginx:latest<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 部署 GitLab</title>
      <link href="/2019/11/22/028.DockerCompose-%E9%83%A8%E7%BD%B2%20GitLab/"/>
      <url>/2019/11/22/028.DockerCompose-%E9%83%A8%E7%BD%B2%20GitLab/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-部署-GitLab"><a href="#Docker-Compose-部署-GitLab" class="headerlink" title="Docker Compose 部署 GitLab"></a>Docker Compose 部署 GitLab</h1><h2 id="什么是-GitLab"><a href="#什么是-GitLab" class="headerlink" title="什么是 GitLab"></a>什么是 GitLab</h2><p>GitLab 是利用 Ruby on Rails 一个开源的版本管理系统，实现一个自托管的 Git 项目仓库，可通过 Web 界面进行访问公开的或者私人项目。它拥有与 Github 类似的功能，能够浏览源代码，管理缺陷和注释。可以管理团队对仓库的访问，它非常易于浏览提交过的版本并提供一个文件历史库。团队成员可以利用内置的简单聊天程序 (Wall) 进行交流。它还提供一个代码片段收集功能可以轻松实现代码复用，便于日后有需要的时候进行查找。</p><h2 id="部署-GitLab"><a href="#部署-GitLab" class="headerlink" title="部署 GitLab"></a>部署 GitLab</h2><p>我们使用 Docker 来安装和运行 GitLab 中文版，<code>docker-compose.yml</code> 配置如下：</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>    <span class="token key atrule">web</span><span class="token punctuation">:</span>      <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">'twang2218/gitlab-ce-zh'</span>      <span class="token key atrule">restart</span><span class="token punctuation">:</span> always      <span class="token key atrule">hostname</span><span class="token punctuation">:</span> <span class="token string">'192.168.75.145'</span>      <span class="token key atrule">environment</span><span class="token punctuation">:</span>        <span class="token key atrule">TZ</span><span class="token punctuation">:</span> <span class="token string">'Asia/Shanghai'</span>        <span class="token key atrule">GITLAB_OMNIBUS_CONFIG</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">          external_url 'http://192.168.75.145'          gitlab_rails['gitlab_shell_ssh_port'] = 2222          unicorn['port'] = 8888          nginx['listen_port'] = 80</span>      <span class="token key atrule">ports</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token string">'80:80'</span>        <span class="token punctuation">-</span> <span class="token string">'443:443'</span>        <span class="token punctuation">-</span> <span class="token string">'2222:22'</span>      <span class="token key atrule">volumes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> ./config<span class="token punctuation">:</span>/etc/gitlab        <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/opt/gitlab        <span class="token punctuation">-</span> ./logs<span class="token punctuation">:</span>/var/log/gitlab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置-GitLab"><a href="#配置-GitLab" class="headerlink" title="配置 GitLab"></a>配置 GitLab</h2><ul><li>访问地址：<a href="http://ip:8080" target="_blank" rel="noopener">http://ip:8080</a></li></ul><p><img src="/DockerCompose/Lusifer1511797825.png" alt></p><ul><li>设置管理员初始密码，这里的密码最好是 <strong>字母 + 数字组合，并且大于等于 8 位</strong></li><li>配置完成后登录，管理员账号是 <strong>root</strong></li></ul><p><img src="/DockerCompose/Lusifer1511798229.png" alt></p><blockquote><p><strong>注意：</strong> 如果服务器配置较低，启动运行可能需要较长时间，请耐心等待</p></blockquote><h2 id="设置-GitLab"><a href="#设置-GitLab" class="headerlink" title="设置 GitLab"></a>设置 GitLab</h2><p>第一次使用时可以做一些初始化设置，点击 <strong>管理区域</strong> -&gt; <strong>设置</strong></p><p><img src="/DockerCompose/Lusifer1511798480.png" alt></p><ul><li>关闭头像功能，由于 Gravatar 头像为网络头像，在网络情况不理想时可能导致访问时卡顿</li></ul><p><img src="/DockerCompose/Lusifer1511798637.png" alt></p><ul><li>由于是内部代码托管服务器，可以直接关闭注册功能，由管理员统一创建用户即可</li></ul><p><img src="/DockerCompose/Lusifer1511798763.png" alt></p><h2 id="账户管理"><a href="#账户管理" class="headerlink" title="账户管理"></a>账户管理</h2><p>使用时请不要直接通过 root 用户操作，需要先创建用户，然后通过创建的用户操作，如果你是管理员还需要为其他开发人员分配账户</p><ul><li>创建账户，点击 <strong>管理区域</strong> -&gt; <strong>新建用户</strong></li></ul><p><img src="/DockerCompose/Lusifer1511799413.png" alt></p><ul><li>设置账户信息，同时你可以将自己设置为管理员</li></ul><p><img src="/DockerCompose/Lusifer1511799508.png" alt></p><ul><li>修改用户密码，由于我们创建时并没有配置邮箱，所以还需要重新编辑用户信息并手动设置密码</li></ul><p><img src="/DockerCompose/Lusifer1511799858.png" alt></p><p><img src="/DockerCompose/Lusifer1511799897.png" alt></p><ul><li>退出并使用新账户登录</li></ul><p><img src="/DockerCompose/Lusifer1511800022.png" alt></p><blockquote><p><strong>注意：</strong> 创建完账户，第一次登录时还会提示你修改登录密码</p></blockquote><h2 id="项目管理"><a href="#项目管理" class="headerlink" title="项目管理"></a>项目管理</h2><ul><li>点击 <strong>+</strong> 号 -&gt; <strong>新建项目</strong></li></ul><p><img src="/DockerCompose/Lusifer1511800438.png" alt></p><ul><li>输入项目名称及描述信息，设置可见等级为私有，这样别人就看不见你的项目</li></ul><p><img src="/DockerCompose/Lusifer1511800627.png" alt></p><ul><li>我们选择通过增加一个 README 的方式来初始化项目</li></ul><p><img src="/DockerCompose/Lusifer1511800836.png" alt></p><ul><li>直接提交修改即可</li></ul><p><img src="/DockerCompose/Lusifer1511800904.png" alt></p><h2 id="使用-SSH-方式拉取和推送"><a href="#使用-SSH-方式拉取和推送" class="headerlink" title="使用 SSH 方式拉取和推送"></a>使用 SSH 方式拉取和推送</h2><h3 id="生成-SSH-KEY"><a href="#生成-SSH-KEY" class="headerlink" title="生成 SSH KEY"></a>生成 SSH KEY</h3><ul><li>使用 ssh-keygen 工具生成，位置在 Git 安装目录下，我的是 <code>C:\Program Files\Git\usr\bin</code>，输入命令：</li></ul><pre class="line-numbers language-bash"><code class="language-bash">ssh-keygen -t rsa -C <span class="token string">"your_email@example.com"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>执行成功后的效果：</li></ul><pre><code>Microsoft Windows [版本 10.0.14393](c) 2016 Microsoft Corporation。保留所有权利。C:\Program Files\Git\usr\bin&gt;ssh-keygen -t rsa -C &quot;topsale@vip.qq.com&quot;Generating public/private rsa key pair.Enter file in which to save the key (/c/Users/Lusifer/.ssh/id_rsa):Enter passphrase (empty for no passphrase):Enter same passphrase again:Your identification has been saved in /c/Users/Lusifer/.ssh/id_rsa.Your public key has been saved in /c/Users/Lusifer/.ssh/id_rsa.pub.The key fingerprint is:SHA256:cVesJKa5VnQNihQOTotXUAIyphsqjb7Z9lqOji2704E topsale@vip.qq.comThe key&#39;s randomart image is:+---[RSA 2048]----+|  + ..=o=.  .+.  || o o + B .+.o.o  ||o   . + +=o+..   ||.=   .  oo...    ||= o     So       ||oE .    o        || .. .. .         || o*o+            || *B*oo           |+----[SHA256]-----+C:\Program Files\Git\usr\bin&gt;</code></pre><h3 id="复制-SSH-KEY-信息到-GitLab"><a href="#复制-SSH-KEY-信息到-GitLab" class="headerlink" title="复制 SSH-KEY 信息到 GitLab"></a>复制 SSH-KEY 信息到 GitLab</h3><ul><li>密钥位置在：<code>C:\Users\你的用户名\.ssh</code> 目录下，找到 <code>id_rsa.pub</code> 并使用编辑器打开，如：</li></ul><p><img src="/DockerCompose/Lusifer1511801618.png" alt></p><ul><li>登录 GitLab，点击“用户头像”–&gt;“设置”–&gt;“SSH 密钥”</li></ul><p><img src="/DockerCompose/Lusifer1511801730.png" alt></p><ul><li>成功增加密钥后的效果</li></ul><p><img src="/DockerCompose/Lusifer1511801884.png" alt></p><h2 id="使用-TortoiseGit"><a href="#使用-TortoiseGit" class="headerlink" title="使用 TortoiseGit"></a>使用 TortoiseGit</h2><h3 id="克隆项目"><a href="#克隆项目" class="headerlink" title="克隆项目"></a>克隆项目</h3><ul><li>新建一个存放代码仓库的本地文件夹</li><li>在文件夹空白处按右键</li><li>选择 <strong>Git 克隆…</strong></li></ul><p><img src="/DockerCompose/Lusifer1511802101.png" alt></p><ul><li>复制项目地址到 URL</li></ul><p><img src="/DockerCompose/Lusifer1511802242.png" alt></p><ul><li>如果弹出连接信息请选择是</li></ul><p><img src="/DockerCompose/Lusifer1511802354.png" alt></p><ul><li>成功克隆项目到本地</li></ul><p><img src="/DockerCompose/Lusifer1511802402.png" alt></p><h3 id="推送项目"><a href="#推送项目" class="headerlink" title="推送项目"></a>推送项目</h3><ul><li>创建或修改文件（这里的文件为所有文件，包括：代码、图片等）</li><li>我们以创建 <code>.gitignore</code> 过滤配置文件为例，该文件的主要作用为过滤不需要上传的文件，比如：IDE 生成的工程文件、编译后的 class 文件等</li><li>在工程目录下，新建 <code>.gitignore</code> 文件，并填入如下配置</li></ul><pre><code>target/!.mvn/wrapper/maven-wrapper.jar## STS ##.apt_generated.classpath.factorypath.project.settings.springBeans## IntelliJ IDEA ##.idea*.iws*.iml*.ipr## JRebel ##rebel.xml## MAC ##.DS_Store## Other ##logs/temp/</code></pre><ul><li>右键呼出菜单，选择 <strong>提交 Master…</strong></li></ul><p><img src="/DockerCompose/Lusifer1511802947.png" alt></p><ul><li>点击 <strong>全部</strong> 并填入 <strong>日志信息</strong></li></ul><p><img src="/DockerCompose/Lusifer1511803046.png" alt></p><ul><li>点击 <strong>提交并推送</strong></li></ul><p><img src="/DockerCompose/Lusifer1511803174.png" alt></p><ul><li>成功后的效果图</li></ul><p><img src="/DockerCompose/Lusifer1511803209.png" alt></p><h2 id="查看-GitLab-确认提交成功"><a href="#查看-GitLab-确认提交成功" class="headerlink" title="查看 GitLab 确认提交成功"></a>查看 GitLab 确认提交成功</h2><p><img src="/DockerCompose/Lusifer1511803280.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 部署应用程序</title>
      <link href="/2019/11/22/027.DockerCompose-%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/11/22/027.DockerCompose-%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-部署应用程序"><a href="#Docker-Compose-部署应用程序" class="headerlink" title="Docker Compose 部署应用程序"></a>Docker Compose 部署应用程序</h1><h2 id="部署-Tomcat"><a href="#部署-Tomcat" class="headerlink" title="部署 Tomcat"></a>部署 Tomcat</h2><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">tomcat</span><span class="token punctuation">:</span>    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">image</span><span class="token punctuation">:</span> tomcat    <span class="token key atrule">container_name</span><span class="token punctuation">:</span> tomcat    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./webapps<span class="token punctuation">:</span>/usr/local/tomcat/webapps    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">TZ</span><span class="token punctuation">:</span> Asia/Shanghai<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署-MySQL"><a href="#部署-MySQL" class="headerlink" title="部署 MySQL"></a>部署 MySQL</h2><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3.1'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">db</span><span class="token punctuation">:</span>    <span class="token comment" spellcheck="true"># 目前 latest 版本为 MySQL8.x</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> mysql    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">environment</span><span class="token punctuation">:</span>      <span class="token key atrule">MYSQL_ROOT_PASSWORD</span><span class="token punctuation">:</span> <span class="token number">123456</span>    <span class="token key atrule">command</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span><span class="token punctuation">-</span>default<span class="token punctuation">-</span>authentication<span class="token punctuation">-</span>plugin=mysql_native_password      <span class="token punctuation">-</span><span class="token punctuation">-</span>character<span class="token punctuation">-</span>set<span class="token punctuation">-</span>server=utf8mb4      <span class="token punctuation">-</span><span class="token punctuation">-</span>collation<span class="token punctuation">-</span>server=utf8mb4_general_ci      <span class="token punctuation">-</span><span class="token punctuation">-</span>explicit_defaults_for_timestamp=true      <span class="token punctuation">-</span><span class="token punctuation">-</span>lower_case_table_names=1    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 3306<span class="token punctuation">:</span><span class="token number">3306</span>    <span class="token key atrule">volumes</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> ./data<span class="token punctuation">:</span>/var/lib/mysql  <span class="token comment" spellcheck="true"># MySQL 的 Web 客户端</span>  <span class="token key atrule">adminer</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> adminer    <span class="token key atrule">restart</span><span class="token punctuation">:</span> always    <span class="token key atrule">ports</span><span class="token punctuation">:</span>      <span class="token punctuation">-</span> 8080<span class="token punctuation">:</span><span class="token number">8080</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="部署应用程序"><a href="#部署应用程序" class="headerlink" title="部署应用程序"></a>部署应用程序</h2><p>请参考本节视频</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 使用</title>
      <link href="/2019/11/22/026.DockerCompose-%E4%BD%BF%E7%94%A8/"/>
      <url>/2019/11/22/026.DockerCompose-%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-使用"><a href="#Docker-Compose-使用" class="headerlink" title="Docker Compose 使用"></a>Docker Compose 使用</h1><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><p>首先介绍几个术语。</p><ul><li>服务 (Service)：一个应用容器，实际上可以运行多个相同镜像的实例。</li><li>项目 (Project)：由一组关联的应用容器组成的一个完整业务单元。</li></ul><p>可见，一个项目可以由多个服务（容器）关联而成，Compose 面向项目进行管理。</p><h2 id="场景"><a href="#场景" class="headerlink" title="场景"></a>场景</h2><p>最常见的项目是 Web 网站，该项目应该包含 Web 应用和缓存。下面我们用 Python 来建立一个能够记录页面访问次数的 Web 网站。</p><h3 id="Python-应用"><a href="#Python-应用" class="headerlink" title="Python 应用"></a>Python 应用</h3><p>新建文件夹，在该目录中编写 <code>app.py</code> 文件</p><pre class="line-numbers language-python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token keyword">from</span> redis <span class="token keyword">import</span> Redisapp <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span>redis <span class="token operator">=</span> Redis<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">'redis'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">6379</span><span class="token punctuation">)</span>@app<span class="token punctuation">.</span>route<span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    count <span class="token operator">=</span> redis<span class="token punctuation">.</span>incr<span class="token punctuation">(</span><span class="token string">'hits'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">'Hello World! 该页面已被访问 {} 次。\n'</span><span class="token punctuation">.</span>format<span class="token punctuation">(</span>count<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h3><p>编写 Dockerfile 文件，内容为</p><pre class="line-numbers language-docker"><code class="language-docker"><span class="token keyword">FROM</span> python<span class="token punctuation">:</span>3.6<span class="token punctuation">-</span>alpine<span class="token keyword">ADD</span> . /code<span class="token keyword">WORKDIR</span> /code<span class="token keyword">RUN</span> pip install redis flask<span class="token keyword">CMD</span> <span class="token punctuation">[</span><span class="token string">"python"</span><span class="token punctuation">,</span> <span class="token string">"app.py"</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Docker-Compose-模板"><a href="#Docker-Compose-模板" class="headerlink" title="Docker Compose 模板"></a>Docker Compose 模板</h3><p>编写 <code>docker-compose.yml</code> 文件，这个是 Compose 使用的主模板文件。</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token string">'3'</span><span class="token key atrule">services</span><span class="token punctuation">:</span>  <span class="token key atrule">web</span><span class="token punctuation">:</span>    <span class="token key atrule">build</span><span class="token punctuation">:</span> .    <span class="token key atrule">ports</span><span class="token punctuation">:</span>     <span class="token punctuation">-</span> <span class="token string">"5000:5000"</span>  <span class="token key atrule">redis</span><span class="token punctuation">:</span>    <span class="token key atrule">image</span><span class="token punctuation">:</span> <span class="token string">"redis:alpine"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="运行-Compose-项目"><a href="#运行-Compose-项目" class="headerlink" title="运行 Compose 项目"></a>运行 Compose 项目</h3><pre class="line-numbers language-bash"><code class="language-bash">docker-compose up -d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时访问本地 <code>5000</code> 端口，每次刷新页面，计数就会加 1。</p><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h3 id="YAML-配置文件语言"><a href="#YAML-配置文件语言" class="headerlink" title="YAML 配置文件语言"></a>YAML 配置文件语言</h3><p>YAML 是专门用来写配置文件的语言，非常简洁和强大，远比 JSON 格式方便。YAML 语言的设计目标，就是方便人类读写。它实质上是一种通用的数据串行化格式。它的基本语法规则如下：</p><ul><li><strong>大小写敏感</strong></li><li><strong>使用缩进表示层级关系</strong></li><li><strong>缩进时不允许使用 TAB 键，只允许使用空格。</strong></li><li><strong>缩进的空格数目不重要，只要相同层级的元素左侧对齐即可</strong></li></ul><p><code>#</code> 表示注释，从这个字符一直到行尾，都会被解析器忽略。YAML 支持的数据结构有三种：</p><ul><li><strong>对象：</strong> 键值对的集合，又称为映射（mapping）/ 哈希（hashes） / 字典（dictionary）</li><li><strong>数组：</strong> 一组按次序排列的值，又称为序列（sequence） / 列表（list）</li><li><strong>纯量（scalars）：</strong> 单个的、不可再分的值</li></ul><h4 id="YAML-对象"><a href="#YAML-对象" class="headerlink" title="YAML 对象"></a>YAML 对象</h4><p>对象的一组键值对，使用冒号结构表示</p><pre><code>animal: pets</code></pre><h4 id="YAML-数组"><a href="#YAML-数组" class="headerlink" title="YAML 数组"></a>YAML 数组</h4><p>一组连词线开头的行，构成一个数组</p><pre><code>- Cat- Dog- Goldfish</code></pre><p>数据结构的子成员是一个数组，则可以在该项下面缩进一个空格</p><pre><code>- Array - Cat - Dog - Goldfish</code></pre><h4 id="YAML-复合结构"><a href="#YAML-复合结构" class="headerlink" title="YAML 复合结构"></a>YAML 复合结构</h4><p>对象和数组可以结合使用，形成复合结构</p><pre><code>languages: - Ruby - Perl - Python websites: YAML: yaml.org  Ruby: ruby-lang.org  Python: python.org  Perl: use.perl.org </code></pre><h4 id="YAML-纯量"><a href="#YAML-纯量" class="headerlink" title="YAML 纯量"></a>YAML 纯量</h4><p>纯量是最基本的、不可再分的值。以下数据类型都属于 JavaScript 的纯量</p><ul><li>字符串</li><li>布尔值</li><li>整数</li><li>浮点数</li><li>Null</li><li>时间</li><li>日期</li></ul><h3 id="修改-IP-和-DNS"><a href="#修改-IP-和-DNS" class="headerlink" title="修改 IP 和 DNS"></a>修改 IP 和 DNS</h3><p>课程演示会采用多虚拟机模拟分布式场景，为防止 IP 冲突，无法联网等问题，需要预先设置好主机名、IP、DNS 配置</p><h4 id="修改主机名"><a href="#修改主机名" class="headerlink" title="修改主机名"></a>修改主机名</h4><ul><li>修改 cloud.cfg 防止重启后主机名还原</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">vi</span> /etc/cloud/cloud.cfg<span class="token comment" spellcheck="true"># 该配置默认为 false，修改为 true 即可</span>preserve_hostname: <span class="token boolean">true</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>修改主机名</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 修改主机名</span>hostnamectl set-hostname deployment<span class="token comment" spellcheck="true"># 配置 hosts</span><span class="token function">cat</span> <span class="token operator">>></span> /etc/hosts <span class="token operator">&lt;&lt;</span> <span class="token string">EOF192.168.141.130 deploymentEOF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="修改-IP"><a href="#修改-IP" class="headerlink" title="修改 IP"></a>修改 IP</h4><p>编辑 <code>vi /etc/netplan/50-cloud-init.yaml</code> 配置文件，修改内容如下</p><pre class="line-numbers language-yaml"><code class="language-yaml"><span class="token key atrule">network</span><span class="token punctuation">:</span>    <span class="token key atrule">ethernets</span><span class="token punctuation">:</span>        <span class="token key atrule">ens33</span><span class="token punctuation">:</span>          <span class="token key atrule">addresses</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>192.168.141.130/24<span class="token punctuation">]</span>          <span class="token key atrule">gateway4</span><span class="token punctuation">:</span> 192.168.141.2          <span class="token key atrule">nameservers</span><span class="token punctuation">:</span>            <span class="token key atrule">addresses</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>192.168.141.2<span class="token punctuation">]</span>    <span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">2</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>使用 <code>netplan apply</code> 命令让配置生效</p><h4 id="修改-DNS"><a href="#修改-DNS" class="headerlink" title="修改 DNS"></a>修改 DNS</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 取消 DNS 行注释，并增加 DNS 配置如：114.114.114.114，修改后重启下计算机</span><span class="token function">vi</span> /etc/systemd/resolved.conf<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker Compose 简介</title>
      <link href="/2019/11/22/025.DockerCompose-%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/22/025.DockerCompose-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-Compose-简介"><a href="#Docker-Compose-简介" class="headerlink" title="Docker Compose 简介"></a>Docker Compose 简介</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Compose 项目是 Docker 官方的开源项目，负责实现对 Docker 容器集群的快速编排。从功能上看，跟 OpenStack 中的 Heat 十分类似。</p><p>其代码目前在 <a href="https://github.com/docker/compose" target="_blank" rel="noopener">https://github.com/docker/compose</a> 上开源。</p><p>Compose 定位是 「定义和运行多个 Docker 容器的应用（Defining and running multi-container Docker applications）」，其前身是开源项目 Fig。</p><p>我们知道使用一个 Dockerfile 模板文件，可以让用户很方便的定义一个单独的应用容器。然而，在日常工作中，经常会碰到需要多个容器相互配合来完成某项任务的情况。例如要实现一个 Web 项目，除了 Web 服务容器本身，往往还需要再加上后端的数据库服务容器，甚至还包括负载均衡容器等。</p><p>Compose 恰好满足了这样的需求。它允许用户通过一个单独的 <strong>docker-compose.yml</strong> 模板文件（YAML 格式）来定义一组相关联的应用容器为一个项目（Project）。Compose 中有两个重要的概念：</p><ul><li>服务 (Service)：一个应用的容器，实际上可以包括若干运行相同镜像的容器实例。</li><li>项目 (Project)：由一组关联的应用容器组成的一个完整业务单元，在 docker-compose.yml 文件中定义。</li></ul><p>Compose 的默认管理对象是项目，通过子命令对项目中的一组容器进行便捷地生命周期管理。Compose 项目由 Python 编写，实现上调用了 Docker 服务提供的 API 来对容器进行管理。因此，只要所操作的平台支持 Docker API，就可以在其上利用 Compose 来进行编排管理。</p><h2 id="安装-Docker-Compose"><a href="#安装-Docker-Compose" class="headerlink" title="安装 Docker Compose"></a>安装 Docker Compose</h2><p>Compose 支持 Linux、macOS、Windows 10 三大平台。在 Linux 上的也安装十分简单，从 <a href="https://github.com/docker/compose/releases" target="_blank" rel="noopener">官方 GitHub Release</a> 处直接下载编译好的二进制文件即可。</p><pre class="line-numbers language-bash"><code class="language-bash">curl -L https://github.com/docker/compose/releases/download/1.24.0/docker-compose-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -s<span class="token variable">`</span></span>-<span class="token variable"><span class="token variable">`</span><span class="token function">uname</span> -m<span class="token variable">`</span></span> <span class="token operator">></span> /usr/local/bin/docker-compose<span class="token function">chmod</span> +x /usr/local/bin/docker-compose<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h2><pre class="line-numbers language-bash"><code class="language-bash">docker-compose version<span class="token comment" spellcheck="true"># 输出如下</span>docker-compose version 1.24.0, build 0aa59064docker-py version: 3.7.2CPython version: 3.6.8OpenSSL version: OpenSSL 1.1.0j  20 Nov 2018<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile 指令</title>
      <link href="/2019/11/22/024.Dockerfile-%E6%8C%87%E4%BB%A4/"/>
      <url>/2019/11/22/024.Dockerfile-%E6%8C%87%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="Dockerfile-指令"><a href="#Dockerfile-指令" class="headerlink" title="Dockerfile 指令"></a>Dockerfile 指令</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>我们已经介绍了 <code>FROM</code>，<code>RUN</code>，还提及了 <code>COPY</code>, <code>ADD</code>，其实 Dockerfile 功能很强大，它提供了十多个指令。下面我们继续讲解其他的指令。</p><h2 id="COPY"><a href="#COPY" class="headerlink" title="COPY"></a>COPY</h2><p>格式：</p><ul><li><code>COPY &lt;源路径&gt;... &lt;目标路径&gt;</code></li><li><code>COPY [&quot;&lt;源路径1&gt;&quot;,... &quot;&lt;目标路径&gt;&quot;]</code></li></ul><p>和 <code>RUN</code> 指令一样，也有两种格式，一种类似于命令行，一种类似于函数调用。</p><p><code>COPY</code> 指令将从构建上下文目录中 <code>&lt;源路径&gt;</code> 的文件/目录复制到新的一层的镜像内的 <code>&lt;目标路径&gt;</code> 位置。比如：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">COPY package.json /usr/src/app/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>&lt;源路径&gt;</code> 可以是多个，甚至可以是通配符，其通配符规则要满足 Go 的 <a href="https://golang.org/pkg/path/filepath/#Match" target="_blank" rel="noopener"><code>filepath.Match</code></a> 规则，如：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">COPY hom* /mydir/COPY hom?.txt /mydir/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><code>&lt;目标路径&gt;</code> 可以是容器内的绝对路径，也可以是相对于工作目录的相对路径（工作目录可以用 <code>WORKDIR</code> 指令来指定）。目标路径不需要事先创建，如果目录不存在会在复制文件前先行创建缺失目录。</p><p>此外，还需要注意一点，使用 <code>COPY</code> 指令，源文件的各种元数据都会保留。比如读、写、执行权限、文件变更时间等。这个特性对于镜像定制很有用。特别是构建相关文件都在使用 Git 进行管理的时候。</p><h2 id="ADD"><a href="#ADD" class="headerlink" title="ADD"></a>ADD</h2><p><code>ADD</code> 指令和 <code>COPY</code> 的格式和性质基本一致。但是在 <code>COPY</code> 基础上增加了一些功能。</p><p>比如 <code>&lt;源路径&gt;</code> 可以是一个 <code>URL</code>，这种情况下，Docker 引擎会试图去下载这个链接的文件放到 <code>&lt;目标路径&gt;</code> 去。下载后的文件权限自动设置为 <code>600</code>，如果这并不是想要的权限，那么还需要增加额外的一层 <code>RUN</code> 进行权限调整，另外，如果下载的是个压缩包，需要解压缩，也一样还需要额外的一层 <code>RUN</code> 指令进行解压缩。所以不如直接使用 <code>RUN</code> 指令，然后使用 <code>wget</code> 或者 <code>curl</code> 工具下载，处理权限、解压缩、然后清理无用文件更合理。因此，这个功能其实并不实用，而且不推荐使用。</p><p>如果 <code>&lt;源路径&gt;</code> 为一个 <code>tar</code> 压缩文件的话，压缩格式为 <code>gzip</code>, <code>bzip2</code> 以及 <code>xz</code> 的情况下，<code>ADD</code> 指令将会自动解压缩这个压缩文件到 <code>&lt;目标路径&gt;</code> 去。</p><p>在某些情况下，这个自动解压缩的功能非常有用，比如官方镜像 <code>ubuntu</code> 中：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">FROM scratchADD ubuntu-xenial-core-cloudimg-amd64-root.tar.gz /<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>但在某些情况下，如果我们真的是希望复制个压缩文件进去，而不解压缩，这时就不可以使用 <code>ADD</code> 命令了。</p><p>在 Docker 官方的 <code>Dockerfile 最佳实践文档</code> 中要求，尽可能的使用 <code>COPY</code>，因为 <code>COPY</code> 的语义很明确，就是复制文件而已，而 <code>ADD</code> 则包含了更复杂的功能，其行为也不一定很清晰。最适合使用 <code>ADD</code> 的场合，就是所提及的需要自动解压缩的场合。</p><p>另外需要注意的是，<code>ADD</code> 指令会令镜像构建缓存失效，从而可能会令镜像构建变得比较缓慢。</p><p>因此在 <code>COPY</code> 和 <code>ADD</code> 指令中选择的时候，可以遵循这样的原则，所有的文件复制均使用 <code>COPY</code> 指令，仅在需要自动解压缩的场合使用 <code>ADD</code>。</p><h2 id="CMD"><a href="#CMD" class="headerlink" title="CMD"></a>CMD</h2><p><code>CMD</code> 指令的格式和 <code>RUN</code> 相似，也是两种格式：</p><ul><li><code>shell</code> 格式：<code>CMD &lt;命令&gt;</code></li><li><code>exec</code> 格式：<code>CMD [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;...]</code></li><li>参数列表格式：<code>CMD [&quot;参数1&quot;, &quot;参数2&quot;...]</code>。在指定了 <code>ENTRYPOINT</code> 指令后，用 <code>CMD</code> 指定具体的参数。</li></ul><p>之前介绍容器的时候曾经说过，Docker 不是虚拟机，容器就是进程。既然是进程，那么在启动容器的时候，需要指定所运行的程序及参数。<code>CMD</code> 指令就是用于指定默认的容器主进程的启动命令的。</p><p>在运行时可以指定新的命令来替代镜像设置中的这个默认命令，比如，<code>ubuntu</code> 镜像默认的 <code>CMD</code> 是 <code>/bin/bash</code>，如果我们直接 <code>docker run -it ubuntu</code> 的话，会直接进入 <code>bash</code>。我们也可以在运行时指定运行别的命令，如 <code>docker run -it ubuntu cat /etc/os-release</code>。这就是用 <code>cat /etc/os-release</code> 命令替换了默认的 <code>/bin/bash</code> 命令了，输出了系统版本信息。</p><p>在指令格式上，一般推荐使用 <code>exec</code> 格式，这类格式在解析时会被解析为 JSON 数组，因此一定要使用双引号 <code>&quot;</code>，而不要使用单引号。</p><p>如果使用 <code>shell</code> 格式的话，实际的命令会被包装为 <code>sh -c</code> 的参数的形式进行执行。比如：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">CMD echo $HOME<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在实际执行中，会将其变更为：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">CMD [ "sh", "-c", "echo $HOME" ]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这就是为什么我们可以使用环境变量的原因，因为这些环境变量会被 shell 进行解析处理。</p><p>提到 <code>CMD</code> 就不得不提容器中应用在前台执行和后台执行的问题。这是初学者常出现的一个混淆。</p><p>Docker 不是虚拟机，容器中的应用都应该以前台执行，而不是像虚拟机、物理机里面那样，用 upstart/systemd 去启动后台服务，容器内没有后台服务的概念。</p><p>一些初学者将 <code>CMD</code> 写为：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">CMD service nginx start<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后发现容器执行后就立即退出了。甚至在容器内去使用 <code>systemctl</code> 命令结果却发现根本执行不了。这就是因为没有搞明白前台、后台的概念，没有区分容器和虚拟机的差异，依旧在以传统虚拟机的角度去理解容器。</p><p>对于容器而言，其启动程序就是容器应用进程，容器就是为了主进程而存在的，主进程退出，容器就失去了存在的意义，从而退出，其它辅助进程不是它需要关心的东西。</p><p>而使用 <code>service nginx start</code> 命令，则是希望 upstart 来以后台守护进程形式启动 <code>nginx</code> 服务。而刚才说了 <code>CMD service nginx start</code> 会被理解为 <code>CMD [ &quot;sh&quot;, &quot;-c&quot;, &quot;service nginx start&quot;]</code>，因此主进程实际上是 <code>sh</code>。那么当 <code>service nginx start</code> 命令结束后，<code>sh</code> 也就结束了，<code>sh</code> 作为主进程退出了，自然就会令容器退出。</p><p>正确的做法是直接执行 <code>nginx</code> 可执行文件，并且要求以前台形式运行。比如：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">CMD ["nginx", "-g", "daemon off;"]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="ENTRYPOINT"><a href="#ENTRYPOINT" class="headerlink" title="ENTRYPOINT"></a>ENTRYPOINT</h2><p><code>ENTRYPOINT</code> 的格式和 <code>RUN</code> 指令格式一样，分为 <code>exec</code> 格式和 <code>shell</code> 格式。</p><p><code>ENTRYPOINT</code> 的目的和 <code>CMD</code> 一样，都是在指定容器启动程序及参数。<code>ENTRYPOINT</code> 在运行时也可以替代，不过比 <code>CMD</code> 要略显繁琐，需要通过 <code>docker run</code> 的参数 <code>--entrypoint</code> 来指定。</p><p>当指定了 <code>ENTRYPOINT</code> 后，<code>CMD</code> 的含义就发生了改变，不再是直接的运行其命令，而是将 <code>CMD</code> 的内容作为参数传给 <code>ENTRYPOINT</code> 指令，换句话说实际执行时，将变为：</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>ENTRYPOINT<span class="token operator">></span> <span class="token string">"&lt;CMD>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那么有了 <code>CMD</code> 后，为什么还要有 <code>ENTRYPOINT</code> 呢？这种 <code>&lt;ENTRYPOINT&gt; &quot;&lt;CMD&gt;&quot;</code> 有什么好处么？让我们来看几个场景。</p><h3 id="场景一：让镜像变成像命令一样使用"><a href="#场景一：让镜像变成像命令一样使用" class="headerlink" title="场景一：让镜像变成像命令一样使用"></a>场景一：让镜像变成像命令一样使用</h3><p>假设我们需要一个得知自己当前公网 IP 的镜像，那么可以先用 <code>CMD</code> 来实现：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">FROM ubuntu:16.04RUN apt-get update \    && apt-get install -y curl \    && rm -rf /var/lib/apt/lists/*CMD [ "curl", "-s", "http://ip.cn" ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>假如我们使用 <code>docker build -t myip .</code> 来构建镜像的话，如果我们需要查询当前公网 IP，只需要执行：</p><pre class="line-numbers language-bash"><code class="language-bash">docker run myip当前 IP：61.148.226.66 来自：北京市 联通<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>嗯，这么看起来好像可以直接把镜像当做命令使用了，不过命令总有参数，如果我们希望加参数呢？比如从上面的 <code>CMD</code> 中可以看到实质的命令是 <code>curl</code>，那么如果我们希望显示 HTTP 头信息，就需要加上 <code>-i</code> 参数。那么我们可以直接加 <code>-i</code> 参数给 <code>docker run myip</code> 么？</p><pre class="line-numbers language-bash"><code class="language-bash">docker run myip -idocker: Error response from daemon: invalid header field value <span class="token string">"oci runtime error: container_linux.go:247: starting container process caused \"exec: \\\"-i\\\": executable file not found in <span class="token variable">$PATH</span>\"\n"</span><span class="token keyword">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>我们可以看到可执行文件找不到的报错，<code>executable file not found</code>。之前我们说过，跟在镜像名后面的是 <code>command</code>，运行时会替换 <code>CMD</code> 的默认值。因此这里的 <code>-i</code> 替换了原来的 <code>CMD</code>，而不是添加在原来的 <code>curl -s http://ip.cn</code> 后面。而 <code>-i</code> 根本不是命令，所以自然找不到。</p><p>那么如果我们希望加入 <code>-i</code> 这参数，我们就必须重新完整的输入这个命令：</p><pre class="line-numbers language-bash"><code class="language-bash">docker run myip curl -s http://ip.cn -i<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这显然不是很好的解决方案，而使用 <code>ENTRYPOINT</code> 就可以解决这个问题。现在我们重新用 <code>ENTRYPOINT</code> 来实现这个镜像：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">FROM ubuntu:16.04RUN apt-get update \    && apt-get install -y curl \    && rm -rf /var/lib/apt/lists/*ENTRYPOINT [ "curl", "-s", "http://ip.cn" ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这次我们再来尝试直接使用 <code>docker run myip -i</code>：</p><pre class="line-numbers language-bash"><code class="language-bash">docker run myip当前 IP：61.148.226.66 来自：北京市 联通docker run myip -iHTTP/1.1 200 OKServer: nginx/1.8.0Date: Tue, 22 Nov 2016 05:12:40 GMTContent-Type: text/html<span class="token punctuation">;</span> charset<span class="token operator">=</span>UTF-8Vary: Accept-EncodingX-Powered-By: PHP/5.6.24-1~dotdeb+7.1X-Cache: MISS from cache-2X-Cache-Lookup: MISS from cache-2:80X-Cache: MISS from proxy-2_6Transfer-Encoding: chunkedVia: 1.1 cache-2:80, 1.1 proxy-2_6:8006Connection: keep-alive当前 IP：61.148.226.66 来自：北京市 联通<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到，这次成功了。这是因为当存在 <code>ENTRYPOINT</code> 后，<code>CMD</code> 的内容将会作为参数传给 <code>ENTRYPOINT</code>，而这里 <code>-i</code> 就是新的 <code>CMD</code>，因此会作为参数传给 <code>curl</code>，从而达到了我们预期的效果。</p><h3 id="场景二：应用运行前的准备工作"><a href="#场景二：应用运行前的准备工作" class="headerlink" title="场景二：应用运行前的准备工作"></a>场景二：应用运行前的准备工作</h3><p>启动容器就是启动主进程，但有些时候，启动主进程前，需要一些准备工作。</p><p>比如 <code>mysql</code> 类的数据库，可能需要一些数据库配置、初始化的工作，这些工作要在最终的 mysql 服务器运行之前解决。</p><p>此外，可能希望避免使用 <code>root</code> 用户去启动服务，从而提高安全性，而在启动服务前还需要以 <code>root</code> 身份执行一些必要的准备工作，最后切换到服务用户身份启动服务。或者除了服务外，其它命令依旧可以使用 <code>root</code> 身份执行，方便调试等。</p><p>这些准备工作是和容器 <code>CMD</code> 无关的，无论 <code>CMD</code> 为什么，都需要事先进行一个预处理的工作。这种情况下，可以写一个脚本，然后放入 <code>ENTRYPOINT</code> 中去执行，而这个脚本会将接到的参数（也就是 <code>&lt;CMD&gt;</code>）作为命令，在脚本最后执行。比如官方镜像 <code>redis</code> 中就是这么做的：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">FROM alpine:3.4RUN addgroup -S redis && adduser -S -G redis redisENTRYPOINT ["docker-entrypoint.sh"]EXPOSE 6379CMD [ "redis-server" ]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到其中为了 redis 服务创建了 redis 用户，并在最后指定了 <code>ENTRYPOINT</code> 为 <code>docker-entrypoint.sh</code> 脚本。</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token shebang important">#!/bin/sh</span><span class="token comment" spellcheck="true"># allow the container to be started with `--user`</span><span class="token keyword">if</span> <span class="token punctuation">[</span> <span class="token string">"<span class="token variable">$1</span>"</span> <span class="token operator">=</span> <span class="token string">'redis-server'</span> -a <span class="token string">"<span class="token variable"><span class="token variable">$(</span><span class="token function">id</span> -u<span class="token variable">)</span></span>"</span> <span class="token operator">=</span> <span class="token string">'0'</span> <span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">then</span>    <span class="token function">chown</span> -R redis <span class="token keyword">.</span>    <span class="token function">exec</span> su-exec redis <span class="token string">"<span class="token variable">$0</span>"</span> <span class="token string">"<span class="token variable">$@</span>"</span><span class="token keyword">fi</span><span class="token function">exec</span> <span class="token string">"<span class="token variable">$@</span>"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>该脚本的内容就是根据 <code>CMD</code> 的内容来判断，如果是 <code>redis-server</code> 的话，则切换到 <code>redis</code> 用户身份启动服务器，否则依旧使用 <code>root</code> 身份执行。比如：</p><pre class="line-numbers language-bash"><code class="language-bash">docker run -it redis <span class="token function">id</span>uid<span class="token operator">=</span>0<span class="token punctuation">(</span>root<span class="token punctuation">)</span> gid<span class="token operator">=</span>0<span class="token punctuation">(</span>root<span class="token punctuation">)</span> groups<span class="token operator">=</span>0<span class="token punctuation">(</span>root<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="ENV"><a href="#ENV" class="headerlink" title="ENV"></a>ENV</h2><p>格式有两种：</p><ul><li><code>ENV &lt;key&gt; &lt;value&gt;</code></li><li><code>ENV &lt;key1&gt;=&lt;value1&gt; &lt;key2&gt;=&lt;value2&gt;...</code></li></ul><p>这个指令很简单，就是设置环境变量而已，无论是后面的其它指令，如 <code>RUN</code>，还是运行时的应用，都可以直接使用这里定义的环境变量。</p><pre class="line-numbers language-Dockerfie"><code class="language-Dockerfie">ENV VERSION=1.0 DEBUG=on \    NAME="Happy Feet"<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个例子中演示了如何换行，以及对含有空格的值用双引号括起来的办法，这和 Shell 下的行为是一致的。</p><p>定义了环境变量，那么在后续的指令中，就可以使用这个环境变量。比如在官方 <code>node</code> 镜像 <code>Dockerfile</code> 中，就有类似这样的代码：</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">ENV NODE_VERSION 7.2.0RUN curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/node-v$NODE_VERSION-linux-x64.tar.xz" \  && curl -SLO "https://nodejs.org/dist/v$NODE_VERSION/SHASUMS256.txt.asc" \  && gpg --batch --decrypt --output SHASUMS256.txt SHASUMS256.txt.asc \  && grep " node-v$NODE_VERSION-linux-x64.tar.xz\$" SHASUMS256.txt | sha256sum -c - \  && tar -xJf "node-v$NODE_VERSION-linux-x64.tar.xz" -C /usr/local --strip-components=1 \  && rm "node-v$NODE_VERSION-linux-x64.tar.xz" SHASUMS256.txt.asc SHASUMS256.txt \  && ln -s /usr/local/bin/node /usr/local/bin/nodejs<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这里先定义了环境变量 <code>NODE_VERSION</code>，其后的 <code>RUN</code> 这层里，多次使用 <code>$NODE_VERSION</code> 来进行操作定制。可以看到，将来升级镜像构建版本的时候，只需要更新 <code>7.2.0</code> 即可，<code>Dockerfile</code> 构建维护变得更轻松了。</p><p>下列指令可以支持环境变量展开： <code>ADD</code>、<code>COPY</code>、<code>ENV</code>、<code>EXPOSE</code>、<code>LABEL</code>、<code>USER</code>、<code>WORKDIR</code>、<code>VOLUME</code>、<code>STOPSIGNAL</code>、<code>ONBUILD</code>。</p><p>可以从这个指令列表里感觉到，环境变量可以使用的地方很多，很强大。通过环境变量，我们可以让一份 <code>Dockerfile</code> 制作更多的镜像，只需使用不同的环境变量即可。</p><h2 id="VOLUME"><a href="#VOLUME" class="headerlink" title="VOLUME"></a>VOLUME</h2><p>格式为：</p><ul><li><code>VOLUME [&quot;&lt;路径1&gt;&quot;, &quot;&lt;路径2&gt;&quot;...]</code></li><li><code>VOLUME &lt;路径&gt;</code></li></ul><p>之前我们说过，容器运行时应该尽量保持容器存储层不发生写操作，对于数据库类需要保存动态数据的应用，其数据库文件应该保存于卷(volume)中，后面的章节我们会进一步介绍 Docker 卷的概念。为了防止运行时用户忘记将动态文件所保存目录挂载为卷，在 <code>Dockerfile</code> 中，我们可以事先指定某些目录挂载为匿名卷，这样在运行时如果用户不指定挂载，其应用也可以正常运行，不会向容器存储层写入大量数据。</p><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">VOLUME /data<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这里的 <code>/data</code> 目录就会在运行时自动挂载为匿名卷，任何向 <code>/data</code> 中写入的信息都不会记录进容器存储层，从而保证了容器存储层的无状态化。当然，运行时可以覆盖这个挂载设置。比如：</p><pre class="line-numbers language-bash"><code class="language-bash">docker run -d -v mydata:/data xxxx<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在这行命令中，就使用了 <code>mydata</code> 这个命名卷挂载到了 <code>/data</code> 这个位置，替代了 <code>Dockerfile</code> 中定义的匿名卷的挂载配置。</p><h2 id="EXPOSE"><a href="#EXPOSE" class="headerlink" title="EXPOSE"></a>EXPOSE</h2><p>格式为 <code>EXPOSE &lt;端口1&gt; [&lt;端口2&gt;...]</code>。</p><p><code>EXPOSE</code> 指令是声明运行时容器提供服务端口，这只是一个声明，在运行时并不会因为这个声明应用就会开启这个端口的服务。在 Dockerfile 中写入这样的声明有两个好处，一个是帮助镜像使用者理解这个镜像服务的守护端口，以方便配置映射；另一个用处则是在运行时使用随机端口映射时，也就是 <code>docker run -P</code> 时，会自动随机映射 <code>EXPOSE</code> 的端口。</p><p>此外，在早期 Docker 版本中还有一个特殊的用处。以前所有容器都运行于默认桥接网络中，因此所有容器互相之间都可以直接访问，这样存在一定的安全性问题。于是有了一个 Docker 引擎参数 <code>--icc=false</code>，当指定该参数后，容器间将默认无法互访，除非互相间使用了 <code>--links</code> 参数的容器才可以互通，并且只有镜像中 <code>EXPOSE</code> 所声明的端口才可以被访问。这个 <code>--icc=false</code> 的用法，在引入了 <code>docker network</code> 后已经基本不用了，通过自定义网络可以很轻松的实现容器间的互联与隔离。</p><p>要将 <code>EXPOSE</code> 和在运行时使用 <code>-p &lt;宿主端口&gt;:&lt;容器端口&gt;</code> 区分开来。<code>-p</code>，是映射宿主端口和容器端口，换句话说，就是将容器的对应端口服务公开给外界访问，而 <code>EXPOSE</code> 仅仅是声明容器打算使用什么端口而已，并不会自动在宿主进行端口映射。</p><h2 id="WORKDIR"><a href="#WORKDIR" class="headerlink" title="WORKDIR"></a>WORKDIR</h2><p>格式为 <code>WORKDIR &lt;工作目录路径&gt;</code>。</p><p>使用 <code>WORKDIR</code> 指令可以来指定工作目录（或者称为当前目录），以后各层的当前目录就被改为指定的目录，如该目录不存在，<code>WORKDIR</code> 会帮你建立目录。</p><p>之前提到一些初学者常犯的错误是把 <code>Dockerfile</code> 等同于 Shell 脚本来书写，这种错误的理解还可能会导致出现下面这样的错误：</p><pre class="line-numbers language-docker"><code class="language-docker"><span class="token keyword">RUN</span> cd /app<span class="token keyword">RUN</span> echo <span class="token string">"hello"</span> <span class="token punctuation">></span> world.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果将这个 <code>Dockerfile</code> 进行构建镜像运行后，会发现找不到 <code>/app/world.txt</code> 文件，或者其内容不是 <code>hello</code>。原因其实很简单，在 Shell 中，连续两行是同一个进程执行环境，因此前一个命令修改的内存状态，会直接影响后一个命令；而在 <code>Dockerfile</code> 中，这两行 <code>RUN</code> 命令的执行环境根本不同，是两个完全不同的容器。这就是对 <code>Dockerfile</code> 构建分层存储的概念不了解所导致的错误。</p><p>之前说过每一个 <code>RUN</code> 都是启动一个容器、执行命令、然后提交存储层文件变更。第一层 <code>RUN cd /app</code> 的执行仅仅是当前进程的工作目录变更，一个内存上的变化而已，其结果不会造成任何文件变更。而到第二层的时候，启动的是一个全新的容器，跟第一层的容器更完全没关系，自然不可能继承前一层构建过程中的内存变化。</p><p>因此如果需要改变以后各层的工作目录的位置，那么应该使用 <code>WORKDIR</code> 指令。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dockerfile 定制镜像</title>
      <link href="/2019/11/22/023.Dockerfile-%E5%AE%9A%E5%88%B6%E9%95%9C%E5%83%8F/"/>
      <url>/2019/11/22/023.Dockerfile-%E5%AE%9A%E5%88%B6%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Dockerfile-定制镜像"><a href="#Dockerfile-定制镜像" class="headerlink" title="Dockerfile 定制镜像"></a>Dockerfile 定制镜像</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Dockerfile 是一个文本文件，其内包含了一条条的 <strong>指令(Instruction)</strong>，每一条指令构建一层，因此每一条指令的内容，就是描述该层应当如何构建。</p><p>以之前的 Nginx 镜像为例，这次我们使用 Dockerfile 来定制。在一个空白目录中，建立一个文本文件，并命名为 <code>Dockerfile</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">mkdir</span> mynginx<span class="token function">cd</span> mynginx<span class="token function">touch</span> Dockerfile<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其内容为：</p><pre class="line-numbers language-dockerfile"><code class="language-dockerfile">FROM nginxRUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>这个 Dockerfile 很简单，一共就两行。涉及到了两条指令，<code>FROM</code> 和 <code>RUN</code>。</p><h2 id="FROM-指定基础镜像"><a href="#FROM-指定基础镜像" class="headerlink" title="FROM 指定基础镜像"></a>FROM 指定基础镜像</h2><p>所谓定制镜像，那一定是以一个镜像为基础，在其上进行定制。就像我们之前运行了一个 Nginx 镜像的容器，再进行修改一样，基础镜像是必须指定的。而 <code>FROM</code> 就是指定 <strong>基础镜像</strong>，因此一个 <code>Dockerfile</code> 中 <code>FROM</code> 是必备的指令，并且必须是第一条指令。</p><p>除了选择现有镜像为基础镜像外，Docker 还存在一个特殊的镜像，名为 <code>scratch</code>。这个镜像是虚拟的概念，并不实际存在，它表示一个空白的镜像。</p><pre class="line-numbers language-dockerfile"><code class="language-dockerfile">FROM scratch<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你以 <code>scratch</code> 为基础镜像的话，意味着你不以任何镜像为基础，接下来所写的指令将作为镜像第一层开始存在。</p><p>不以任何系统为基础，直接将可执行文件复制进镜像的做法并不罕见，比如 <a href="https://hub.docker.com/_/swarm/" target="_blank" rel="noopener"><code>swarm</code></a>、<a href="https://quay.io/repository/coreos/etcd" target="_blank" rel="noopener"><code>coreos/etcd</code></a>。对于 Linux 下静态编译的程序来说，并不需要有操作系统提供运行时支持，所需的一切库都已经在可执行文件里了，因此直接 <code>FROM scratch</code> 会让镜像体积更加小巧。使用 <a href="https://golang.org/" target="_blank" rel="noopener">Go 语言</a> 开发的应用很多会使用这种方式来制作镜像，这也是为什么有人认为 Go 是特别适合容器微服务架构语言的原因之一。</p><h2 id="RUN-执行命令"><a href="#RUN-执行命令" class="headerlink" title="RUN 执行命令"></a>RUN 执行命令</h2><p><code>RUN</code> 指令是用来执行命令行命令的。由于命令行的强大能力，<code>RUN</code> 指令在定制镜像时是最常用的指令之一。其格式有两种：</p><ul><li><strong>shell 格式：</strong> <code>RUN &lt;命令&gt;</code>，就像直接在命令行中输入的命令一样。刚才写的 Dockerfile 中的 <code>RUN</code> 指令就是这种格式。</li></ul><pre class="line-numbers language-Dockerfile"><code class="language-Dockerfile">RUN echo '<h1>Hello, Docker!</h1>' > /usr/share/nginx/html/index.html<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>exec 格式：</strong> <code>RUN [&quot;可执行文件&quot;, &quot;参数1&quot;, &quot;参数2&quot;]</code>，这更像是函数调用中的格式。</li></ul><p>既然 <code>RUN</code> 就像 Shell 脚本一样可以执行命令，那么我们是否就可以像 Shell 脚本一样把每个命令对应一个 RUN 呢？比如这样：</p><pre class="line-numbers language-dockerfile"><code class="language-dockerfile">FROM debian:jessieRUN apt-get updateRUN apt-get install -y gcc libc6-dev makeRUN wget -O redis.tar.gz "http://download.redis.io/releases/redis-3.2.5.tar.gz"RUN mkdir -p /usr/src/redisRUN tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1RUN make -C /usr/src/redisRUN make -C /usr/src/redis install<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>之前说过，Dockerfile 中每一个指令都会建立一层，<code>RUN</code> 也不例外。每一个 <code>RUN</code> 的行为，就和刚才我们手工建立镜像的过程一样：新建立一层，在其上执行这些命令，执行结束后，<code>commit</code> 这一层的修改，构成新的镜像。</p><p>而上面的这种写法，创建了 7 层镜像。这是完全没有意义的，而且很多运行时不需要的东西，都被装进了镜像里，比如编译环境、更新的软件包等等。结果就是产生非常臃肿、非常多层的镜像，不仅仅增加了构建部署的时间，也很容易出错。这是很多初学 Docker 的人常犯的一个错误。</p><blockquote><p><strong>注意：</strong> Union FS 是有最大层数限制的，比如 AUFS，曾经是最大不得超过 42 层，现在是不得超过 127 层。</p></blockquote><p>上面的 <code>Dockerfile</code> 正确的写法应该是这样：</p><pre class="line-numbers language-dockerfile"><code class="language-dockerfile">FROM debian:jessieRUN buildDeps='gcc libc6-dev make' \    && apt-get update \    && apt-get install -y $buildDeps \    && wget -O redis.tar.gz "http://download.redis.io/releases/redis-3.2.5.tar.gz" \    && mkdir -p /usr/src/redis \    && tar -xzf redis.tar.gz -C /usr/src/redis --strip-components=1 \    && make -C /usr/src/redis \    && make -C /usr/src/redis install \    && rm -rf /var/lib/apt/lists/* \    && rm redis.tar.gz \    && rm -r /usr/src/redis \    && apt-get purge -y --auto-remove $buildDeps<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>首先，之前所有的命令只有一个目的，就是编译、安装 Redis 可执行文件。因此没有必要建立很多层，这只是一层的事情。因此，这里没有使用很多个 <code>RUN</code> 对一一对应不同的命令，而是仅仅使用一个 <code>RUN</code> 指令，并使用 <code>&amp;&amp;</code> 将各个所需命令串联起来。将之前的 7 层，简化为了 1 层。在撰写 Dockerfile 的时候，要经常提醒自己，<strong>这并不是在写 Shell 脚本，而是在定义每一层该如何构建。</strong></p><p>并且，这里为了格式化还进行了换行。Dockerfile 支持 Shell 类的行尾添加 <code>\</code> 的命令换行方式，以及行首 <code>#</code> 进行注释的格式。良好的格式，比如换行、缩进、注释等，会让维护、排障更为容易，这是一个比较好的习惯。</p><p>此外，还可以看到这一组命令的最后添加了清理工作的命令，删除了为了编译构建所需要的软件，清理了所有下载、展开的文件，并且还清理了 <code>apt</code> 缓存文件。这是很重要的一步，我们之前说过，镜像是多层存储，每一层的东西并不会在下一层被删除，会一直跟随着镜像。因此镜像构建时，一定要确保每一层只添加真正需要添加的东西，任何无关的东西都应该清理掉。</p><p>很多人初学 Docker 制作出了很臃肿的镜像的原因之一，就是忘记了每一层构建的最后一定要清理掉无关文件。</p><h2 id="构建镜像"><a href="#构建镜像" class="headerlink" title="构建镜像"></a>构建镜像</h2><p>好了，让我们再回到之前定制的 Nginx 镜像的 Dockerfile 来。现在我们明白了这个 Dockerfile 的内容，那么让我们来构建这个镜像吧。在 <code>Dockerfile</code> 文件所在目录执行：</p><pre class="line-numbers language-bash"><code class="language-bash">docker build -t nginx:v3 <span class="token keyword">.</span><span class="token comment" spellcheck="true"># 输出如下</span>Sending build context to Docker daemon 2.048 kBStep 1 <span class="token keyword">:</span> FROM nginx ---<span class="token operator">></span> e43d811ce2f4Step 2 <span class="token keyword">:</span> RUN <span class="token keyword">echo</span> <span class="token string">'&lt;h1>Hello, Docker!&lt;/h1>'</span> <span class="token operator">></span> /usr/share/nginx/html/index.html ---<span class="token operator">></span> Running <span class="token keyword">in</span> 9cdc27646c7b ---<span class="token operator">></span> 44aa4490ce2cRemoving intermediate container 9cdc27646c7bSuccessfully built 44aa4490ce2c<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从命令的输出结果中，我们可以清晰的看到镜像的构建过程。在 <code>Step 2</code> 中，如同我们之前所说的那样，<code>RUN</code> 指令启动了一个容器 <code>9cdc27646c7b</code>，执行了所要求的命令，并最后提交了这一层 <code>44aa4490ce2c</code>，随后删除了所用到的这个容器 <code>9cdc27646c7b</code>。</p><p>这里我们使用了 <code>docker build</code> 命令进行镜像构建。其格式为：</p><pre class="line-numbers language-bash"><code class="language-bash">docker build <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token operator">&lt;</span>上下文路径/URL/-<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在这里我们指定了最终镜像的名称 <code>-t nginx:v3</code>，构建成功后，我们可以像之前运行 <code>nginx:v2</code> 那样来运行这个镜像，其结果会和 <code>nginx:v2</code> 一样。</p><h2 id="镜像构建上下文"><a href="#镜像构建上下文" class="headerlink" title="镜像构建上下文"></a>镜像构建上下文</h2><p>如果注意，会看到 <code>docker build</code> 命令最后有一个 <code>.</code>。<code>.</code> 表示当前目录，而 <code>Dockerfile</code> 就在当前目录，因此不少初学者以为这个路径是在指定 <code>Dockerfile</code> 所在路径，这么理解其实是不准确的。如果对应上面的命令格式，你可能会发现，这是在指定 <strong>上下文路径</strong>。那么什么是上下文呢？</p><p>首先我们要理解 <code>docker build</code> 的工作原理。Docker 在运行时分为 Docker 引擎（也就是服务端守护进程）和客户端工具。Docker 的引擎提供了一组 REST API，被称为 <a href="https://docs.docker.com/engine/reference/api/docker_remote_api/" target="_blank" rel="noopener">Docker Remote API</a>，而如 <code>docker</code> 命令这样的客户端工具，则是通过这组 API 与 Docker 引擎交互，从而完成各种功能。因此，虽然表面上我们好像是在本机执行各种 <code>docker</code> 功能，但实际上，一切都是使用的远程调用形式在服务端（Docker 引擎）完成。也因为这种 C/S 设计，让我们操作远程服务器的 Docker 引擎变得轻而易举。</p><p>当我们进行镜像构建的时候，并非所有定制都会通过 <code>RUN</code> 指令完成，经常会需要将一些本地文件复制进镜像，比如通过 <code>COPY</code> 指令、<code>ADD</code> 指令等。而 <code>docker build</code> 命令构建镜像，其实并非在本地构建，而是在服务端，也就是 Docker 引擎中构建的。那么在这种客户端/服务端的架构中，如何才能让服务端获得本地文件呢？</p><p>这就引入了上下文的概念。当构建的时候，用户会指定构建镜像上下文的路径，<code>docker build</code> 命令得知这个路径后，会将路径下的所有内容打包，然后上传给 Docker 引擎。这样 Docker 引擎收到这个上下文包后，展开就会获得构建镜像所需的一切文件。</p><p>如果在 <code>Dockerfile</code> 中这么写：</p><pre class="line-numbers language-dockerfile"><code class="language-dockerfile">COPY ./package.json /app/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这并不是要复制执行 <code>docker build</code> 命令所在的目录下的 <code>package.json</code>，也不是复制 <code>Dockerfile</code> 所在目录下的 <code>package.json</code>，而是复制 <strong>上下文（context）</strong> 目录下的 <code>package.json</code>。</p><p>因此，<code>COPY</code> 这类指令中的源文件的路径都是<em>相对路径</em>。这也是初学者经常会问的为什么 <code>COPY ../package.json /app</code> 或者 <code>COPY /opt/xxxx /app</code> 无法工作的原因，因为这些路径已经超出了上下文的范围，Docker 引擎无法获得这些位置的文件。如果真的需要那些文件，应该将它们复制到上下文目录中去。</p><p>现在就可以理解刚才的命令 <code>docker build -t nginx:v3 .</code> 中的这个 <code>.</code>，实际上是在指定上下文的目录，<code>docker build</code> 命令会将该目录下的内容打包交给 Docker 引擎以帮助构建镜像。</p><p>如果观察 <code>docker build</code> 输出，我们其实已经看到了这个发送上下文的过程：</p><pre class="line-numbers language-bash"><code class="language-bash">docker build -t nginx:v3 <span class="token keyword">.</span><span class="token comment" spellcheck="true"># 输出如下</span>Sending build context to Docker daemon 2.048 kB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>理解构建上下文对于镜像构建是很重要的，避免犯一些不应该的错误。比如有些初学者在发现 <code>COPY /opt/xxxx /app</code> 不工作后，于是干脆将 <code>Dockerfile</code> 放到了硬盘根目录去构建，结果发现 <code>docker build</code> 执行后，在发送一个几十 GB 的东西，极为缓慢而且很容易构建失败。那是因为这种做法是在让 <code>docker build</code> 打包整个硬盘，这显然是使用错误。</p><p>一般来说，应该会将 <code>Dockerfile</code> 置于一个空目录下，或者项目根目录下。如果该目录下没有所需文件，那么应该把所需文件复制一份过来。如果目录下有些东西确实不希望构建时传给 Docker 引擎，那么可以用 <code>.gitignore</code> 一样的语法写一个 <code>.dockerignore</code>，该文件是用于剔除不需要作为上下文传递给 Docker 引擎的。</p><p>那么为什么会有人误以为 <code>.</code> 是指定 <code>Dockerfile</code> 所在目录呢？这是因为在默认情况下，如果不额外指定 <code>Dockerfile</code> 的话，会将上下文目录下的名为 <code>Dockerfile</code> 的文件作为 Dockerfile。</p><p>这只是默认行为，实际上 <code>Dockerfile</code> 的文件名并不要求必须为 <code>Dockerfile</code>，而且并不要求必须位于上下文目录中，比如可以用 <code>-f ../Dockerfile.php</code> 参数指定某个文件作为 <code>Dockerfile</code>。</p><p>当然，一般大家习惯性的会使用默认的文件名 <code>Dockerfile</code>，以及会将其置于镜像构建上下文目录中。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 操作容器</title>
      <link href="/2019/11/22/022.Docker-%E6%93%8D%E4%BD%9C%E5%AE%B9%E5%99%A8/"/>
      <url>/2019/11/22/022.Docker-%E6%93%8D%E4%BD%9C%E5%AE%B9%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-操作容器"><a href="#Docker-操作容器" class="headerlink" title="Docker 操作容器"></a>Docker 操作容器</h1><h2 id="启动容器"><a href="#启动容器" class="headerlink" title="启动容器"></a>启动容器</h2><p>所需要的命令主要为 <code>docker run</code>。例如，下面的命令输出一个 “Hello World”，之后终止容器。</p><pre class="line-numbers language-bash"><code class="language-bash">docker run ubuntu:16.04 /bin/echo <span class="token string">'Hello world'</span>Hello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>当利用 <code>docker run</code> 来创建容器时，Docker 在后台运行的标准操作包括：</p><ul><li>检查本地是否存在指定的镜像，不存在就从公有仓库下载</li><li>利用镜像创建并启动一个容器</li><li>分配一个文件系统，并在只读的镜像层外面挂载一层可读写层</li><li>从宿主主机配置的网桥接口中桥接一个虚拟接口到容器中去</li><li>从地址池配置一个 ip 地址给容器</li><li>执行用户指定的应用程序</li><li>执行完毕后容器被终止</li></ul><h2 id="终止容器"><a href="#终止容器" class="headerlink" title="终止容器"></a>终止容器</h2><p>可以使用 <code>docker container stop</code> 来终止一个运行中的容器。此外，当 Docker 容器中指定的应用终结时，容器也自动终止。</p><p>例如对于只启动了一个终端的容器，用户通过 <code>exit</code> 命令或 <code>ctrl + d</code> 来退出终端时，所创建的容器立刻终止。终止状态的容器可以用 <code>docker container ls -a</code> 命令看到。例如</p><pre class="line-numbers language-bash"><code class="language-bash">docker container <span class="token function">ls</span> -a<span class="token comment" spellcheck="true"># 输出如下</span>CONTAINER ID        IMAGE                    COMMAND                CREATED             STATUS                          PORTS               NAMESba267838cc1b        ubuntu:14.04             <span class="token string">"/bin/bash"</span>            30 minutes ago      Exited <span class="token punctuation">(</span>0<span class="token punctuation">)</span> About a minute ago                       trusting_newton98e5efa7d997        training/webapp:latest   <span class="token string">"python app.py"</span>        About an hour ago   Exited <span class="token punctuation">(</span>0<span class="token punctuation">)</span> 34 minutes ago                           backstabbing_pike<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="启动已终止容器"><a href="#启动已终止容器" class="headerlink" title="启动已终止容器"></a>启动已终止容器</h2><p>处于终止状态的容器，可以通过 <code>docker container start</code> 命令来重新启动。此外，<code>docker container restart</code> 命令会将一个运行态的容器终止，然后再重新启动它。</p><pre class="line-numbers language-bash"><code class="language-bash">docker container start <span class="token punctuation">[</span>container ID or NAMES<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="守护态运行"><a href="#守护态运行" class="headerlink" title="守护态运行"></a>守护态运行</h2><p>更多的时候，需要让 Docker 在后台运行而不是直接把执行命令的结果输出在当前宿主机下。此时，可以通过添加 <code>-d</code> 参数来实现。如果不使用 <code>-d</code> 参数运行容器。</p><pre class="line-numbers language-bash"><code class="language-bash">docker run ubuntu:16.04 /bin/sh -c <span class="token string">"while true; do echo hello world; sleep 1; done"</span><span class="token comment" spellcheck="true"># 输出如下</span>hello worldhello worldhello worldhello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>容器会把输出的结果 (STDOUT) 打印到宿主机上面，如果使用了 <code>-d</code> 参数运行容器。</p><pre class="line-numbers language-bash"><code class="language-bash">docker run -d ubuntu:17.10 /bin/sh -c <span class="token string">"while true; do echo hello world; sleep 1; done"</span><span class="token comment" spellcheck="true"># 输出如下</span>77b2dc01fe0f3f1265df143181e7b9af5e05279a884f4776ee75350ea9d8017a<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>此时容器会在后台运行并不会把输出的结果 (STDOUT) 打印到宿主机上面(输出结果可以用 <code>docker logs</code> 查看)。</p><blockquote><p><strong>注意：</strong> 容器是否会长久运行，是和 <code>docker run</code> 指定的命令有关，和 <code>-d</code> 参数无关。</p></blockquote><h2 id="容器日志"><a href="#容器日志" class="headerlink" title="容器日志"></a>容器日志</h2><p>要获取容器的输出信息，可以通过 <code>docker container logs</code> 命令。</p><pre class="line-numbers language-bash"><code class="language-bash">docker container logs <span class="token punctuation">[</span>container ID or NAMES<span class="token punctuation">]</span><span class="token comment" spellcheck="true"># 输出如下</span>hello worldhello worldhello world<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><p>在使用 <code>-d</code> 参数时，容器启动后会进入后台。某些时候需要进入容器进行操作，<code>docker exec</code> 命令能让我们以交互的方式进入容器。</p><p><code>docker exec</code> 后边可以跟多个参数，这里主要说明 <code>-i</code> <code>-t</code> 参数。只用 <code>-i</code> 参数时，由于没有分配伪终端，界面没有我们熟悉的 Linux 命令提示符，但命令执行结果仍然可以返回。当 <code>-i</code> <code>-t</code> 参数一起使用时，则可以看到我们熟悉的 Linux 命令提示符。</p><pre class="line-numbers language-bash"><code class="language-bash">docker <span class="token function">exec</span> -it 69d1 <span class="token function">bash</span>root@69d137adef7a:/<span class="token comment" spellcheck="true">#</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果从这个 stdin 中 exit，不会导致容器的停止。更多参数说明请使用 <code>docker exec --help</code> 查看。</p><h2 id="删除容器"><a href="#删除容器" class="headerlink" title="删除容器"></a>删除容器</h2><p>可以使用 <code>docker container rm</code> 来删除一个处于终止状态的容器。例如</p><pre class="line-numbers language-bash"><code class="language-bash">docker container <span class="token function">rm</span> trusting_newtontrusting_newton<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>如果要删除一个运行中的容器，可以添加 <code>-f</code> 参数。Docker 会发送 <code>SIGKILL</code> 信号给容器。</p><h2 id="清理所有处于终止状态的容器"><a href="#清理所有处于终止状态的容器" class="headerlink" title="清理所有处于终止状态的容器"></a>清理所有处于终止状态的容器</h2><p>用 <code>docker container ls -a</code> 命令可以查看所有已经创建的包括终止状态的容器，如果数量太多要一个个删除可能会很麻烦，用下面的命令可以清理掉所有处于终止状态的容器。</p><pre class="line-numbers language-bash"><code class="language-bash">docker container prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 操作镜像</title>
      <link href="/2019/11/22/021.Docker-%E6%93%8D%E4%BD%9C%E9%95%9C%E5%83%8F/"/>
      <url>/2019/11/22/021.Docker-%E6%93%8D%E4%BD%9C%E9%95%9C%E5%83%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-操作镜像"><a href="#Docker-操作镜像" class="headerlink" title="Docker 操作镜像"></a>Docker 操作镜像</h1><h2 id="获取镜像"><a href="#获取镜像" class="headerlink" title="获取镜像"></a>获取镜像</h2><p>之前提到过，<a href="https://hub.docker.com/explore/" target="_blank" rel="noopener">Docker Hub</a> 上有大量的高质量的镜像可以用，这里我们就说一下怎么获取这些镜像。</p><p>从 Docker 镜像仓库获取镜像的命令是 <code>docker pull</code>。其命令格式为：</p><pre class="line-numbers language-bash"><code class="language-bash">docker pull <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token punctuation">[</span>Docker Registry 地址<span class="token punctuation">[</span>:端口号<span class="token punctuation">]</span>/<span class="token punctuation">]</span>仓库名<span class="token punctuation">[</span>:标签<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>具体的选项可以通过 <code>docker pull --help</code> 命令看到，这里我们说一下镜像名称的格式。</p><ul><li><strong>镜像仓库地址：</strong> 地址的格式一般是 <code>&lt;域名/IP&gt;[:端口号]</code>。默认地址是 Docker Hub。</li><li><strong>仓库名：</strong> 如之前所说，这里的仓库名是两段式名称，即 <code>&lt;用户名&gt;/&lt;软件名&gt;</code>。对于 Docker Hub，如果不给出用户名，则默认为 <code>library</code>，也就是官方镜像。</li></ul><pre class="line-numbers language-bash"><code class="language-bash">docker pull nginx<span class="token comment" spellcheck="true"># 输出如下</span>Using default tag: latestlatest: Pulling from library/nginxfc7181108d40: Pull complete c4277fc40ec2: Pull complete 780053e98559: Pull complete Digest: sha256:bdbf36b7f1f77ffe7bd2a32e59235dff6ecf131e3b6b5b96061c652f30685f3aStatus: Downloaded newer image <span class="token keyword">for</span> nginx:latest<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="列出镜像"><a href="#列出镜像" class="headerlink" title="列出镜像"></a>列出镜像</h2><p>要想列出已经下载下来的镜像，可以使用 <code>docker image ls</code> 命令。</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span><span class="token comment" spellcheck="true"># 输出如下</span>REPOSITORY           TAG                 IMAGE ID            CREATED             SIZEredis                latest              5f515359c7f8        5 days ago          183 MBnginx                latest              05a60462f8ba        5 days ago          181 MBmongo                3.2                 fe9198c04d62        5 days ago          342 MB<span class="token operator">&lt;</span>none<span class="token operator">></span>               <span class="token operator">&lt;</span>none<span class="token operator">></span>              00285df0df87        5 days ago          342 MBubuntu               16.04               f753707788c5        4 weeks ago         127 MBubuntu               latest              f753707788c5        4 weeks ago         127 MBubuntu               14.04               1e0c3dd64ccd        4 weeks ago         188 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>列表包含了 <code>仓库名</code>、<code>标签</code>、<code>镜像 ID</code>、<code>创建时间</code> 以及 <code>所占用的空间</code>。</p><p>其中仓库名、标签在之前的基础概念章节已经介绍过了。<strong>镜像 ID</strong> 则是镜像的唯一标识，一个镜像可以对应多个<strong>标签</strong>。因此，在上面的例子中，我们可以看到 <code>ubuntu:16.04</code> 和 <code>ubuntu:latest</code> 拥有相同的 ID，因为它们对应的是同一个镜像。</p><h2 id="镜像体积"><a href="#镜像体积" class="headerlink" title="镜像体积"></a>镜像体积</h2><p>如果仔细观察，会注意到，这里标识的所占用空间和在 Docker Hub 上看到的镜像大小不同。比如，<code>ubuntu:16.04</code> 镜像大小，在这里是 <code>127 MB</code>，但是在 Docker Hub 显示的却是 <code>50 MB</code>。这是因为 Docker Hub 中显示的体积是压缩后的体积。在镜像下载和上传过程中镜像是保持着压缩状态的，因此 Docker Hub 所显示的大小是网络传输中更关心的流量大小。而 <code>docker image ls</code> 显示的是镜像下载到本地后，展开的大小，准确说，是展开后的各层所占空间的总和，因为镜像到本地后，查看空间的时候，更关心的是本地磁盘空间占用的大小。</p><p>另外一个需要注意的问题是，<code>docker image ls</code> 列表中的镜像体积总和并非是所有镜像实际硬盘消耗。由于 Docker 镜像是多层存储结构，并且可以继承、复用，因此不同镜像可能会因为使用相同的基础镜像，从而拥有共同的层。由于 Docker 使用 Union FS，相同的层只需要保存一份即可，因此实际镜像硬盘占用空间很可能要比这个列表镜像大小的总和要小的多。</p><p>你可以通过以下命令来便捷的查看镜像、容器、数据卷所占用的空间。</p><pre class="line-numbers language-bash"><code class="language-bash">docker system <span class="token function">df</span><span class="token comment" spellcheck="true"># 输出如下</span>TYPE                TOTAL               ACTIVE              SIZE                RECLAIMABLEImages              24                  0                   1.992GB             1.992GB <span class="token punctuation">(</span>100%<span class="token punctuation">)</span>Containers          1                   0                   62.82MB             62.82MB <span class="token punctuation">(</span>100%<span class="token punctuation">)</span>Local Volumes       9                   0                   652.2MB             652.2MB <span class="token punctuation">(</span>100%<span class="token punctuation">)</span>Build Cache                                                 0B                  0B<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="虚悬镜像"><a href="#虚悬镜像" class="headerlink" title="虚悬镜像"></a>虚悬镜像</h2><p>上面的镜像列表中，还可以看到一个特殊的镜像，这个镜像既没有仓库名，也没有标签，均为 <code>&lt;none&gt;</code></p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token operator">&lt;</span>none<span class="token operator">></span>               <span class="token operator">&lt;</span>none<span class="token operator">></span>              00285df0df87        5 days ago          342 MB<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个镜像原本是有镜像名和标签的，原来为 <code>mongo:3.2</code>，随着官方镜像维护，发布了新版本后，重新 <code>docker pull mongo:3.2</code> 时，<code>mongo:3.2</code> 这个镜像名被转移到了新下载的镜像身上，而旧的镜像上的这个名称则被取消，从而成为了 <code>&lt;none&gt;</code>。除了 <code>docker pull</code> 可能导致这种情况，<code>docker build</code> 也同样可以导致这种现象。由于新旧镜像同名，旧镜像名称被取消，从而出现仓库名、标签均为 <code>&lt;none&gt;</code> 的镜像。这类无标签镜像也被称为 <strong>虚悬镜像(dangling image)</strong> ，可以用下面的命令专门显示这类镜像：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> -f dangling<span class="token operator">=</span>true<span class="token comment" spellcheck="true"># 输出如下</span>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE<span class="token operator">&lt;</span>none<span class="token operator">></span>              <span class="token operator">&lt;</span>none<span class="token operator">></span>              00285df0df87        5 days ago          342 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>一般来说，虚悬镜像已经失去了存在的价值，是可以随意删除的，可以用下面的命令删除。</p><pre class="line-numbers language-bash"><code class="language-bash">docker image prune<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="中间层镜像"><a href="#中间层镜像" class="headerlink" title="中间层镜像"></a>中间层镜像</h2><p>为了加速镜像构建、重复利用资源，Docker 会利用 <strong>中间层镜像</strong>。所以在使用一段时间后，可能会看到一些依赖的中间层镜像。默认的 <code>docker image ls</code> 列表中只会显示顶层镜像，如果希望显示包括中间层镜像在内的所有镜像的话，需要加 <code>-a</code> 参数。</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> -a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这样会看到很多无标签的镜像，与之前的虚悬镜像不同，这些无标签的镜像很多都是中间层镜像，是其它镜像所依赖的镜像。这些无标签镜像不应该删除，否则会导致上层镜像因为依赖丢失而出错。实际上，这些镜像也没必要删除，因为之前说过，相同的层只会存一遍，而这些镜像是别的镜像的依赖，因此并不会因为它们被列出来而多存了一份，无论如何你也会需要它们。只要删除那些依赖它们的镜像后，这些依赖的中间层镜像也会被连带删除。</p><h2 id="删除镜像"><a href="#删除镜像" class="headerlink" title="删除镜像"></a>删除镜像</h2><p>如果要删除本地的镜像，可以使用 <code>docker image rm</code> 命令，其格式为：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">rm</span> <span class="token punctuation">[</span>选项<span class="token punctuation">]</span> <span class="token operator">&lt;</span>镜像1<span class="token operator">></span> <span class="token punctuation">[</span><span class="token operator">&lt;</span>镜像2<span class="token operator">></span> <span class="token punctuation">..</span>.<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="用-ID、镜像名、摘要删除镜像"><a href="#用-ID、镜像名、摘要删除镜像" class="headerlink" title="用 ID、镜像名、摘要删除镜像"></a>用 ID、镜像名、摘要删除镜像</h3><p>其中，<code>&lt;镜像&gt;</code> 可以是 <code>镜像短 ID</code>、<code>镜像长 ID</code>、<code>镜像名</code> 或者 <code>镜像摘要</code>。</p><p>比如我们有这么一些镜像：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span><span class="token comment" spellcheck="true"># 输出如下</span>REPOSITORY                  TAG                 IMAGE ID            CREATED             SIZEcentos                      latest              0584b3d2cf6d        3 weeks ago         196.5 MBredis                       alpine              501ad78535f0        3 weeks ago         21.03 MBdocker                      latest              cf693ec9b5c7        3 weeks ago         105.1 MBnginx                       latest              e43d811ce2f4        5 weeks ago         181.5 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们可以用镜像的完整 ID，也称为 <strong>长 ID</strong>，来删除镜像。使用脚本的时候可能会用长 ID，但是人工输入就太累了，所以更多的时候是用 <strong>短 ID</strong> 来删除镜像。<code>docker image ls</code> 默认列出的就已经是短 ID 了，一般取前 3 个字符以上，只要足够区分于别的镜像就可以了。</p><p>比如这里，如果我们要删除 <code>redis:alpine</code> 镜像，可以执行：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">rm</span> 501<span class="token comment" spellcheck="true"># 输出如下</span>Untagged: redis:alpineUntagged: redis@sha256:f1ed3708f538b537eb9c2a7dd50dc90a706f7debd7e1196c9264edeea521a86dDeleted: sha256:501ad78535f015d88872e13fa87a828425117e3d28075d0c117932b05bf189b7Deleted: sha256:96167737e29ca8e9d74982ef2a0dda76ed7b430da55e321c071f0dbff8c2899bDeleted: sha256:32770d1dcf835f192cafd6b9263b7b597a1778a403a109e2cc2ee866f74adf23Deleted: sha256:127227698ad74a5846ff5153475e03439d96d4b1c7f2a449c7a826ef74a2d2faDeleted: sha256:1333ecc582459bac54e1437335c0816bc17634e131ea0cc48daa27d32c75eab3Deleted: sha256:4fc455b921edf9c4aea207c51ab39b10b06540c8b4825ba57b3feed1668fa7c7<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们也可以用<code>镜像名</code>，也就是 <code>&lt;仓库名&gt;:&lt;标签&gt;</code>，来删除镜像。</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">rm</span> centos<span class="token comment" spellcheck="true"># 输出如下</span>Untagged: centos:latestUntagged: centos@sha256:b2f9d1c0ff5f87a4743104d099a3d561002ac500db1b9bfa02a783a46e0d366cDeleted: sha256:0584b3d2cf6d235ee310cf14b54667d889887b838d3f3d3033acd70fc3c48b8aDeleted: sha256:97ca462ad9eeae25941546209454496e1d66749d53dfa2ee32bf1faabd239d38<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，更精确的是使用 <code>镜像摘要</code> 删除镜像。</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> --digests<span class="token comment" spellcheck="true"># 输出如下</span>REPOSITORY                  TAG                 DIGEST                                                                    IMAGE ID            CREATED             SIZEnode                        slim                sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228   6e0c4c8e3913        3 weeks ago         214 MBdocker image <span class="token function">rm</span> node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228<span class="token comment" spellcheck="true"># 输出如下</span>Untagged: node@sha256:b4f0e0bdeb578043c1ea6862f0d40cc4afe32a4a582f3be235a3b164422be228<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="用-docker-image-ls-命令来配合"><a href="#用-docker-image-ls-命令来配合" class="headerlink" title="用 docker image ls 命令来配合"></a>用 docker image ls 命令来配合</h3><p>像其它可以承接多个实体的命令一样，可以使用 <code>docker image ls -q</code> 来配合使用 <code>docker image rm</code>，这样可以成批的删除希望删除的镜像。我们在“镜像列表”章节介绍过很多过滤镜像列表的方式都可以拿过来使用。</p><p>比如，我们需要删除所有仓库名为 <code>redis</code> 的镜像：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker image <span class="token function">ls</span> -q redis<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>或者删除所有在 <code>mongo:3.2</code> 之前的镜像：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">rm</span> <span class="token variable"><span class="token variable">$(</span>docker image <span class="token function">ls</span> -q -f before<span class="token operator">=</span>mongo:3.2<span class="token variable">)</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>充分利用你的想象力和 Linux 命令行的强大，你可以完成很多非常赞的功能。</p><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h3 id="列出部分镜像"><a href="#列出部分镜像" class="headerlink" title="列出部分镜像"></a>列出部分镜像</h3><p>不加任何参数的情况下，<code>docker image ls</code> 会列出所有顶级镜像，但是有时候我们只希望列出部分镜像。<code>docker image ls</code> 有好几个参数可以帮助做到这个事情。</p><p>根据仓库名列出镜像</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> ubuntu<span class="token comment" spellcheck="true"># 输出如下</span>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZEubuntu              16.04               f753707788c5        4 weeks ago         127 MBubuntu              latest              f753707788c5        4 weeks ago         127 MBubuntu              14.04               1e0c3dd64ccd        4 weeks ago         188 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>列出特定的某个镜像，也就是说指定仓库名和标签</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> ubuntu:16.04<span class="token comment" spellcheck="true"># 输出如下</span>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZEubuntu              16.04               f753707788c5        4 weeks ago         127 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>除此以外，<code>docker image ls</code> 还支持强大的过滤器参数 <code>--filter</code>，或者简写 <code>-f</code>。之前我们已经看到了使用过滤器来列出虚悬镜像的用法，它还有更多的用法。比如，我们希望看到在 <code>mongo:3.2</code> 之后建立的镜像，可以用下面的命令：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> -f since<span class="token operator">=</span>mongo:3.2<span class="token comment" spellcheck="true"># 输出如下</span>REPOSITORY          TAG                 IMAGE ID            CREATED             SIZEredis               latest              5f515359c7f8        5 days ago          183 MBnginx               latest              05a60462f8ba        5 days ago          181 MB<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>想查看某个位置之前的镜像也可以，只需要把 <code>since</code> 换成 <code>before</code> 即可。</p><p>此外，如果镜像构建时，定义了 <code>LABEL</code>，还可以通过 <code>LABEL</code> 来过滤。</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> -f label<span class="token operator">=</span>com.example.version<span class="token operator">=</span>0.1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="以特定格式显示"><a href="#以特定格式显示" class="headerlink" title="以特定格式显示"></a>以特定格式显示</h3><p>默认情况下，<code>docker image ls</code> 会输出一个完整的表格，但是我们并非所有时候都会需要这些内容。比如，刚才删除虚悬镜像的时候，我们需要利用 <code>docker image ls</code> 把所有的虚悬镜像的 ID 列出来，然后才可以交给 <code>docker image rm</code> 命令作为参数来删除指定的这些镜像，这个时候就用到了 <code>-q</code> 参数。</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> -q<span class="token comment" spellcheck="true"># 输出如下</span>5f515359c7f805a60462f8bafe9198c04d6200285df0df87f753707788c5f753707788c51e0c3dd64ccd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>--filter</code> 配合 <code>-q</code> 产生出指定范围的 ID 列表，然后送给另一个 <code>docker</code> 命令作为参数，从而针对这组实体成批的进行某种操作的做法在 Docker 命令行使用过程中非常常见，不仅仅是镜像，将来我们会在各个命令中看到这类搭配以完成很强大的功能。因此每次在文档看到过滤器后，可以多注意一下它们的用法。</p><p>另外一些时候，我们可能只是对表格的结构不满意，希望自己组织列；或者不希望有标题，这样方便其它程序解析结果等，这就用到了 <a href="https://gohugo.io/templates/go-templates/" target="_blank" rel="noopener">Go 的模板语法</a>。</p><p>比如，下面的命令会直接列出镜像结果，并且只包含镜像 ID 和仓库名：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> --format <span class="token string">"{{.ID}}: {{.Repository}}"</span><span class="token comment" spellcheck="true"># 输出如下</span>5f515359c7f8: redis05a60462f8ba: nginxfe9198c04d62: mongo00285df0df87: <span class="token operator">&lt;</span>none<span class="token operator">></span>f753707788c5: ubuntuf753707788c5: ubuntu1e0c3dd64ccd: ubuntu<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者打算以表格等距显示，并且有标题行，和默认一样，不过自己定义列：</p><pre class="line-numbers language-bash"><code class="language-bash">docker image <span class="token function">ls</span> --format <span class="token string">"table {{.ID}}\t{{.Repository}}\t{{.Tag}}"</span><span class="token comment" spellcheck="true"># 输出如下</span>IMAGE ID            REPOSITORY          TAG5f515359c7f8        redis               latest05a60462f8ba        nginx               latestfe9198c04d62        mongo               3.200285df0df87        <span class="token operator">&lt;</span>none<span class="token operator">></span>              <span class="token operator">&lt;</span>none<span class="token operator">></span>f753707788c5        ubuntu              16.04f753707788c5        ubuntu              latest1e0c3dd64ccd        ubuntu              14.04<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 概述</title>
      <link href="/2019/11/22/020.Docker-%E6%A6%82%E8%BF%B0/"/>
      <url>/2019/11/22/020.Docker-%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-概述"><a href="#Docker-概述" class="headerlink" title="Docker 概述"></a>Docker 概述</h1><h2 id="Docker-引擎"><a href="#Docker-引擎" class="headerlink" title="Docker 引擎"></a>Docker 引擎</h2><p>Docker 引擎是一个包含以下主要组件的客户端服务器应用程序。</p><ul><li>一种服务器，它是一种称为守护进程并且长时间运行的程序。</li><li>REST API 用于指定程序可以用来与守护进程通信的接口，并指示它做什么。</li><li>一个有命令行界面 (CLI) 工具的客户端。</li></ul><p><img src="/docker/engine-components-flow.png" alt></p><h2 id="Docker-架构"><a href="#Docker-架构" class="headerlink" title="Docker 架构"></a>Docker 架构</h2><ul><li>Docker 使用客户端 - 服务器 (C/S) 架构模式，使用远程 API 来管理和创建 Docker 容器。</li><li>Docker 容器通过 Docker 镜像来创建。</li><li>容器与镜像的关系类似于面向对象编程中的对象与类。</li></ul><table><thead><tr><th align="left">Docker</th><th align="left">面向对象</th></tr></thead><tbody><tr><td align="left">容器</td><td align="left">对象</td></tr><tr><td align="left">镜像</td><td align="left">类</td></tr></tbody></table><p><img src="/docker/docker-architecture.svg" alt></p><table><thead><tr><th align="left">标题</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">镜像(Images)</td><td align="left">Docker 镜像是用于创建 Docker 容器的模板。</td></tr><tr><td align="left">容器(Container)</td><td align="left">容器是独立运行的一个或一组应用。</td></tr><tr><td align="left">客户端(Client)</td><td align="left">Docker 客户端通过命令行或者其他工具使用 Docker API (<a href="https://docs.docker.com/reference/api/docker_remote_api" target="_blank" rel="noopener">https://docs.docker.com/reference/api/docker_remote_api</a>) 与 Docker 的守护进程通信。</td></tr><tr><td align="left">主机(Host)</td><td align="left">一个物理或者虚拟的机器用于执行 Docker 守护进程和容器。</td></tr><tr><td align="left">仓库(Registry)</td><td align="left">Docker 仓库用来保存镜像，可以理解为代码控制中的代码仓库。Docker Hub(<a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com</a>) 提供了庞大的镜像集合供使用。</td></tr><tr><td align="left">Docker Machine</td><td align="left">Docker Machine是一个简化Docker安装的命令行工具，通过一个简单的命令行即可在相应的平台上安装Docker，比如VirtualBox、 Digital Ocean、Microsoft Azure。</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装 Docker</title>
      <link href="/2019/11/22/019.Docker-%E5%AE%89%E8%A3%85/"/>
      <url>/2019/11/22/019.Docker-%E5%AE%89%E8%A3%85/</url>
      
        <content type="html"><![CDATA[<h1 id="安装-Docker"><a href="#安装-Docker" class="headerlink" title="安装 Docker"></a>安装 Docker</h1><h2 id="平台支持"><a href="#平台支持" class="headerlink" title="平台支持"></a>平台支持</h2><p>Docker CE 支持多种平台，如下表所示</p><h3 id="桌面"><a href="#桌面" class="headerlink" title="桌面"></a>桌面</h3><table><thead><tr><th>平台</th><th>架构</th></tr></thead><tbody><tr><td><a href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener">Docker Desktop for Mac (macOS)</a></td><td>X64</td></tr><tr><td><a href="https://docs.docker.com/docker-for-windows/install/" target="_blank" rel="noopener">Docker Desktop for Windows (Microsoft Windows 10)</a></td><td>X64</td></tr></tbody></table><h3 id="服务器"><a href="#服务器" class="headerlink" title="服务器"></a>服务器</h3><table><thead><tr><th>平台</th><th>x86_64 / amd64</th><th>ARM</th><th>ARM64 / AARCH64</th><th>IBM Power (ppc64le)</th><th>IBM Z (s390x)</th></tr></thead><tbody><tr><td><a href="https://docs.docker.com/install/linux/docker-ce/centos/" target="_blank" rel="noopener">CentOS</a></td><td>✔</td><td></td><td>✔</td><td></td><td></td></tr><tr><td><a href="https://docs.docker.com/install/linux/docker-ce/debian/" target="_blank" rel="noopener">Debian</a></td><td>✔</td><td>✔</td><td>✔</td><td></td><td></td></tr><tr><td><a href="https://docs.docker.com/install/linux/docker-ce/fedora/" target="_blank" rel="noopener">Fedora</a></td><td>✔</td><td></td><td>✔</td><td></td><td></td></tr><tr><td><a href="https://docs.docker.com/install/linux/docker-ce/ubuntu/" target="_blank" rel="noopener">Ubuntu</a></td><td>✔</td><td>✔</td><td>✔</td><td>✔</td><td>✔</td></tr></tbody></table><h2 id="准备安装"><a href="#准备安装" class="headerlink" title="准备安装"></a>准备安装</h2><h3 id="卸载旧版本"><a href="#卸载旧版本" class="headerlink" title="卸载旧版本"></a>卸载旧版本</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">apt-get</span> remove docker docker-engine docker.io containerd runc<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="使用-APT-安装"><a href="#使用-APT-安装" class="headerlink" title="使用 APT 安装"></a>使用 APT 安装</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 更新数据源</span><span class="token function">apt-get</span> update<span class="token comment" spellcheck="true"># 安装所需依赖</span><span class="token function">apt-get</span> -y <span class="token function">install</span> apt-transport-https ca-certificates curl software-properties-common<span class="token comment" spellcheck="true"># 安装 GPG 证书</span>curl -fsSL http://mirrors.aliyun.com/docker-ce/linux/ubuntu/gpg <span class="token operator">|</span> <span class="token function">sudo</span> apt-key add -<span class="token comment" spellcheck="true"># 新增数据源</span>add-apt-repository <span class="token string">"deb [arch=amd64] http://mirrors.aliyun.com/docker-ce/linux/ubuntu <span class="token variable"><span class="token variable">$(</span>lsb_release -cs<span class="token variable">)</span></span> stable"</span><span class="token comment" spellcheck="true"># 更新并安装 Docker CE</span><span class="token function">apt-get</span> update <span class="token operator">&amp;&amp;</span> <span class="token function">apt-get</span> <span class="token function">install</span> -y docker-ce<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h3><pre class="line-numbers language-bash"><code class="language-bash">docker version<span class="token comment" spellcheck="true"># 输出如下</span>Client: Version:           18.09.6 API version:       1.39 Go version:        go1.10.8 Git commit:        481bc77 Built:             Sat May  4 02:35:57 2019 OS/Arch:           linux/amd64 Experimental:      <span class="token boolean">false</span>Server: Docker Engine - Community Engine:  Version:          18.09.6  API version:      1.39 <span class="token punctuation">(</span>minimum version 1.12<span class="token punctuation">)</span>  Go version:       go1.10.8  Git commit:       481bc77  Built:            Sat May  4 01:59:36 2019  OS/Arch:          linux/amd64  Experimental:     <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="配置-Docker-镜像加速器"><a href="#配置-Docker-镜像加速器" class="headerlink" title="配置 Docker 镜像加速器"></a>配置 Docker 镜像加速器</h2><h3 id="阿里云加速器（推荐）"><a href="#阿里云加速器（推荐）" class="headerlink" title="阿里云加速器（推荐）"></a>阿里云加速器（推荐）</h3><p><a href="https://promotion.aliyun.com/ntms/act/qwbk.html?userCode=hgqku7c5" target="_blank" rel="noopener">点击链接获取</a></p><h3 id="官方提供中国区镜像"><a href="#官方提供中国区镜像" class="headerlink" title="官方提供中国区镜像"></a>官方提供中国区镜像</h3><pre><code>https://registry.docker-cn.com</code></pre><h3 id="配置加速器"><a href="#配置加速器" class="headerlink" title="配置加速器"></a>配置加速器</h3><p>以配置阿里云加速器为例，首先 <a href="https://promotion.aliyun.com/ntms/act/qwbk.html?userCode=hgqku7c5" target="_blank" rel="noopener">登录阿里云（没有账号请先注册）</a>，搜索 <strong>容器镜像服务</strong></p><p><img src="/docker/Lusifer_20190616094532.png" alt></p><p>找到你的专属加速器</p><p><img src="/docker/Lusifer_20190616094722.png" alt></p><p>通过修改 daemon 配置文件 <code>/etc/docker/daemon.json</code> 来使用加速器</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">tee</span> /etc/docker/daemon.json <span class="token operator">&lt;&lt;</span>-<span class="token string">'EOF'</span><span class="token punctuation">{</span>  <span class="token string">"registry-mirrors"</span><span class="token keyword">:</span> <span class="token punctuation">[</span><span class="token string">"https://xxxxxxxx.mirror.aliyuncs.com"</span><span class="token punctuation">]</span><span class="token punctuation">}</span>EOF<span class="token comment" spellcheck="true"># 重启 Docker</span>systemctl daemon-reloadsystemctl restart docker<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="验证配置是否成功"><a href="#验证配置是否成功" class="headerlink" title="验证配置是否成功"></a>验证配置是否成功</h3><pre class="line-numbers language-bash"><code class="language-bash">docker info<span class="token comment" spellcheck="true"># 输出如下</span>Containers: 38 Running: 18 Paused: 0 Stopped: 20Images: 10Server Version: 18.09.6Storage Driver: overlay2 Backing Filesystem: extfs Supports d_type: <span class="token boolean">true</span> Native Overlay Diff: <span class="token boolean">true</span>Logging Driver: json-fileCgroup Driver: cgroupfsPlugins: Volume: local Network: bridge host macvlan null overlay Log: awslogs fluentd gcplogs gelf journald json-file local logentries splunk syslogSwarm: inactiveRuntimes: runcDefault Runtime: runcInit Binary: docker-initcontainerd version: bb71b10fd8f58240ca47fbb579b9d1028eea7c84runc version: 2b18fe1d885ee5083ef9f0838fee39b62d653e30init version: fec3683Security Options: apparmor seccomp  Profile: defaultKernel Version: 4.15.0-51-genericOperating System: Ubuntu 18.04.2 LTSOSType: linuxArchitecture: x86_64CPUs: 2Total Memory: 1.924GiBName: kubernetes-masterID: PJ4H:7AF2:P5UT:6FMR:W4DI:SSWR:IQQR:J6QO:ARES:BOAC:ZVMO:SV2YDocker Root Dir: /var/lib/dockerDebug Mode <span class="token punctuation">(</span>client<span class="token punctuation">)</span>: <span class="token boolean">false</span>Debug Mode <span class="token punctuation">(</span>server<span class="token punctuation">)</span>: <span class="token boolean">false</span>Registry: https://index.docker.io/v1/Labels:Experimental: <span class="token boolean">false</span>Insecure Registries: 127.0.0.0/8<span class="token comment" spellcheck="true">## 这里是你配置的镜像加速器</span>Registry Mirrors: https://xxxxxxxx.mirror.aliyuncs.com/Live Restore Enabled: <span class="token boolean">false</span>Product License: Community EngineWARNING: No swap limit support<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="运行第一个容器"><a href="#运行第一个容器" class="headerlink" title="运行第一个容器"></a>运行第一个容器</h2><p>我们以 Nginx 为例，体验 Docker 是如何运行容器的</p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 下载镜像</span>docker pull nginx<span class="token comment" spellcheck="true"># 运行容器</span>docker run --name nginx-container -p 80:80 -d nginx<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>浏览器输入虚拟机地址即可访问 Nginx</p><p><img src="/docker/Lusifer_20190616095948.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker 简介</title>
      <link href="/2019/11/22/018.Docker-%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/22/018.Docker-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker-简介"><a href="#Docker-简介" class="headerlink" title="Docker 简介"></a>Docker 简介</h1><h2 id="什么是-Docker"><a href="#什么是-Docker" class="headerlink" title="什么是 Docker"></a>什么是 Docker</h2><p>官网地址：<a href="https://www.docker.com/" target="_blank" rel="noopener">https://www.docker.com/</a></p><p>Docker 最初是 dotCloud 公司创始人 Solomon Hykes 在法国期间发起的一个公司内部项目，它是基于 dotCloud 公司多年云服务技术的一次革新，并于 [2013 年 3 月以 Apache 2.0 授权协议开源][docker-soft]，主要项目代码在 <a href="https://github.com/moby/moby" target="_blank" rel="noopener">GitHub</a> 上进行维护。Docker 项目后来还加入了 Linux 基金会，并成立推动 <a href="https://www.opencontainers.org/" target="_blank" rel="noopener">开放容器联盟（OCI）</a>。</p><p>Docker 自开源后受到广泛的关注和讨论，至今其 GitHub 项目已经超过 4 万 6 千个星标和一万多个 fork。甚至由于 Docker 项目的火爆，在 2013 年底，<a href="https://blog.docker.com/2013/10/dotcloud-is-becoming-docker-inc/" target="_blank" rel="noopener">dotCloud 公司决定改名为 Docker</a>。Docker 最初是在 Ubuntu 12.04 上开发实现的；Red Hat 则从 RHEL 6.5 开始对 Docker 进行支持；Google 也在其 PaaS 产品中广泛应用 Docker。</p><p>Docker 使用 Google 公司推出的 <a href="https://golang.org/" target="_blank" rel="noopener">Go 语言</a> 进行开发实现，基于 Linux 内核的 <a href="https://zh.wikipedia.org/wiki/Cgroups" target="_blank" rel="noopener">cgroup</a>，<a href="https://en.wikipedia.org/wiki/Linux_namespaces" target="_blank" rel="noopener">namespace</a>，以及  <a href="https://en.wikipedia.org/wiki/Aufs" target="_blank" rel="noopener">AUFS</a> 类的 <a href="https://en.wikipedia.org/wiki/Union_mount" target="_blank" rel="noopener">Union FS</a> 等技术，对进程进行封装隔离，属于 <a href="https://en.wikipedia.org/wiki/Operating-system-level_virtualization" target="_blank" rel="noopener">操作系统层面的虚拟化技术</a>。由于隔离的进程独立于宿主和其它的隔离的进程，因此也称其为 <strong>容器</strong> 。最初实现是基于 <a href="https://linuxcontainers.org/lxc/introduction/" target="_blank" rel="noopener">LXC</a>，从 0.7 版本以后开始去除 LXC，转而使用自行开发的 <a href="https://github.com/docker/libcontainer" target="_blank" rel="noopener">libcontainer</a>，从 1.11 开始，则进一步演进为使用 <a href="https://github.com/opencontainers/runc" target="_blank" rel="noopener">runC</a> 和 <a href="https://github.com/containerd/containerd" target="_blank" rel="noopener">containerd</a>。</p><p>Docker 在容器的基础上，进行了进一步的封装，从文件系统、网络互联到进程隔离等等，极大的简化了容器的创建和维护。使得 Docker 技术比虚拟机技术更为轻便、快捷。</p><p>下面的图片比较了 Docker 和传统虚拟化方式的不同之处。传统虚拟机技术是虚拟出一套硬件后，在其上运行一个完整操作系统，在该系统上再运行所需应用进程；而容器内的应用进程直接运行于宿主的内核，容器内没有自己的内核，而且也没有进行硬件虚拟。因此容器要比传统虚拟机更为轻便。</p><p><img src="/docker/Container@2x.png" alt="容器"></p><p><img src="/docker/VM@2x.png" alt="虚拟机"></p><h2 id="为什么需要-Docker"><a href="#为什么需要-Docker" class="headerlink" title="为什么需要 Docker"></a>为什么需要 Docker</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>作为一种新兴的虚拟化方式，Docker 跟传统的虚拟化方式相比具有众多的优势。</p><h3 id="更高效的利用系统资源"><a href="#更高效的利用系统资源" class="headerlink" title="更高效的利用系统资源"></a>更高效的利用系统资源</h3><p>由于容器不需要进行硬件虚拟以及运行完整操作系统等额外开销，Docker 对系统资源的利用率更高。无论是应用执行速度、内存损耗或者文件存储速度，都要比传统虚拟机技术更高效。因此，相比虚拟机技术，一个相同配置的主机，往往可以运行更多数量的应用。</p><h3 id="更快速的启动时间"><a href="#更快速的启动时间" class="headerlink" title="更快速的启动时间"></a>更快速的启动时间</h3><p>传统的虚拟机技术启动应用服务往往需要数分钟，而 Docker 容器应用，由于直接运行于宿主内核，无需启动完整的操作系统，因此可以做到秒级、甚至毫秒级的启动时间。大大的节约了开发、测试、部署的时间。</p><h3 id="一致的运行环境"><a href="#一致的运行环境" class="headerlink" title="一致的运行环境"></a>一致的运行环境</h3><p>开发过程中一个常见的问题是环境一致性问题。由于开发环境、测试环境、生产环境不一致，导致有些 bug 并未在开发过程中被发现。而 Docker 的镜像提供了除内核外完整的运行时环境，确保了应用运行环境一致性，从而不会再出现 <strong>「这段代码在我机器上没问题啊」</strong> 这类问题。</p><h3 id="持续交付和部署"><a href="#持续交付和部署" class="headerlink" title="持续交付和部署"></a>持续交付和部署</h3><p>对开发和运维（<a href="https://zh.wikipedia.org/wiki/DevOps" target="_blank" rel="noopener">DevOps</a>）人员来说，最希望的就是一次创建或配置，可以在任意地方正常运行。</p><p>使用 Docker 可以通过定制应用镜像来实现持续集成、持续交付、部署。开发人员可以通过 <code>Dockerfile</code> 来进行镜像构建，并结合 <a href="https://en.wikipedia.org/wiki/Continuous_integration" target="_blank" rel="noopener">持续集成(Continuous Integration)</a> 系统进行集成测试，而运维人员则可以直接在生产环境中快速部署该镜像，甚至结合 <a href="https://en.wikipedia.org/wiki/Continuous_delivery" target="_blank" rel="noopener">持续部署(Continuous Delivery/Deployment)</a> 系统进行自动部署。</p><p>而且使用 <code>Dockerfile</code> 使镜像构建透明化，不仅仅开发团队可以理解应用运行环境，也方便运维团队理解应用运行所需条件，帮助更好的生产环境中部署该镜像。</p><h3 id="更轻松的迁移"><a href="#更轻松的迁移" class="headerlink" title="更轻松的迁移"></a>更轻松的迁移</h3><p>由于 Docker 确保了执行环境的一致性，使得应用的迁移更加容易。Docker 可以在很多平台上运行，无论是物理机、虚拟机、公有云、私有云，甚至是笔记本，其运行结果是一致的。因此用户可以很轻易的将在一个平台上运行的应用，迁移到另一个平台上，而不用担心运行环境的变化导致应用无法正常运行的情况。</p><h3 id="更轻松的维护和扩展"><a href="#更轻松的维护和扩展" class="headerlink" title="更轻松的维护和扩展"></a>更轻松的维护和扩展</h3><p>Docker 使用的分层存储以及镜像的技术，使得应用重复部分的复用更为容易，也使得应用的维护更新更加简单，基于基础镜像进一步扩展镜像也变得非常简单。此外，Docker 团队同各个开源项目团队一起维护了一大批高质量的 <a href="https://hub.docker.com/search/?q=&source=verified&type=image" target="_blank" rel="noopener">官方镜像</a>，既可以直接在生产环境使用，又可以作为基础进一步定制，大大的降低了应用服务的镜像制作成本。</p><h3 id="对比传统虚拟机总结"><a href="#对比传统虚拟机总结" class="headerlink" title="对比传统虚拟机总结"></a>对比传统虚拟机总结</h3><table><thead><tr><th align="left">特性</th><th align="left">容器</th><th align="left">虚拟机</th></tr></thead><tbody><tr><td align="left">启动</td><td align="left">秒级</td><td align="left">分钟级</td></tr><tr><td align="left">硬盘使用</td><td align="left">一般为 <code>MB</code></td><td align="left">一般为 <code>GB</code></td></tr><tr><td align="left">性能</td><td align="left">接近原生</td><td align="left">弱于</td></tr><tr><td align="left">系统支持量</td><td align="left">单机支持上千个容器</td><td align="left">一般几十个</td></tr></tbody></table><p>[docker-soft]: </p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux LVM 磁盘扩容</title>
      <link href="/2019/11/21/017.Linux-LVM%20%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/"/>
      <url>/2019/11/21/017.Linux-LVM%20%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-LVM-磁盘扩容"><a href="#Linux-LVM-磁盘扩容" class="headerlink" title="Linux LVM 磁盘扩容"></a>Linux LVM 磁盘扩容</h1><h2 id="LVM-的基本概念"><a href="#LVM-的基本概念" class="headerlink" title="LVM 的基本概念"></a>LVM 的基本概念</h2><ul><li><strong>物理卷 Physical Volume (PV)：</strong> 可以在上面建立卷组的媒介，可以是硬盘分区，也可以是硬盘本身或者回环文件（loopback file）。物理卷包括一个特殊的 header，其余部分被切割为一块块物理区域（physical extents）</li><li><strong>卷组 Volume group (VG)：</strong> 将一组物理卷收集为一个管理单元</li><li><strong>逻辑卷 Logical volume (LV)：</strong> 虚拟分区，由物理区域（physical extents）组成</li><li><strong>物理区域 Physical extent (PE)：</strong> 硬盘可供指派给逻辑卷的最小单位（通常为 4MB）</li></ul><h2 id="磁盘操作相关命令"><a href="#磁盘操作相关命令" class="headerlink" title="磁盘操作相关命令"></a>磁盘操作相关命令</h2><ul><li>查看挂载点</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">df</span> -h<span class="token comment" spellcheck="true"># 输出如下</span>Filesystem                         Size  Used Avail Use% Mounted onudev                               955M     0  955M   0% /devtmpfs                              198M  1.8M  196M   1% /run<span class="token comment" spellcheck="true">## 此处为我们磁盘的挂载点</span>/dev/mapper/ubuntu--vg-ubuntu--lv   19G  6.0G   12G  35% /tmpfs                              986M     0  986M   0% /dev/shmtmpfs                              5.0M     0  5.0M   0% /run/locktmpfs                              986M     0  986M   0% /sys/fs/cgroup/dev/loop1                          91M   91M     0 100% /snap/core/6350/dev/loop0                          89M   89M     0 100% /snap/core/6964/dev/sda2                          976M  143M  767M  16% /boot<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>显示当前的 logical volume：<code>lvdisplay</code></li></ul><pre class="line-numbers language-bash"><code class="language-bash">lvdisplay<span class="token comment" spellcheck="true"># 输出如下</span>--- Logical volume ---LV Path                /dev/ubuntu-vg/ubuntu-lvLV Name                ubuntu-lvVG Name                ubuntu-vgLV UUID                e2fKkR-oZeH-WV2A-ltCi-P76v-N9yv-aUtIg1LV Write Access        read/writeLV Creation host, <span class="token function">time</span> ubuntu-server, 2019-05-14 03:13:57 +0800LV Status              available<span class="token comment" spellcheck="true"># open                 1</span>LV Size                <span class="token operator">&lt;</span>19.00 GiBCurrent LE             4863Segments               1Allocation             inheritRead ahead sectors     auto- currently <span class="token keyword">set</span> to     256Block device           253:0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>显示当前的 volume group</li></ul><pre class="line-numbers language-bash"><code class="language-bash">vgdisplay<span class="token comment" spellcheck="true"># 输出如下</span>--- Volume group ---VG Name               ubuntu-vgSystem ID             Format                lvm2Metadata Areas        1Metadata Sequence No  2VG Access             read/writeVG Status             resizableMAX LV                0Cur LV                1Open LV               1Max PV                0Cur PV                1Act PV                1<span class="token comment" spellcheck="true">## 这里应该是你当前的可用空间大小，待扩容完毕，这里显示的应该是最终的大小</span>VG Size               <span class="token operator">&lt;</span>19.00 GiBPE Size               4.00 MiBTotal PE              4863Alloc PE / Size       4863 / <span class="token operator">&lt;</span>19.00 GiBFree  PE / Size       0 / 0   VG UUID               dhI9ns-7lOI-pXf8-IOWL-F96N-JIYG-ZF6u82<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>显示当前的 physical volume</li></ul><pre class="line-numbers language-bash"><code class="language-bash">pvdisplay<span class="token comment" spellcheck="true"># 输出如下</span>--- Physical volume ---PV Name               /dev/sda3VG Name               ubuntu-vgPV Size               <span class="token operator">&lt;</span>19.00 GiB / not usable 0   Allocatable           <span class="token function">yes</span> <span class="token punctuation">(</span>but full<span class="token punctuation">)</span>PE Size               4.00 MiBTotal PE              4863Free PE               0Allocated PE          4863PV UUID               TDFe2b-xsce-R8So-ldxR-ohcp-fx5J-n2JNOa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="开始-LVM-扩容"><a href="#开始-LVM-扩容" class="headerlink" title="开始 LVM 扩容"></a>开始 LVM 扩容</h2><h3 id="查看-fdisk"><a href="#查看-fdisk" class="headerlink" title="查看 fdisk"></a>查看 fdisk</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">fdisk</span> -l<span class="token comment" spellcheck="true"># 输出如下</span>Disk /dev/loop0: 88.4 MiB, 92733440 bytes, 181120 sectorsUnits: sectors of 1 * 512 <span class="token operator">=</span> 512 bytesSector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512 bytes / 512 bytesI/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: 512 bytes / 512 bytesDisk /dev/loop1: 91 MiB, 95408128 bytes, 186344 sectorsUnits: sectors of 1 * 512 <span class="token operator">=</span> 512 bytesSector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512 bytes / 512 bytesI/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: 512 bytes / 512 bytesDisk /dev/sda: 20 GiB, 21474836480 bytes, 41943040 sectorsUnits: sectors of 1 * 512 <span class="token operator">=</span> 512 bytesSector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512 bytes / 512 bytesI/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: 512 bytes / 512 bytesDisklabel type: gptDisk identifier: F96F20D7-1F28-4B03-87CF-4FA3E81FDE29Device       Start      End  Sectors Size Type/dev/sda1     2048     4095     2048   1M BIOS boot/dev/sda2     4096  2101247  2097152   1G Linux filesystem/dev/sda3  2101248 41940991 39839744  19G Linux filesystemDisk /dev/mapper/ubuntu--vg-ubuntu--lv: 19 GiB, 20396900352 bytes, 39837696 sectorsUnits: sectors of 1 * 512 <span class="token operator">=</span> 512 bytesSector size <span class="token punctuation">(</span>logical/physical<span class="token punctuation">)</span>: 512 bytes / 512 bytesI/O size <span class="token punctuation">(</span>minimum/optimal<span class="token punctuation">)</span>: 512 bytes / 512 bytes<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看所有储存设备"><a href="#查看所有储存设备" class="headerlink" title="查看所有储存设备"></a>查看所有储存设备</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">fdisk</span> -l <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">'/dev'</span><span class="token comment" spellcheck="true"># 输出如下</span>Disk /dev/loop0: 88.4 MiB, 92733440 bytes, 181120 sectorsDisk /dev/loop1: 91 MiB, 95408128 bytes, 186344 sectors<span class="token comment" spellcheck="true">## 目前只有一块磁盘 sda</span>Disk /dev/sda: 20 GiB, 21474836480 bytes, 41943040 sectors/dev/sda1     2048     4095     2048   1M BIOS boot/dev/sda2     4096  2101247  2097152   1G Linux filesystem/dev/sda3  2101248 41940991 39839744  19G Linux filesystemDisk /dev/mapper/ubuntu--vg-ubuntu--lv: 19 GiB, 20396900352 bytes, 39837696 sectors<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 在虚拟机中挂载多一块磁盘，再操作</span><span class="token function">fdisk</span> -l <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">'/dev'</span><span class="token comment" spellcheck="true"># 输出如下</span>Disk /dev/loop0: 88.4 MiB, 92733440 bytes, 181120 sectorsDisk /dev/loop1: 91 MiB, 95408128 bytes, 186344 sectors<span class="token comment" spellcheck="true">## 挂载的第一块磁盘 sda</span>Disk /dev/sda: 20 GiB, 21474836480 bytes, 41943040 sectors/dev/sda1     2048     4095     2048   1M BIOS boot/dev/sda2     4096  2101247  2097152   1G Linux filesystem/dev/sda3  2101248 41940991 39839744  19G Linux filesystem<span class="token comment" spellcheck="true">## 挂载的第二块磁盘 sdb</span>Disk /dev/sdb: 20 GiB, 21474836480 bytes, 41943040 sectorsDisk /dev/mapper/ubuntu--vg-ubuntu--lv: 19 GiB, 20396900352 bytes, 39837696 sectors<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建-sdb-分区"><a href="#创建-sdb-分区" class="headerlink" title="创建 sdb 分区"></a>创建 sdb 分区</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">fdisk</span> /dev/sdb<span class="token comment" spellcheck="true"># 输出如下</span>Welcome to <span class="token function">fdisk</span> <span class="token punctuation">(</span>util-linux 2.31.1<span class="token punctuation">)</span>.Changes will remain <span class="token keyword">in</span> memory only, <span class="token keyword">until</span> you decide to <span class="token function">write</span> them.Be careful before using the <span class="token function">write</span> command.Device does not contain a recognized partition table.Created a new DOS disklabel with disk identifier 0x0de15f1d.<span class="token comment" spellcheck="true">## 在此处输入命令</span><span class="token comment" spellcheck="true">## n：新建分区</span><span class="token comment" spellcheck="true">## l: 选择逻辑分区，如果没有，则首先创建主分区（p），然后再添加逻辑分区（硬盘最多四个分区 P-P-P-P 或 P-P-P-E）</span>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> help<span class="token punctuation">)</span>: nPartition <span class="token function">type</span>   p   primary <span class="token punctuation">(</span>0 primary, 0 extended, 4 free<span class="token punctuation">)</span>   e   extended <span class="token punctuation">(</span>container <span class="token keyword">for</span> logical partitions<span class="token punctuation">)</span>Select <span class="token punctuation">(</span>default p<span class="token punctuation">)</span>:Using default response p.Partition number <span class="token punctuation">(</span>1-4, default 1<span class="token punctuation">)</span>: First sector <span class="token punctuation">(</span>2048-41943039, default 2048<span class="token punctuation">)</span>: Last sector, +sectors or +size<span class="token punctuation">{</span>K,M,G,T,P<span class="token punctuation">}</span> <span class="token punctuation">(</span>2048-41943039, default 41943039<span class="token punctuation">)</span>: Created a new partition 1 of <span class="token function">type</span> <span class="token string">'Linux'</span> and of size 20 GiB.<span class="token comment" spellcheck="true">## 在此处输入命令</span><span class="token comment" spellcheck="true">## w：写入磁盘</span>Command <span class="token punctuation">(</span>m <span class="token keyword">for</span> help<span class="token punctuation">)</span>: wThe partition table has been altered.Calling ioctl<span class="token punctuation">(</span><span class="token punctuation">)</span> to re-read partition table.Syncing disks.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="格式化磁盘"><a href="#格式化磁盘" class="headerlink" title="格式化磁盘"></a>格式化磁盘</h3><ul><li>查看分区</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">fdisk</span> -l <span class="token operator">|</span><span class="token function">grep</span> <span class="token string">'/dev'</span><span class="token comment" spellcheck="true"># 输出如下</span>Disk /dev/loop0: 88.4 MiB, 92733440 bytes, 181120 sectorsDisk /dev/loop1: 91 MiB, 95408128 bytes, 186344 sectorsDisk /dev/sda: 20 GiB, 21474836480 bytes, 41943040 sectors/dev/sda1     2048     4095     2048   1M BIOS boot/dev/sda2     4096  2101247  2097152   1G Linux filesystem/dev/sda3  2101248 41940991 39839744  19G Linux filesystemDisk /dev/sdb: 20 GiB, 21474836480 bytes, 41943040 sectors<span class="token comment" spellcheck="true">## 此时可以看见新创建的分区 /dev/sdb1</span>/dev/sdb1        2048 41943039 41940992  20G 83 LinuxDisk /dev/mapper/ubuntu--vg-ubuntu--lv: 19 GiB, 20396900352 bytes, 39837696 sectors<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>格式化</li></ul><pre class="line-numbers language-bash"><code class="language-bash">mkfs -t ext4 /dev/sdb1<span class="token comment" spellcheck="true"># 输出如下</span>mke2fs 1.44.1 <span class="token punctuation">(</span>24-Mar-2018<span class="token punctuation">)</span>Creating filesystem with 5242624 4k blocks and 1310720 inodesFilesystem UUID: 6f11063f-c118-4099-90fc-2b083c181b23Superblock backups stored on blocks:         32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208,         4096000Allocating group tables: <span class="token keyword">done</span>                            Writing inode tables: <span class="token keyword">done</span>                            Creating journal <span class="token punctuation">(</span>32768 blocks<span class="token punctuation">)</span>: <span class="token keyword">done</span>Writing superblocks and filesystem accounting information: <span class="token keyword">done</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="创建-PV"><a href="#创建-PV" class="headerlink" title="创建 PV"></a>创建 PV</h3><pre class="line-numbers language-bash"><code class="language-bash">pvcreate /dev/sdb1<span class="token comment" spellcheck="true"># 输出如下</span>WARNING: ext4 signature detected on /dev/sdb1 at offset 1080. Wipe it? <span class="token punctuation">[</span>y/n<span class="token punctuation">]</span>: y  Wiping ext4 signature on /dev/sdb1.  Physical volume <span class="token string">"/dev/sdb1"</span> successfully created.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="查看卷组"><a href="#查看卷组" class="headerlink" title="查看卷组"></a>查看卷组</h3><pre class="line-numbers language-bash"><code class="language-bash">pvscan<span class="token comment" spellcheck="true"># 输出如下</span>PV /dev/sda3   VG ubuntu-vg       lvm2 <span class="token punctuation">[</span><span class="token operator">&lt;</span>19.00 GiB / 0    free<span class="token punctuation">]</span>PV /dev/sdb1                      lvm2 <span class="token punctuation">[</span><span class="token operator">&lt;</span>20.00 GiB<span class="token punctuation">]</span>Total: 2 <span class="token punctuation">[</span><span class="token operator">&lt;</span>39.00 GiB<span class="token punctuation">]</span> / <span class="token keyword">in</span> use: 1 <span class="token punctuation">[</span><span class="token operator">&lt;</span>19.00 GiB<span class="token punctuation">]</span> / <span class="token keyword">in</span> no VG: 1 <span class="token punctuation">[</span><span class="token operator">&lt;</span>20.00 GiB<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="扩容-VG"><a href="#扩容-VG" class="headerlink" title="扩容 VG"></a>扩容 VG</h3><ul><li>查看 VG</li></ul><pre class="line-numbers language-bash"><code class="language-bash">vgdisplay<span class="token comment" spellcheck="true"># 输出如下</span>--- Volume group ---<span class="token comment" spellcheck="true">## 我们需要用到 VG Name</span>VG Name               ubuntu-vgSystem ID             Format                lvm2Metadata Areas        1Metadata Sequence No  2VG Access             read/writeVG Status             resizableMAX LV                0Cur LV                1Open LV               1Max PV                0Cur PV                1Act PV                1VG Size               <span class="token operator">&lt;</span>19.00 GiBPE Size               4.00 MiBTotal PE              4863Alloc PE / Size       4863 / <span class="token operator">&lt;</span>19.00 GiBFree  PE / Size       0 / 0   VG UUID               dhI9ns-7lOI-pXf8-IOWL-F96N-JIYG-ZF6u82<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>扩容 VG</li></ul><pre class="line-numbers language-bash"><code class="language-bash">vgextend ubuntu-vg /dev/sdb1<span class="token comment" spellcheck="true"># 输出如下</span>Volume group <span class="token string">"ubuntu-vg"</span> successfully extended<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="扩容-LV"><a href="#扩容-LV" class="headerlink" title="扩容 LV"></a>扩容 LV</h3><ul><li>查看 VG</li></ul><pre class="line-numbers language-bash"><code class="language-bash">vgdisplay<span class="token comment" spellcheck="true"># 输出如下</span>--- Volume group ---VG Name               ubuntu-vgSystem ID             Format                lvm2Metadata Areas        2Metadata Sequence No  3VG Access             read/writeVG Status             resizableMAX LV                0Cur LV                1Open LV               1Max PV                0Cur PV                2Act PV                2VG Size               38.99 GiBPE Size               4.00 MiBTotal PE              9982Alloc PE / Size       4863 / <span class="token operator">&lt;</span>19.00 GiB<span class="token comment" spellcheck="true">## 这里是可以扩容的大小</span>Free  PE / Size       5119 / <span class="token operator">&lt;</span>20.00 GiBVG UUID               dhI9ns-7lOI-pXf8-IOWL-F96N-JIYG-ZF6u82<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>查看 LV</li></ul><pre class="line-numbers language-bash"><code class="language-bash">lvdisplay<span class="token comment" spellcheck="true"># 输出如下</span>--- Logical volume ---<span class="token comment" spellcheck="true">## 我们需要用到 LV Path</span>LV Path                /dev/ubuntu-vg/ubuntu-lvLV Name                ubuntu-lvVG Name                ubuntu-vgLV UUID                e2fKkR-oZeH-WV2A-ltCi-P76v-N9yv-aUtIg1LV Write Access        read/writeLV Creation host, <span class="token function">time</span> ubuntu-server, 2019-05-14 03:13:57 +0800LV Status              available<span class="token comment" spellcheck="true"># open                 1</span>LV Size                <span class="token operator">&lt;</span>19.00 GiBCurrent LE             4863Segments               1Allocation             inheritRead ahead sectors     auto- currently <span class="token keyword">set</span> to     256Block device           253:0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>扩容 LV</li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 按固定大小追加</span>lvextend -L +10G /dev/ubuntu-vg/ubuntu-lv<span class="token comment" spellcheck="true"># 按百分比追加</span>lvextend -l +100%FREE /dev/ubuntu-vg/ubuntu-lv<span class="token comment" spellcheck="true"># 输出如下</span>Size of logical volume ubuntu-vg/ubuntu-lv changed from <span class="token operator">&lt;</span>19.00 GiB <span class="token punctuation">(</span>4863 extents<span class="token punctuation">)</span> to 38.99 GiB <span class="token punctuation">(</span>9982 extents<span class="token punctuation">)</span>.Logical volume ubuntu-vg/ubuntu-lv successfully resized.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>刷新分区</li></ul><pre class="line-numbers language-bash"><code class="language-bash">resize2fs /dev/ubuntu-vg/ubuntu-lv<span class="token comment" spellcheck="true"># 输出如下</span>Filesystem at /dev/ubuntu-vg/ubuntu-lv is mounted on /<span class="token punctuation">;</span> on-line resizing requiredold_desc_blocks <span class="token operator">=</span> 3, new_desc_blocks <span class="token operator">=</span> 5The filesystem on /dev/ubuntu-vg/ubuntu-lv is now 10221568 <span class="token punctuation">(</span>4k<span class="token punctuation">)</span> blocks long.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>验证是否成功</li></ul><pre class="line-numbers language-bash"><code class="language-bash">lvdisplay--- Logical volume ---LV Path                /dev/ubuntu-vg/ubuntu-lvLV Name                ubuntu-lvVG Name                ubuntu-vgLV UUID                e2fKkR-oZeH-WV2A-ltCi-P76v-N9yv-aUtIg1LV Write Access        read/writeLV Creation host, <span class="token function">time</span> ubuntu-server, 2019-05-14 03:13:57 +0800LV Status              available<span class="token comment" spellcheck="true"># open                 1</span><span class="token comment" spellcheck="true">## 可以看到磁盘扩容成功了</span>LV Size                38.99 GiBCurrent LE             9982Segments               2Allocation             inheritRead ahead sectors     auto- currently <span class="token keyword">set</span> to     256Block device           253:0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> 不要卸载扩容的磁盘，可能出现丢失数据或是系统无法启动</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 部署应用程序</title>
      <link href="/2019/11/21/016.Linux-%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/"/>
      <url>/2019/11/21/016.Linux-%E9%83%A8%E7%BD%B2%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-部署应用程序"><a href="#Linux-部署应用程序" class="headerlink" title="Linux 部署应用程序"></a>Linux 部署应用程序</h1><h2 id="安装-Java"><a href="#安装-Java" class="headerlink" title="安装 Java"></a>安装 Java</h2><h3 id="解压缩并移动到指定目录"><a href="#解压缩并移动到指定目录" class="headerlink" title="解压缩并移动到指定目录"></a>解压缩并移动到指定目录</h3><ul><li>解压缩：<code>tar -zxvf jdk-8u152-linux-x64.tar.gz</code></li><li>创建目录：<code>mkdir -p /usr/local/java</code></li><li>移动安装包：<code>mv jdk1.8.0_152/ /usr/local/java/</code></li><li>设置所有者：<code>chown -R root:root /usr/local/java/</code></li></ul><h3 id="配置环境变量"><a href="#配置环境变量" class="headerlink" title="配置环境变量"></a>配置环境变量</h3><ul><li>配置系统环境变量：<code>vi /etc/environment</code></li><li>修改系统环境变量</li></ul><pre><code>PATH=&quot;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games&quot;export JAVA_HOME=/usr/local/java/jdk1.8.0_152export JRE_HOME=/usr/local/java/jdk1.8.0_152/jreexport CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/lib</code></pre><ul><li>配置用户环境变量：<code>vi /etc/profile</code></li><li>修改用户环境变量</li></ul><pre><code>if [ &quot;$PS1&quot; ]; then  if [ &quot;$BASH&quot; ] &amp;&amp; [ &quot;$BASH&quot; != &quot;/bin/sh&quot; ]; then    # The file bash.bashrc already sets the default PS1.    # PS1=&#39;\h:\w\$ &#39;    if [ -f /etc/bash.bashrc ]; then      . /etc/bash.bashrc    fi  else    if [ &quot;`id -u`&quot; -eq 0 ]; then      PS1=&#39;# &#39;    else      PS1=&#39;$ &#39;    fi  fifiexport JAVA_HOME=/usr/local/java/jdk1.8.0_152export JRE_HOME=/usr/local/java/jdk1.8.0_152/jreexport CLASSPATH=$CLASSPATH:$JAVA_HOME/lib:$JAVA_HOME/jre/libexport PATH=$JAVA_HOME/bin:$JAVA_HOME/jre/bin:$PATH:$HOME/binif [ -d /etc/profile.d ]; then  for i in /etc/profile.d/*.sh; do    if [ -r $i ]; then      . $i    fi  done  unset ifi</code></pre><ul><li>使用户环境变量生效：<code>source /etc/profile</code></li></ul><h3 id="验证安装是否成功"><a href="#验证安装是否成功" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h3><pre class="line-numbers language-bash"><code class="language-bash">java -version<span class="token comment" spellcheck="true"># 输出如下</span>java version <span class="token string">"1.8.0_152"</span>Java<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> SE Runtime Environment <span class="token punctuation">(</span>build 1.8.0_152-b16<span class="token punctuation">)</span>Java HotSpot<span class="token punctuation">(</span>TM<span class="token punctuation">)</span> 64-Bit Server VM <span class="token punctuation">(</span>build 25.152-b16, mixed mode<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="安装-Tomcat"><a href="#安装-Tomcat" class="headerlink" title="安装 Tomcat"></a>安装 Tomcat</h2><h3 id="解压缩并移动到指定目录-1"><a href="#解压缩并移动到指定目录-1" class="headerlink" title="解压缩并移动到指定目录"></a>解压缩并移动到指定目录</h3><ul><li>解压缩：<code>tar -zxvf apache-tomcat-8.5.23.tar.gz</code></li><li>变更目录：<code>mv apache-tomcat-8.5.23 tomcat</code></li><li>移动目录：<code>mv tomcat/ /usr/local/</code></li></ul><h3 id="验证安装是否成功-1"><a href="#验证安装是否成功-1" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h3><ul><li>启动：<ul><li><code>/usr/local/tomcat/bin/startup.sh</code></li><li><code>./startup.sh</code></li></ul></li><li>停止：<ul><li><code>/usr/local/tomcat/bin/shutdown.sh</code></li><li><code>./shutdown.sh</code></li></ul></li></ul><h2 id="安装-MySQL"><a href="#安装-MySQL" class="headerlink" title="安装 MySQL"></a>安装 MySQL</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><ul><li>更新数据源：<code>apt-get update</code></li><li>安装数据库：<code>apt-get install mysql-server</code></li></ul><blockquote><p><strong>注意：</strong> 系统将提示您在安装过程中创建 root 密码。选择一个安全的密码，并确保你记住它，因为你以后需要它。接下来，我们将完成 MySQL 的配置。</p></blockquote><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><blockquote><p><strong>注意：</strong> 因为是全新安装，您需要运行附带的安全脚本。这会更改一些不太安全的默认选项，例如远程 root 登录和示例用户。在旧版本的 MySQL 上，您需要手动初始化数据目录，但最新的 MySQL 已经自动完成了。</p></blockquote><pre class="line-numbers language-bash"><code class="language-bash">mysql_secure_installation<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将提示您输入您在之前步骤中创建的 root 密码。您可以按 Y，然后 ENTER 接受所有后续问题的默认值，但是要询问您是否要更改 root 密码。您只需在之前步骤中进行设置即可，因此无需现在更改。</p><h3 id="验证安装是否成功-2"><a href="#验证安装是否成功-2" class="headerlink" title="验证安装是否成功"></a>验证安装是否成功</h3><p>按上边方式安装完成后，MySQL 应该已经开始自动运行了。要测试它，请检查其状态。</p><pre class="line-numbers language-bash"><code class="language-bash">systemctl status mysql<span class="token comment" spellcheck="true"># 输出如下</span>● mysql.service - MySQL Community Server   Loaded: loaded <span class="token punctuation">(</span>/lib/systemd/system/mysql.service<span class="token punctuation">;</span> enabled<span class="token punctuation">;</span> vendor preset: enabled<span class="token punctuation">)</span>   Active: active <span class="token punctuation">(</span>running<span class="token punctuation">)</span> since Tue 2017-11-21 13:04:34 CST<span class="token punctuation">;</span> 3min 24s ago Main PID: 2169 <span class="token punctuation">(</span>mysqld<span class="token punctuation">)</span>   CGroup: /system.slice/mysql.service           └─2169 /usr/sbin/mysqldNov 21 13:04:33 ubuntu systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Starting MySQL Community Server<span class="token punctuation">..</span>.Nov 21 13:04:34 ubuntu systemd<span class="token punctuation">[</span>1<span class="token punctuation">]</span>: Started MySQL Community Server.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><ul><li>查看版本：<code>mysqladmin -p -u root version</code></li><li>启动：<code>service mysql start</code></li><li>停止：<code>service mysql stop</code></li><li>重启：<code>service mysql restart</code></li><li>登录：<code>mysql -u root -p</code></li><li>授权：<code>grant all privileges on *.* to &#39;root&#39;@&#39;%&#39; identified by &#39;Your Password&#39;;</code></li></ul><h3 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h3><h4 id="配置使用密码方式登录"><a href="#配置使用密码方式登录" class="headerlink" title="配置使用密码方式登录"></a>配置使用密码方式登录</h4><p>在安装过程中可能没有提示密码设置的环节此时默认使用的是 <strong>auth_socket</strong> 方式登录，我们需要修改为 <strong>mysql_native_password</strong> 方式，操作步骤如下</p><ul><li>本地登录 MySQL，此时无需输入密码</li></ul><pre class="line-numbers language-bash"><code class="language-bash">mysql -u root -p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>切换数据库到 mysql</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">use</span> mysql<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>修改 root 账号密码</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">update</span> <span class="token keyword">user</span> <span class="token keyword">set</span> authentication_string<span class="token operator">=</span>password<span class="token punctuation">(</span><span class="token string">'123456'</span><span class="token punctuation">)</span> <span class="token keyword">where</span> <span class="token keyword">user</span><span class="token operator">=</span><span class="token string">'root'</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>设置登录模式</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">update</span> <span class="token keyword">user</span> <span class="token keyword">set</span> plugin<span class="token operator">=</span><span class="token string">"mysql_native_password"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>刷新配置</li></ul><pre class="line-numbers language-sql"><code class="language-sql">flush <span class="token keyword">privileges</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>退出 MySQL</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">exit</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>重新启动 MySQL</li></ul><pre class="line-numbers language-bash"><code class="language-bash">systemctl restart mysql<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="配置远程访问"><a href="#配置远程访问" class="headerlink" title="配置远程访问"></a>配置远程访问</h4><ul><li>修改配置文件</li></ul><pre><code>vi /etc/mysql/mysql.conf.d/mysqld.cnf</code></pre><ul><li>注释掉(语句前面加上 <code>#</code> 即可)：</li></ul><pre><code># bind-address = 127.0.0.1</code></pre><ul><li>重启 MySQL</li></ul><pre><code>service mysql restart</code></pre><ul><li>登录 MySQL</li></ul><pre><code>mysql -u root -p</code></pre><ul><li>授权 root 用户允许所有人连接</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">grant</span> <span class="token keyword">all</span> <span class="token keyword">privileges</span> <span class="token keyword">on</span> <span class="token operator">*</span><span class="token punctuation">.</span><span class="token operator">*</span> <span class="token keyword">to</span> <span class="token string">'root'</span>@'<span class="token operator">%</span><span class="token string">' identified by '</span>Your Password'<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="因弱口令无法成功授权解决步骤"><a href="#因弱口令无法成功授权解决步骤" class="headerlink" title="因弱口令无法成功授权解决步骤"></a>因弱口令无法成功授权解决步骤</h4><ul><li>查看和设置密码安全级别</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> @<span class="token variable">@validate_password_policy</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> validate_password_policy<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>查看和设置密码长度限制</li></ul><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> @<span class="token variable">@validate_password_length</span><span class="token punctuation">;</span><span class="token keyword">set</span> <span class="token keyword">global</span> validate_password_length<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="其它配置"><a href="#其它配置" class="headerlink" title="其它配置"></a>其它配置</h4><p>修改配置文件：<code>vi /etc/mysql/mysql.conf.d/mysqld.cnf</code></p><pre><code>[client]default-character-set=utf8[mysqld]default-storage-engine=INNODBcharacter-set-server=utf8collation-server=utf8_general_cilower-case-table-names=1</code></pre><blockquote><p><strong>注意：</strong> 配置内容追加到对应节点的底部即可</p></blockquote><h2 id="应用部署实战"><a href="#应用部署实战" class="headerlink" title="应用部署实战"></a>应用部署实战</h2><p>请参考本节视频</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 软件包管理</title>
      <link href="/2019/11/21/015.Linux-%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/21/015.Linux-%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-软件包管理"><a href="#Linux-软件包管理" class="headerlink" title="Linux 软件包管理"></a>Linux 软件包管理</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>APT(Advanced Packaging Tool) 是 Debian/Ubuntu 类 Linux 系统中的软件包管理程序, 使用它可以找到想要的软件包, 而且安装、卸载、更新都很简便；也可以用来对 Ubuntu 进行升级; APT 的源文件为 <code>/etc/apt/</code> 目录下的 <code>sources.list</code> 文件。</p><h2 id="修改数据源"><a href="#修改数据源" class="headerlink" title="修改数据源"></a>修改数据源</h2><p>由于国内的网络环境问题，我们需要将 Ubuntu 的数据源修改为国内数据源，操作步骤如下：</p><h3 id="查看系统版本"><a href="#查看系统版本" class="headerlink" title="查看系统版本"></a>查看系统版本</h3><pre class="line-numbers language-bash"><code class="language-bash">lsb_release -a<span class="token comment" spellcheck="true"># 输出如下</span>No LSB modules are available.Distributor ID: UbuntuDescription:    Ubuntu 18.04.2 LTSRelease:        18.04Codename:       bionic<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p><strong>注意：</strong> Codename 为 <code>bionic</code>，该名称为我们 Ubuntu 系统的名称，修改数据源需要用到该名称</p></blockquote><h3 id="编辑数据源"><a href="#编辑数据源" class="headerlink" title="编辑数据源"></a>编辑数据源</h3><pre><code>vi /etc/apt/sources.list</code></pre><p>删除全部内容并修改为</p><pre><code>deb http://mirrors.aliyun.com/ubuntu/ bionic main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-security main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-updates main restricted universe multiversedeb http://mirrors.aliyun.com/ubuntu/ bionic-backports main restricted universe multiverse</code></pre><h3 id="更新数据源"><a href="#更新数据源" class="headerlink" title="更新数据源"></a>更新数据源</h3><pre><code>apt-get update</code></pre><h2 id="常用-APT-命令"><a href="#常用-APT-命令" class="headerlink" title="常用 APT 命令"></a>常用 APT 命令</h2><ul><li>安装软件包：<code>apt-get install &lt;Package Name&gt;</code></li><li>删除软件包：<code>apt-get remove &lt;Package Name&gt;</code></li><li>更新软件包列表：<code>apt-get update</code></li><li>升级有可用更新的系统(<strong>慎用</strong>)：<code>apt-get upgrade</code></li><li>搜索：<code>apt-cache search &lt;Package Name&gt;</code></li><li>获取包信息：<code>apt-cache show &lt;Package Name&gt;</code></li><li>删除包及配置文件：<code>apt-get remove &lt;Package Name&gt; --purge</code></li><li>了解使用依赖：<code>apt-cache depends &lt;Package Name&gt;</code></li><li>查看被哪些包依赖：<code>apt-cache rdepends &lt;Package Name&gt;</code></li><li>安装相关的编译环境：<code>apt-get build-dep &lt;Package Name&gt;</code></li><li>下载源代码：<code>apt-get source &lt;Package Name&gt;</code></li><li>清理无用的包：<code>apt-get clean &amp;&amp; apt-get autoclean</code></li><li>检查是否有损坏的依赖：<code>apt-get check</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 文件权限管理</title>
      <link href="/2019/11/21/014.Linux-%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/21/014.Linux-%E6%96%87%E4%BB%B6%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-文件权限管理"><a href="#Linux-文件权限管理" class="headerlink" title="Linux 文件权限管理"></a>Linux 文件权限管理</h1><h2 id="查看文件和目录的权限"><a href="#查看文件和目录的权限" class="headerlink" title="查看文件和目录的权限"></a>查看文件和目录的权限</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p><code>ls –al</code> 使用 ls 不带参数只显示文件名称，通过 <code>ls –al</code> 可以显示文件或者目录的权限信息。</p><p><code>ls -l 文件名</code> 显示信息包括：文件类型 (<code>d</code> 目录，<code>-</code> 普通文件，<code>l</code> 链接文件)，文件权限，文件的用户，文件的所属组，文件的大小，文件的创建时间，文件的名称</p><p><code>-rw-r--r-- 1 lusifer lusifer 675 Oct 26 17:20 .profile</code></p><ul><li><code>-</code>：普通文件</li><li><code>rw-</code>：说明用户 lusifer 有读写权限，没有运行权限</li><li><code>r--</code>：表示用户组 lusifer 只有读权限，没有写和运行的权限</li><li><code>r--</code>：其他用户只有读权限，没有写权限和运行的权限</li></ul><table><thead><tr><th align="left">-rw-r–r–</th><th align="left">1</th><th align="left">lusifer</th><th align="left">lusifer</th><th align="left">675</th><th align="left">Oct 26 17:20</th><th align="left">.profile</th></tr></thead><tbody><tr><td align="left">文档类型及权限</td><td align="left">连接数</td><td align="left">文档所属用户</td><td align="left">文档所属组</td><td align="left">文档大小</td><td align="left">文档最后被修改日期</td><td align="left">文档名称</td></tr></tbody></table><table><thead><tr><th align="left">-</th><th align="left">rw-</th><th align="left">r–</th><th align="left">r–</th></tr></thead><tbody><tr><td align="left">文档类型</td><td align="left">文档所有者权限（user）</td><td align="left">文档所属用户组权限（group）</td><td align="left">其他用户权限（other）</td></tr></tbody></table><h3 id="文档类型"><a href="#文档类型" class="headerlink" title="文档类型"></a>文档类型</h3><ul><li><code>d</code> 表示目录 </li><li><code>l</code> 表示软连接</li><li><code>–</code> 表示文件</li><li><code>c</code> 表示串行端口字符设备文件</li><li><code>b</code> 表示可供存储的块设备文件</li><li>余下的字符 3 个字符为一组。<code>r</code> 只读，<code>w</code> 可写，<code>x</code> 可执行，<code>-</code> 表示无此权限</li></ul><h3 id="连接数"><a href="#连接数" class="headerlink" title="连接数"></a>连接数</h3><p>指有多少个文件指向同一个索引节点。</p><h3 id="文档所属用户和所属组"><a href="#文档所属用户和所属组" class="headerlink" title="文档所属用户和所属组"></a>文档所属用户和所属组</h3><p>就是文档属于哪个用户和用户组。文件所属用户和组是可以更改的</p><h3 id="文档大小"><a href="#文档大小" class="headerlink" title="文档大小"></a>文档大小</h3><p>默认是 bytes</p><h2 id="更改操作权限"><a href="#更改操作权限" class="headerlink" title="更改操作权限"></a>更改操作权限</h2><h3 id="chown"><a href="#chown" class="headerlink" title="chown"></a>chown</h3><p>是 change owner 的意思，主要作用就是改变文件或者目录所有者，所有者包含用户和用户组</p><ul><li><code>chown [-R] 用户名称 文件或者目录</code></li><li><code>chown [-R] 用户名称 用户组名称 文件或目录</code></li></ul><blockquote><p><strong>-R：</strong> 进行递归式的权限更改，将目录下的所有文件、子目录更新为指定用户组权限</p></blockquote><h3 id="chmod"><a href="#chmod" class="headerlink" title="chmod"></a>chmod</h3><p>改变访问权限</p><ul><li><code>chmod [who] [+ | - | =]  [mode] 文件名</code></li></ul><h4 id="who"><a href="#who" class="headerlink" title="who"></a>who</h4><p>表示操作对象可以是以下字母的一个或者组合</p><ul><li>u：用户 user</li><li>g：用户组 group</li><li>o：表示其他用户</li><li>a：表示所有用户是系统默认的</li></ul><h4 id="操作符号"><a href="#操作符号" class="headerlink" title="操作符号"></a>操作符号</h4><ul><li>+：表示添加某个权限</li><li>-：表示取消某个权限</li><li>=：赋予给定的权限，取消文档以前的所有权限</li></ul><h4 id="mode"><a href="#mode" class="headerlink" title="mode"></a>mode</h4><p>表示可执行的权限，可以是 r、w、x</p><h4 id="文件名"><a href="#文件名" class="headerlink" title="文件名"></a>文件名</h4><p>文件名可以使空格分开的文件列表</p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><pre><code>lusifer@UbuntuBase:~$ ls -al test.txt -rw-rw-r-- 1 lusifer lusifer 6 Nov  2 21:47 test.txtlusifer@UbuntuBase:~$ chmod u=rwx,g+r,o+r test.txt lusifer@UbuntuBase:~$ ls -al test.txt -rwxrw-r-- 1 lusifer lusifer 6 Nov  2 21:47 test.txtlusifer@UbuntuBase:~$</code></pre><h2 id="数字设定法"><a href="#数字设定法" class="headerlink" title="数字设定法"></a>数字设定法</h2><p>数字设定法中数字表示的含义</p><ul><li>0 表示没有任何权限</li><li>1 表示有可执行权限 = <code>x</code></li><li>2 表示有可写权限 = <code>w</code></li><li>4 表示有可读权限 = <code>r</code></li></ul><p>也可以用数字来表示权限如 <code>chmod 755 file\_name</code></p><table><thead><tr><th align="left">r    w    x</th><th align="left">r    –    x</th><th align="left">r    -    x</th></tr></thead><tbody><tr><td align="left">4    2    1</td><td align="left">4    -    1</td><td align="left">4    -    1</td></tr><tr><td align="left">user</td><td align="left">group</td><td align="left">others</td></tr></tbody></table><ul><li>若要 rwx 属性则 4+2+1=7</li><li>若要 rw- 属性则 4+2=6</li><li>若要 r-x 属性则 4+1=5</li></ul><pre><code>lusifer@UbuntuBase:~$ chmod 777 test.txt lusifer@UbuntuBase:~$ ls -al test.txt -rwxrwxrwx 1 lusifer lusifer 6 Nov  2 21:47 test.txtlusifer@UbuntuBase:~$ chmod 770 test.txt lusifer@UbuntuBase:~$ ls -al test.txt -rwxrwx--- 1 lusifer lusifer 6 Nov  2 21:47 test.txt</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 用户和组管理</title>
      <link href="/2019/11/21/013.Linux-%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/21/013.Linux-%E7%94%A8%E6%88%B7%E5%92%8C%E7%BB%84%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-用户和组管理"><a href="#Linux-用户和组管理" class="headerlink" title="Linux 用户和组管理"></a>Linux 用户和组管理</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Linux 操作系统是一个多用户操作系统，它允许多用户同时登录到系统上并使用资源。系统会根据账户来区分每个用户的文件，进程，任务和工作环境，使得每个用户工作都不受干扰。</p><h2 id="使用-Root-用户"><a href="#使用-Root-用户" class="headerlink" title="使用 Root 用户"></a>使用 Root 用户</h2><p>在实际生产操作中，我们基本上都是使用超级管理员账户操作 Linux 系统，也就是 Root 用户，Linux 系统默认是关闭 Root 账户的，我们需要为 Root 用户设置一个初始密码以方便我们使用。</p><ul><li>设置 Root 账户密码</li></ul><pre><code>sudo passwd root</code></pre><ul><li>切换到 Root</li></ul><pre><code>su</code></pre><ul><li>设置允许远程登录 Root</li></ul><pre><code>vi /etc/ssh/sshd_config# Authentication:LoginGraceTime 120#PermitRootLogin without-password     //注释此行PermitRootLogin yes                             //加入此行StrictModes yes# 重启服务service ssh restart</code></pre><h2 id="用户账户说明"><a href="#用户账户说明" class="headerlink" title="用户账户说明"></a>用户账户说明</h2><ul><li><strong>普通用户：</strong> 普通用户在系统上的任务是进行普通操作</li><li><strong>超级管理员：</strong> 管理员在系统上的任务是对普通用户和整个系统进行管理。对系统具有绝对的控制权，能够对系统进行一切操作。用 root 表示，root 用户在系统中拥有最高权限，默认下 Ubuntu 用户的 root 用户是不能登录的。</li><li><strong>安装时创建的系统用户：</strong> 此用户创建时被添加到 admin 组中，在 Ubuntu 中，admin 组中的用户默认是可以使用 <code>sudo</code> 命令来执行只有管理员才能执行的命令的。如果不使用 <code>sudo</code> 就是一个普通用户。</li></ul><h2 id="组账户说明"><a href="#组账户说明" class="headerlink" title="组账户说明"></a>组账户说明</h2><ul><li><strong>私有组：</strong> 当创建一个用户时没有指定属于哪个组，Linux 就会建立一个与用户同名的私有组，此私有组只含有该用户。</li><li><strong>标准组：</strong> 当创建一个用户时可以选定一个标准组，如果一个用户同时属于多个组时，登录后所属的组为主组，其他的为附加组。</li></ul><h2 id="扩展阅读"><a href="#扩展阅读" class="headerlink" title="扩展阅读"></a>扩展阅读</h2><h3 id="账户系统文件说明"><a href="#账户系统文件说明" class="headerlink" title="账户系统文件说明"></a>账户系统文件说明</h3><h4 id="etc-passwd"><a href="#etc-passwd" class="headerlink" title="/etc/passwd"></a>/etc/passwd</h4><p>每一行代表一个账号，众多账号是系统正常运行所必须的，例如 bin，nobody 每行定义一个用户账户，此文件对所有用户可读。每行账户包含如下信息：</p><p><code>root:x:0:0:root:/root:/bin/bash</code></p><ul><li><strong>用户名：</strong> 就是账号，用来对应 UID，root UID 是 0。</li><li><strong>口令：</strong> 密码，早期 UNIX 系统密码存在此字段，由于此文件所有用户都可以读取，密码容易泄露，后来这个字段数据就存放到 /etc/shadow 中，这里只能看到 X。</li><li><strong>用户标示号（UID）：</strong> 系统内唯一，root 用户的 UID 为 0，普通用户从 1000 开始，1-999 是系统的标准账户，500-65536 是可登陆账号。</li><li><strong>组标示号（GID）：</strong> 与 /etc/group 相关用来规定组名和 GID 相对应。</li><li><strong>注释：</strong> 注释账号</li><li><strong>宿主目录（主文件夹）：</strong> 用户登录系统后所进入的目录 root 在 /root/itcast</li><li><strong>命令解释器（shell）：</strong> 指定该用户使用的 shell ，默认的是 /bin/bash</li></ul><h4 id="etc-shadow"><a href="#etc-shadow" class="headerlink" title="/etc/shadow"></a>/etc/shadow</h4><p>为了增加系统的安全性，用户口令通常用 shadow passwords 保护。只有 root 可读。每行包含如下信息：</p><p><code>root:$6$Reu571.V$Ci/kd.OTzaSGU.TagZ5KjYx2MLzQv2IkZ24E1.yeTT3Pp4o/yniTjus/rRaJ92Z18MVy6suf1W5uxxurqssel.:17465:0:99999:7:::</code></p><ul><li><strong>账号名称：</strong> 需要和 /etc/passwd  一致。</li><li><strong>密码：</strong> 经过加密，虽然加密，但不表示不会被破解，该文件默认权限如下：<ul><li>-rw——-  1 root root    1560 Oct 26 17:20 passwd-</li><li>只有root能都读写</li></ul></li><li><strong>最近修改密码日期：</strong> 从1970-1-1起，到用户最后一次更改口令的天数</li><li><strong>密码最小时间间隔：</strong> 从1970-1-1起，到用户可以更改口令的天数</li><li><strong>密码最大时间间隔：</strong> 从1970-1-1起，必须更改的口令天数</li><li><strong>密码到期警告时间：</strong> 在口令过期之前几天通知</li><li><strong>密码到期后账号宽限时间</strong></li><li><strong>密码到期禁用账户时间：</strong> 在用户口令过期后到禁用账户的天数</li><li><strong>保留</strong></li></ul><h4 id="etc-group"><a href="#etc-group" class="headerlink" title="/etc/group"></a>/etc/group</h4><p>用户组的配置文件</p><p><code>root:x:0:</code></p><ul><li><strong>用户组名称</strong></li><li><strong>用户组密码：</strong> 给用户组管理员使用，通常不用</li><li><strong>GID：</strong> 用户组的ID</li><li><strong>此用户支持的账号名称：</strong> 一个账号可以加入多个用户组，例如想要 itcast 加入 root 这个用户组，将该账号填入该字段即可 <code>root:x:0:root</code>, icast 将用户进行分组是 Linux 对用户进行管理及控制访问权限的一种手段。一个中可以有多个用户，一个用户可以同时属于多个组。该文件对所有用户可读。</li></ul><h4 id="etc-gshadow"><a href="#etc-gshadow" class="headerlink" title="/etc/gshadow"></a>/etc/gshadow</h4><p>该文件用户定义用户组口令，组管理员等信息只有root用户可读。</p><p><code>root:\*::</code></p><ul><li><strong>用户组名</strong></li><li><strong>密码列</strong></li><li><strong>用户组管理员的账号</strong></li><li><strong>用户组所属账号</strong></li></ul><h3 id="账户管理常用命令"><a href="#账户管理常用命令" class="headerlink" title="账户管理常用命令"></a>账户管理常用命令</h3><h4 id="增加用户"><a href="#增加用户" class="headerlink" title="增加用户"></a>增加用户</h4><pre><code>useradd 用户名useradd -u (UID号)useradd -p (口令)useradd -g (分组)useradd -s (SHELL)useradd -d (用户目录)</code></pre><p>如：<code>useradd lusifer</code></p><p>增加用户名为 lusifer 的账户</p><h4 id="修改用户"><a href="#修改用户" class="headerlink" title="修改用户"></a>修改用户</h4><pre><code>usermod -u (新UID)usermod -d (用户目录)usermod -g (组名)usermod -s (SHELL)usermod -p (新口令)usermod -l (新登录名)usermod -L (锁定用户账号密码)usermod -U (解锁用户账号)</code></pre><p>如：<code>usermod  -u 1024  -g group2  -G root lusifer</code></p><p>将 lusifer 用户 uid 修改为 1024，默认组改为系统中已经存在的 group2，并且加入到系统管理员组</p><h4 id="删除用户"><a href="#删除用户" class="headerlink" title="删除用户"></a>删除用户</h4><pre><code>userdel 用户名 (删除用户账号)userdel -r 删除账号时同时删除目录</code></pre><p>如：<code>userdel -r lusifer</code></p><p>删除用户名为 lusifer 的账户并同时删除 lusifer 的用户目录</p><h4 id="组账户维护"><a href="#组账户维护" class="headerlink" title="组账户维护"></a>组账户维护</h4><pre><code>groupadd 组账户名 (创建新组)groupadd -g 指定组GIDgroupmod -g 更改组的GIDgroupmod -n 更改组账户名groupdel 组账户名 (删除指定组账户)</code></pre><h4 id="口令维护"><a href="#口令维护" class="headerlink" title="口令维护"></a>口令维护</h4><pre><code>passwd 用户账户名 (设置用户口令)passwd -l 用户账户名 (锁定用户账户)passwd -u 用户账户名 (解锁用户账户)passwd -d 用户账户名 (删除账户口令)gpasswd -a 用户账户名 组账户名 (将指定用户添加到指定组)gpasswd -d 用户账户名 组账户名 (将用户从指定组中删除)gpasswd -A 用户账户名 组账户名 (将用户指定为组的管理员)</code></pre><h4 id="用户和组状态"><a href="#用户和组状态" class="headerlink" title="用户和组状态"></a>用户和组状态</h4><pre><code>su 用户名(切换用户账户)id 用户名(显示用户的UID，GID)whoami (显示当前用户名称)groups (显示用户所属组)</code></pre>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux Vim 编辑器</title>
      <link href="/2019/11/21/012.Linux-Vim%20%E7%BC%96%E8%BE%91%E5%99%A8/"/>
      <url>/2019/11/21/012.Linux-Vim%20%E7%BC%96%E8%BE%91%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-Vim-编辑器"><a href="#Linux-Vim-编辑器" class="headerlink" title="Linux Vim 编辑器"></a>Linux Vim 编辑器</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Vim 是从 vi 发展出来的一个文本编辑器。代码补完、编译及错误跳转等方便编程的功能特别丰富，在程序员中被广泛使用。</p><p>简单的来说， vi 是老式的字处理器，不过功能已经很齐全了，但是还是有可以进步的地方。 Vim 则可以说是程序开发者的一项很好用的工具。</p><h2 id="运行模式"><a href="#运行模式" class="headerlink" title="运行模式"></a>运行模式</h2><ul><li>编辑模式：等待编辑命令输入</li><li>插入模式：编辑模式下，输入 <code>i</code> 进入插入模式，插入文本信息</li><li>命令模式：在编辑模式下，输入 <code>:</code> 进行命令模式</li></ul><h2 id="命令模式"><a href="#命令模式" class="headerlink" title="命令模式"></a>命令模式</h2><ul><li><code>:q</code>：直接退出vi</li><li><code>:wq</code>：保存后退出vi ，并可以新建文件</li><li><code>:q!</code>：强制退出</li><li><code>:w file</code>：将当前内容保存成某个文件</li><li><code>/</code>：查找字符串</li><li><code>:set number</code>： 在编辑文件显示行号</li><li><code>:set nonumber</code>：在编辑文件不显示行号</li><li><code>:set paste</code>：原样粘贴</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 系统管理</title>
      <link href="/2019/11/21/011.Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/21/011.Linux-%E7%B3%BB%E7%BB%9F%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-系统管理"><a href="#Linux-系统管理" class="headerlink" title="Linux 系统管理"></a>Linux 系统管理</h1><h2 id="系统管理命令"><a href="#系统管理命令" class="headerlink" title="系统管理命令"></a>系统管理命令</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">stat</td><td align="left">显示指定文件的相关信息,比 ls 命令显示内容更多</td></tr><tr><td align="left">who</td><td align="left">显示在线登录用户</td></tr><tr><td align="left">hostname</td><td align="left">显示主机名称</td></tr><tr><td align="left">uname</td><td align="left">显示系统信息</td></tr><tr><td align="left">top</td><td align="left">显示当前系统中耗费资源最多的进程</td></tr><tr><td align="left">ps</td><td align="left">显示瞬间的进程状态</td></tr><tr><td align="left">du</td><td align="left">显示指定的文件（目录）已使用的磁盘空间的总量</td></tr><tr><td align="left">df</td><td align="left">显示文件系统磁盘空间的使用情况</td></tr><tr><td align="left">free</td><td align="left">显示当前内存和交换空间的使用情况</td></tr><tr><td align="left">ifconfig</td><td align="left">显示网络接口信息</td></tr><tr><td align="left">ping</td><td align="left">测试网络的连通性</td></tr><tr><td align="left">netstat</td><td align="left">显示网络状态信息</td></tr><tr><td align="left">clear</td><td align="left">清屏</td></tr><tr><td align="left">kill</td><td align="left">杀死一个进程</td></tr></tbody></table><h2 id="开关机命令"><a href="#开关机命令" class="headerlink" title="开关机命令"></a>开关机命令</h2><p><code>shutdown</code> 命令可以用来进行关机程序，并且在关机以前传送讯息给所有使用者正在执行的程序，<code>shutdown</code> 也可以用来重开机。</p><table><thead><tr><th align="left">命令</th><th align="left">语法</th><th align="left">参数</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">shutdown</td><td align="left">shutdown [-t seconds] [-rkhncfF] time [message]</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-t seconds</td><td align="left">设定在几秒钟之后进行关机程序</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-k</td><td align="left">并不会真的关机，只是将警告讯息传送给所有只用者</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-r</td><td align="left">关机后重新开机（重启）</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-h</td><td align="left">关机后停机</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-n</td><td align="left">不采用正常程序来关机，用强迫的方式杀掉所有执行中的程序后自行关机</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-c</td><td align="left">取消目前已经进行中的关机动作</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-f</td><td align="left">关机时，不做 fcsk 动作(检查 Linux 档系统)</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-F</td><td align="left">关机时，强迫进行 fsck 动作</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">time</td><td align="left">设定关机的时间</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">message</td><td align="left">传送给所有使用者的警告讯息</td></tr></tbody></table><p><strong>重启</strong></p><ul><li><code>sudo reboot</code></li><li><code>sudo shutdown -r now</code></li></ul><p><strong>关机</strong></p><ul><li><code>shutdown -h now</code></li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 目录管理</title>
      <link href="/2019/11/21/010.Linux-%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/21/010.Linux-%E7%9B%AE%E5%BD%95%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-目录管理"><a href="#Linux-目录管理" class="headerlink" title="Linux 目录管理"></a>Linux 目录管理</h1><h2 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h2><p><img src="/linux/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20171102134832.png" alt></p><table><thead><tr><th align="left">目录</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left"><strong>bin</strong></td><td align="left">存放二进制可执行文件(<code>ls</code>, <code>cat</code>, <code>mkdir</code> 等)</td></tr><tr><td align="left">boot</td><td align="left">存放用于系统引导时使用的各种文件</td></tr><tr><td align="left">dev</td><td align="left">用于存放设备文件</td></tr><tr><td align="left"><strong>etc</strong></td><td align="left">存放系统配置文件</td></tr><tr><td align="left">home</td><td align="left">存放所有用户文件的根目录</td></tr><tr><td align="left">lib</td><td align="left">存放跟文件系统中的程序运行所需要的共享库及内核模块</td></tr><tr><td align="left">mnt</td><td align="left">系统管理员安装临时文件系统的安装点</td></tr><tr><td align="left">opt</td><td align="left">额外安装的可选应用程序包所放置的位置</td></tr><tr><td align="left">proc</td><td align="left">虚拟文件系统，存放当前内存的映射</td></tr><tr><td align="left">root</td><td align="left">超级用户目录</td></tr><tr><td align="left">sbin</td><td align="left">存放二进制可执行文件，只有 root 才能访问</td></tr><tr><td align="left">tmp</td><td align="left">用于存放各种临时文件</td></tr><tr><td align="left"><strong>usr</strong></td><td align="left">用于存放系统应用程序，比较重要的目录 <code>/usr/local</code> 本地管理员软件安装目录</td></tr><tr><td align="left"><strong>var</strong></td><td align="left">用于存放运行时需要改变数据的文件</td></tr></tbody></table><h2 id="操作文件目录"><a href="#操作文件目录" class="headerlink" title="操作文件目录"></a>操作文件目录</h2><table><thead><tr><th align="left">命令</th><th align="left">说明</th><th align="left">语法</th><th align="left">参数</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">ls</td><td align="left">显示文件和目录列表</td><td align="left">ls [-alrtAFR] [name…]</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">-l</td><td align="left">列出文件的详细信息</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">-a</td><td align="left">列出当前目录所有文件，包含隐藏文件</td></tr><tr><td align="left">mkdir</td><td align="left">创建目录</td><td align="left">mkdir [-p] dirName</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">-p</td><td align="left">父目录不存在情况下先生成父目录</td></tr><tr><td align="left">cd</td><td align="left">切换目录</td><td align="left">cd [dirName]</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">touch</td><td align="left">生成一个空文件</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">echo</td><td align="left">生成一个带内容文件</td><td align="left">echo abcd &gt; 1.txt，echo 1234 &gt;&gt; 1.txt</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">cat</td><td align="left">显示文本文件内容</td><td align="left">cat [-AbeEnstTuv] [–help] [–version] fileName</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">cp</td><td align="left">复制文件或目录</td><td align="left">cp [options] source dest</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">rm</td><td align="left">删除文件</td><td align="left">rm [options] name…</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">-f</td><td align="left">强制删除文件或目录</td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">-r</td><td align="left">同时删除该目录下的所有文件</td></tr><tr><td align="left">mv</td><td align="left">移动文件或目录</td><td align="left">mv [options] source dest</td><td align="left"></td><td align="left"></td></tr><tr><td align="left">find</td><td align="left">在文件系统中查找指定的文件</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">-name</td><td align="left">文件名</td></tr><tr><td align="left">grep</td><td align="left">在指定的文本文件中查找指定的字符串</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">tree</td><td align="left">用于以树状图列出目录的内容</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">pwd</td><td align="left">显示当前工作目录</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">ln</td><td align="left">建立软链接</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">more</td><td align="left">分页显示文本文件内容</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">head</td><td align="left">显示文件开头内容</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">tail</td><td align="left">显示文件结尾内容</td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left"></td><td align="left">-f</td><td align="left">跟踪输出</td></tr></tbody></table><h2 id="压缩解压缩"><a href="#压缩解压缩" class="headerlink" title="压缩解压缩"></a>压缩解压缩</h2><h3 id="tar"><a href="#tar" class="headerlink" title="tar"></a>tar</h3><table><thead><tr><th align="left">命令</th><th align="left">语法</th><th align="left">参数</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">tar</td><td align="left">tar [-cxzjvf] 压缩打包文档的名称 欲打包目录</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-c</td><td align="left">建立一个归档文件的参数指令</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-x</td><td align="left">解开一个归档文件的参数指令</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-z</td><td align="left">是否需要用 gzip 压缩</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-j</td><td align="left">是否需要用 bzip2 压缩</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-v</td><td align="left">压缩的过程中显示文件</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-f</td><td align="left">使用档名，在 f 之后要立即接档名</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-tf</td><td align="left">查看归档文件里面的文件</td></tr></tbody></table><p><strong>例子：</strong></p><ul><li>压缩文件夹：<code>tar -zcvf test.tar.gz test\</code></li><li>解压文件夹：<code>tar -zxvf test.tar.gz</code></li></ul><h3 id="gzip"><a href="#gzip" class="headerlink" title="gzip"></a>gzip</h3><table><thead><tr><th align="left">命令</th><th align="left">语法</th><th align="left">参数</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">gzip</td><td align="left">gzip [选项] 压缩（解压缩）的文件名</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-d</td><td align="left">解压缩</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-l</td><td align="left">对每个压缩文件，显示压缩文件的大小，未压缩文件的大小，压缩比，未压缩文件的名字</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-v</td><td align="left">对每一个压缩和解压的文件，显示文件名和压缩比</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-num</td><td align="left">用指定的数字num调整压缩的速度，-1或–fast表示最快压缩方法（低压缩比），-9或–best表示最慢压缩方法（高压缩比）。系统缺省值为6</td></tr></tbody></table><blockquote><p>压缩文件后缀为 gz</p></blockquote><h3 id="bzip2"><a href="#bzip2" class="headerlink" title="bzip2"></a>bzip2</h3><table><thead><tr><th align="left">命令</th><th align="left">语法</th><th align="left">参数</th><th align="left">参数说明</th></tr></thead><tbody><tr><td align="left">bzip2</td><td align="left">bzip2 [-cdz]</td><td align="left"></td><td align="left"></td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-d</td><td align="left">解压缩</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-z</td><td align="left">压缩参数</td></tr><tr><td align="left"></td><td align="left"></td><td align="left">-num</td><td align="left">用指定的数字num调整压缩的速度，-1或–fast表示最快压缩方法（低压缩比），-9或–best表示最慢压缩方法（高压缩比）。系统缺省值为6</td></tr></tbody></table><blockquote><p>压缩文件后缀为 bz2</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 远程控制管理</title>
      <link href="/2019/11/21/009.Linux-%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%AE%A1%E7%90%86/"/>
      <url>/2019/11/21/009.Linux-%E8%BF%9C%E7%A8%8B%E6%8E%A7%E5%88%B6%E7%AE%A1%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-远程控制管理"><a href="#Linux-远程控制管理" class="headerlink" title="Linux 远程控制管理"></a>Linux 远程控制管理</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>传统的网络服务程序，FTP、POP、Telnet 本质上都是不安全的，因为它们在网络上通过明文传送口令和数据，这些数据非常容易被截获。SSH 叫做 <code>Secure Shell</code>。通过 SSH，可以把传输数据进行加密，预防攻击，传输的数据进行了压缩，可以加快传输速度。</p><h2 id="OpenSSH"><a href="#OpenSSH" class="headerlink" title="OpenSSH"></a>OpenSSH</h2><p>SSH 是芬兰一家公司开发。但是受到版权和加密算法限制，现在很多人都使用 OpenSSH。OpenSSH 是 SSH 的替代软件，免费。OpenSSH 由客户端和服务端组成。</p><ul><li><strong>基于口令的安全验证：</strong> 知道服务器的帐号密码即可远程登录，口令和数据在传输过程中都会被加密。</li><li><strong>基于密钥的安全验证：</strong> 此时需要在创建一对密钥，把公有密钥放到远程服务器上自己的宿主目录中，而私有密钥则由自己保存。</li></ul><p>安装流程如下：</p><ul><li>检查软件是否安装</li></ul><pre><code>sudo apt-cache policy openssh-client openssh-server</code></pre><ul><li>安装服务端</li></ul><pre><code>sudo apt-get install openssh-server</code></pre><ul><li>安装客户端</li></ul><pre><code>sudo apt-get install openssh-client</code></pre><p>OpenSSH 服务器的主要配置文件为 <code>/etc/ssh/sshd\_config</code>，几乎所有的配置信息都在此文件中。</p><h2 id="XShell"><a href="#XShell" class="headerlink" title="XShell"></a>XShell</h2><p>XShell 是一个强大的安全终端模拟软件，它支持 SSH1, SSH2, 以及 Microsoft Windows 平台的 TELNET 协议。XShell 通过互联网到远程主机的安全连接以及它创新性的设计和特色帮助用户在复杂的网络环境中享受他们的工作。</p><p>XShell 可以在 Windows 界面下用来访问远端不同系统下的服务器，从而比较好的达到远程控制终端的目的。</p><p><img src="/linux/%E5%BE%AE%E4%BF%A1%E6%88%AA%E5%9B%BE_20171102220954.png" alt></p><h2 id="FinalShell"><a href="#FinalShell" class="headerlink" title="FinalShell"></a>FinalShell</h2><p>FinalShell 是一体化的的服务器，网络管理软件，不仅是 SSH 客户端，还是功能强大的开发，运维工具，充分满足开发，运维需求。</p><p><img src="/linux/Lusifer_20190616061023.png" alt></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux 简介</title>
      <link href="/2019/11/21/008.Linux-%E7%AE%80%E4%BB%8B/"/>
      <url>/2019/11/21/008.Linux-%E7%AE%80%E4%BB%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux-简介"><a href="#Linux-简介" class="headerlink" title="Linux 简介"></a>Linux 简介</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>Linux 是一种自由和开放源码的类 UNIX 操作系统，使用 Linux 内核。目前存在着许多不同的 Linux 发行版，可安装在各种各样的电脑硬件设备，从手机、平板电脑、路由器和影音游戏控制台，到桌上型电脑，大型电脑和超级电脑。 Linux 是一个领先的操作系统，世界上运算最快的 10 台超级电脑运行的都是 Linux 操作系统。</p><p>Linux 操作系统也是自由软件和开放源代码发展中最著名的例子。只要遵循 GNU 通用公共许可证,任何人和机构都可以自由地使用 Linux 的所有底层源代码，也可以自由地修改和再发布。严格来讲，Linux 这个词本身只表示 Linux 内核，但在实际上人们已经习惯了用 Linux 来形容整个基于 Linux 内核，并且使用 GNU 工程各种工具和数据库的操作系统 (也被称为 GNU/ Linux)。通常情况下，Linux 被打包成供桌上型电脑和服务器使用的 Linux 发行版本。一些流行的主流 Linux 发行版本，包括 Debian (及其衍生版本 Ubuntu)，Fedora 和 OpenSUSE 等。Kernel + Softwares + Tools 就是 Linux Distribution</p><p>目前市面上较知名的发行版有：<code>Ubuntu</code>、RedHat、<code>CentOS</code>、Debian、Fedora、SuSE、OpenSUSE、TurboLinux、BluePoint、RedFlag、Xterm、SlackWare等。</p><h2 id="Linux-与-Windows-比较"><a href="#Linux-与-Windows-比较" class="headerlink" title="Linux 与 Windows 比较"></a>Linux 与 Windows 比较</h2><p>目前国内 Linux 更多的是应用于服务器上，而桌面操作系统更多使用的是 Windows。主要区别如下</p><table><thead><tr><th align="left">比较</th><th align="left">Windows</th><th align="left">Linux</th></tr></thead><tbody><tr><td align="left">界面</td><td align="left">界面统一，外壳程序固定所有 Windows 程序菜单几乎一致，快捷键也几乎相同</td><td align="left">图形界面风格依发布版不同而不同，可能互不兼容。GNU/Linux 的终端机是从 UNIX 传承下来，基本命令和操作方法也几乎一致。</td></tr><tr><td align="left">驱动程序</td><td align="left">驱动程序丰富，版本更新频繁。默认安装程序里面一般包含有该版本发布时流行的硬件驱动程序，之后所出的新硬件驱动依赖于硬件厂商提供。对于一些老硬件，如果没有了原配的驱动有时很难支持。另外，有时硬件厂商未提供所需版本的 Windows 下的驱动，也会比较头痛。</td><td align="left">由志愿者开发，由Linux核心开发小组发布，很多硬件厂商基于版权考虑并未提供驱动程序，尽管多数无需手动安装，但是涉及安装则相对复杂，使得新用户面对驱动程序问题（是否存在和安装方法）会一筹莫展。但是在开源开发模式下，许多老硬件尽管在 Windows 下很难支持的也容易找到驱动。HP、Intel、AMD 等硬件厂商逐步不同程度支持开源驱动，问题正在得到缓解。</td></tr><tr><td align="left">使用</td><td align="left">使用比较简单，容易入门。图形化界面对没有计算机背景知识的用户使用十分有利。</td><td align="left">图形界面使用简单，容易入门。文字界面，需要学习才能掌握。</td></tr><tr><td align="left">学习</td><td align="left">系统构造复杂、变化频繁，且知识、技能淘汰快，深入学习困难。</td><td align="left">系统构造简单、稳定，且知识、技能传承性好，深入学习相对容易。</td></tr><tr><td align="left">软件</td><td align="left">每一种特定功能可能都需要商业软件的支持，需要购买相应的授权。</td><td align="left">大部分软件都可以自由获取，同样功能的软件选择较少。</td></tr></tbody></table><h2 id="安装-Linux-操作系统"><a href="#安装-Linux-操作系统" class="headerlink" title="安装 Linux 操作系统"></a>安装 Linux 操作系统</h2><p>原生云应用基本都是基于云服务器部署，本地化的 Linux 操作基本也都是在虚拟机中进行模拟操作。故我们只需要安装虚拟机并在虚拟机上安装对应的 Linux 操作系统即可。本套课程全部基于 <strong>Ubuntu Server 18.04 LTS</strong> 操作系统进行实践。</p><p>安装中需要设置镜像地址，我们使用阿里云镜像地址，<code>http://mirrors.aliyun.com/ubuntu/</code></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何应对高并发</title>
      <link href="/2019/11/20/007.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%91/"/>
      <url>/2019/11/20/007.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%91/</url>
      
        <content type="html"><![CDATA[<h1 id="如何应对高并发"><a href="#如何应对高并发" class="headerlink" title="如何应对高并发"></a>如何应对高并发</h1><h2 id="什么是高并发"><a href="#什么是高并发" class="headerlink" title="什么是高并发"></a>什么是高并发</h2><p>高并发(High Concurrency)是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理很多请求。高并发相关常用的一些指标有 <strong>响应时间(Response Time)</strong>，<strong>吞吐量(Throughput)</strong>，<strong>每秒查询率 QPS(Query Per Second)</strong>，<strong>并发用户数</strong> 等。</p><ul><li><strong>响应时间：</strong> 系统对请求做出响应的时间。例如系统处理一个 HTTP 请求需要 200ms，这个 200ms 就是系统的响应时间。</li><li><strong>吞吐量：</strong> 单位时间(年，月，日，时，分，秒)内处理的请求数量。</li><li><strong>QPS：</strong> 每秒响应请求数。在互联网领域，这个指标和吞吐量区分的没有这么明显。</li><li><strong>并发用户数：</strong> 同时承载正常使用系统功能的用户数量。例如一个即时通讯系统，同时在线量一定程度上代表了系统的并发用户数。</li></ul><h2 id="如何提升系统的并发能力"><a href="#如何提升系统的并发能力" class="headerlink" title="如何提升系统的并发能力"></a>如何提升系统的并发能力</h2><p>互联网分布式架构设计，提高系统并发能力的方式，方法论上主要有两种：<strong>垂直扩展(Scale Up)</strong> 与 <strong>水平扩展(Scale Out)</strong>。</p><h3 id="垂直扩展"><a href="#垂直扩展" class="headerlink" title="垂直扩展"></a>垂直扩展</h3><p>提升单机处理能力。垂直扩展的方式又有两种：</p><ul><li>增强单机硬件性能，例如：增加 CPU 核数如 32 核，升级更好的网卡如万兆，升级更好的硬盘如 SSD，扩充硬盘容量如 2T，扩充系统内存如 128G；</li><li>提升单机架构性能，例如：使用 Cache 来减少 IO 次数，使用异步来增加单服务吞吐量，使用无锁数据结构来减少响应时间；</li></ul><p>在互联网业务发展非常迅猛的早期，如果预算不是问题，强烈建议使用 “增强单机硬件性能” 的方式提升系统并发能力，因为这个阶段，公司的战略往往是发展业务抢时间，而 “增强单机硬件性能” 往往是最快的方法。</p><p>不管是提升单机硬件性能，还是提升单机架构性能，都有一个致命的不足：单机性能总是有极限的。所以互联网分布式架构设计高并发终极解决方案还是水平扩展。</p><h3 id="水平扩展"><a href="#水平扩展" class="headerlink" title="水平扩展"></a>水平扩展</h3><p>只要增加服务器数量，就能线性扩充系统性能。水平扩展对系统架构设计是有要求的，如何在架构各层进行可水平扩展的设计，以及互联网公司架构各层常见的水平扩展实践，是本文重点讨论的内容。</p><h2 id="典型互联网分层架构"><a href="#典型互联网分层架构" class="headerlink" title="典型互联网分层架构"></a>典型互联网分层架构</h2><p><img src="/weifuwu/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%911.png" alt></p><ul><li><strong>客户端层：</strong> 典型调用方是浏览器或手机应用 APP</li><li><strong>反向代理层：</strong> 系统入口(Ingress)，反向代理(Nginx)</li><li><strong>站点应用层：</strong> 实现核心应用逻辑，返回 HTML 或者 JSON</li><li><strong>服务层：</strong> 微服务体现在这一层</li><li><strong>数据缓存层：</strong> 缓存加速访问存储</li><li><strong>数据库层：</strong> 数据库持久化数据存储</li></ul><h2 id="水平扩展分层架构"><a href="#水平扩展分层架构" class="headerlink" title="水平扩展分层架构"></a>水平扩展分层架构</h2><h3 id="反向代理层的水平扩展"><a href="#反向代理层的水平扩展" class="headerlink" title="反向代理层的水平扩展"></a>反向代理层的水平扩展</h3><p><img src="/weifuwu/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%912.png" alt></p><p>反向代理层的水平扩展，是通过 <strong>DNS 轮询</strong> 实现的：DNS Server 对于一个域名配置了多个解析 IP，每次 DNS 解析请求来访问 DNS Server，会轮询返回这些 IP。</p><p>当 Nginx 成为瓶颈的时候，只要增加服务器数量，新增 Nginx 服务的部署，增加一个外网 IP，就能扩展反向代理层的性能，做到理论上的无限高并发。</p><h3 id="站点应用层的水平扩展"><a href="#站点应用层的水平扩展" class="headerlink" title="站点应用层的水平扩展"></a>站点应用层的水平扩展</h3><p><img src="/weifuwu/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%913.png" alt></p><p>站点层的水平扩展，是通过 <strong>Nginx</strong> 实现的。通过修改 <code>nginx.conf</code>，可以设置多个 Web 后端。</p><p>当 Web 后端成为瓶颈的时候，只要增加服务器数量，新增 Web 服务的部署，在 Nginx 配置中配置上新的 Web 后端，就能扩展站点层的性能，做到理论上的无限高并发。</p><h3 id="服务层的水平扩展"><a href="#服务层的水平扩展" class="headerlink" title="服务层的水平扩展"></a>服务层的水平扩展</h3><p><img src="/weifuwu/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%914.png" alt></p><p>服务层的水平扩展，是通过 <strong>服务连接池</strong> 实现的。</p><p>站点层通过 RPC Client 调用下游的服务层 RPC Server 时，RPC Client 中的连接池会建立与下游服务多个连接，当服务成为瓶颈的时候，只要增加服务器数量，新增服务部署，在 RPC Client 处建立新的下游服务连接，就能扩展服务层性能，做到理论上的无限高并发。如果需要优雅的进行服务层自动扩容，这里可能需要配置中心里服务自动发现功能的支持。</p><h3 id="数据层的水平扩展"><a href="#数据层的水平扩展" class="headerlink" title="数据层的水平扩展"></a>数据层的水平扩展</h3><p>在数据量很大的情况下，数据层(缓存，数据库)涉及数据的水平扩展，将原本存储在一台服务器上的数据(缓存，数据库)水平拆分到不同服务器上去，以达到扩充系统性能的目的。</p><h4 id="按照范围水平拆分"><a href="#按照范围水平拆分" class="headerlink" title="按照范围水平拆分"></a>按照范围水平拆分</h4><p><img src="/weifuwu/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%915.png" alt></p><p>每一个数据服务，存储一定范围的数据</p><ul><li>user0 库，存储 uid 范围 1-1kw</li><li>user1 库，存储 uid 范围 1kw-2kw</li></ul><p><strong>优点：</strong></p><ul><li>规则简单，Service 只需判断一下 uid 范围就能路由到对应的存储服务</li><li>数据均衡性较好</li><li>比较容易扩展，可以随时加一个 uid [2kw,3kw] 的数据服务</li></ul><p><strong>缺点：</strong></p><ul><li>请求的负载不一定均衡，一般来说，新注册的用户会比老用户更活跃，大范围的服务请求压力会更大</li></ul><h4 id="按照哈希水平拆分"><a href="#按照哈希水平拆分" class="headerlink" title="按照哈希水平拆分"></a>按照哈希水平拆分</h4><p><img src="/weifuwu/%E5%A6%82%E4%BD%95%E5%BA%94%E5%AF%B9%E9%AB%98%E5%B9%B6%E5%8F%916.png" alt></p><p>每一个数据库，存储某个 key 值 hash 后的部分数据</p><ul><li>user0 库，存储偶数 uid 数据</li><li>user1 库，存储奇数 uid 数据</li></ul><p><strong>优点：</strong></p><ul><li>规则简单，Service 只需对 uid 进行 hash 能路由到对应的存储服务</li><li>数据均衡性较好</li><li>请求均匀性较好</li></ul><p><strong>缺点：</strong></p><ul><li>不容易扩展，扩展一个数据服务，hash 方法改变时候，可能需要进行数据迁移</li></ul><h4 id="水平拆分与主从同步"><a href="#水平拆分与主从同步" class="headerlink" title="水平拆分与主从同步"></a>水平拆分与主从同步</h4><p>这里需要注意的是，通过水平拆分来扩充系统性能，与主从同步读写分离来扩充数据库性能的方式有本质的不同。</p><p><strong>通过水平拆分扩展数据库性能</strong></p><ul><li>每个服务器上存储的数据量是总量的 1/n，所以单机的性能也会有提升</li><li>n 个服务器上的数据没有交集，那个服务器上数据的并集是数据的全集</li><li>数据水平拆分到了 n 个服务器上，理论上读性能扩充了 n 倍，写性能也扩充了 n 倍(其实远不止 n 倍，因为单机的数据量变为了原来的 1/n)</li></ul><p><strong>通过主从同步读写分离扩展数据库性能</strong></p><ul><li>每个服务器上存储的数据量是和总量相同</li><li>n 个服务器上的数据都一样，都是全集</li><li>理论上读性能扩充了 n 倍，写仍然是单点，写性能不变</li></ul><blockquote><p><strong>注意：</strong> 缓存层的水平拆分和数据库层的水平拆分类似，也是以范围拆分和哈希拆分的方式居多</p></blockquote><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>高并发(High Concurrency)是互联网分布式系统架构设计中必须考虑的因素之一，它通常是指，通过设计保证系统能够同时并行处理很多请求。</p><p>提高系统并发能力的方式，方法论上主要有两种：垂直扩展(Scale Up)与水平扩展(Scale Out)。前者垂直扩展可以通过提升单机硬件性能，或者提升单机架构性能，来提高并发性，但单机性能总是有极限的，<strong>互联网分布式架构设计高并发终极解决方案还是后者：水平扩展</strong>。</p><p>互联网分层架构中，各层次水平扩展的实践又有所不同：</p><ul><li>反向代理层可以通过 <strong>DNS 轮询</strong> 的方式来进行水平扩展</li><li>站点层可以通过 Nginx 来进行水平扩展</li><li>服务层可以通过服务连接池来进行水平扩展</li><li>数据库可以按照数据范围，或者数据哈希的方式来进行水平扩展</li></ul><p>各层实施水平扩展后，能够通过增加服务器数量的方式来提升系统的性能，做到理论上的性能无限。</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CAP 定理与 BASE 理论</title>
      <link href="/2019/11/20/006.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-CAP%20%E5%AE%9A%E7%90%86%E4%B8%8E%20BASE%20%E7%90%86%E8%AE%BA/"/>
      <url>/2019/11/20/006.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-CAP%20%E5%AE%9A%E7%90%86%E4%B8%8E%20BASE%20%E7%90%86%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<h1 id="CAP-定理与-BASE-理论"><a href="#CAP-定理与-BASE-理论" class="headerlink" title="CAP 定理与 BASE 理论"></a>CAP 定理与 BASE 理论</h1><h2 id="CAP-定理"><a href="#CAP-定理" class="headerlink" title="CAP 定理"></a>CAP 定理</h2><p>2000 年 7 月，加州大学伯克利分校的 Eric Brewer 教授在 ACM PODC 会议上提出 CAP 猜想。2年后，麻省理工学院的 Seth Gilbert 和 Nancy Lynch 从理论上证明了 CAP。之后，CAP 理论正式成为分布式计算领域的公认定理。</p><p>CAP 理论为：一个分布式系统最多只能同时满足一致性（Consistency）、可用性（Availability）和分区容错性（Partition tolerance）这三项中的两项。</p><ul><li><strong>一致性(Consistency)：</strong> 一致性指 (all nodes see the same data at the same time)，即更新操作成功并返回客户端完成后，所有节点在同一时间的数据完全一致。</li><li><strong>可用性(Availability)：</strong> 可用性指(Reads and writes always succeed)，即服务一直可用，而且是正常响应时间。</li><li><strong>分区容错性(Partition tolerance)：</strong> 分区容错性指(the system continues to operate despite arbitrary message loss or failure of part of the system)，即分布式系统在遇到某节点或网络分区故障的时候，仍然能够对外提供满足一致性和可用性的服务。</li></ul><h2 id="CAP-权衡"><a href="#CAP-权衡" class="headerlink" title="CAP 权衡"></a>CAP 权衡</h2><p>通过 CAP 理论，我们知道无法同时满足一致性、可用性和分区容错性这三个特性，那要舍弃哪个呢？</p><p>对于多数大型互联网应用的场景，主机众多、部署分散，而且现在的集群规模越来越大，所以节点故障、网络故障是常态，而且要保证服务可用性达到 N 个 9，即保证 P 和 A，舍弃C（退而求其次保证最终一致性）。虽然某些地方会影响客户体验，但没达到造成用户流程的严重程度。</p><p>对于涉及到钱财这样不能有一丝让步的场景，C 必须保证。网络发生故障宁可停止服务，这是保证 CA，舍弃 P。貌似这几年国内银行业发生了不下 10 起事故，但影响面不大，报道也不多，广大群众知道的少。还有一种是保证 CP，舍弃 A。例如网络故障是只读不写。</p><p>孰优孰略，没有定论，只能根据场景定夺，适合的才是最好的。</p><h2 id="BASE-理论"><a href="#BASE-理论" class="headerlink" title="BASE 理论"></a>BASE 理论</h2><p>eBay 的架构师 Dan Pritchett 源于对大规模分布式系统的实践总结，在 ACM 上发表文章提出 BASE 理论，BASE 理论是对 CAP 理论的延伸，核心思想是即使无法做到强一致性（Strong Consistency，<strong>CAP 的一致性就是强一致性</strong>），但应用可以采用适合的方式达到最终一致性（Eventual Consitency）。</p><ul><li><strong>基本可用(Basically Available)：</strong> 基本可用是指分布式系统在出现故障的时候，允许损失部分可用性，即保证核心可用。电商大促时，为了应对访问量激增，部分用户可能会被引导到降级页面，服务层也可能只提供降级服务。这就是损失部分可用性的体现。</li><li><strong>软状态(Soft State)：</strong> 软状态是指允许系统存在中间状态，而该中间状态不会影响系统整体可用性。分布式存储中一般一份数据至少会有三个副本，允许不同节点间副本同步的延时就是软状态的体现。MySQL Replication 的异步复制也是一种体现。</li><li><strong>最终一致性(Eventual Consistency)：</strong> 最终一致性是指系统中的所有数据副本经过一定时间后，最终能够达到一致的状态。弱一致性和强一致性相反，最终一致性是弱一致性的一种特殊情况。</li></ul><h2 id="ACID-和-BASE-的区别与联系"><a href="#ACID-和-BASE-的区别与联系" class="headerlink" title="ACID 和 BASE 的区别与联系"></a>ACID 和 BASE 的区别与联系</h2><p>ACID 是传统数据库常用的设计理念，追求强一致性模型。BASE 支持的是大型分布式系统，提出通过牺牲强一致性获得高可用性。</p><p>ACID 和 BASE 代表了两种截然相反的设计哲学，在分布式系统设计的场景中，系统组件对一致性要求是不同的，因此 ACID 和 BASE 又会结合使用。</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务的缺点</title>
      <link href="/2019/11/20/005.%5B%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%BC%BA%E7%82%B9/"/>
      <url>/2019/11/20/005.%5B%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%BC%BA%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="微服务的缺点"><a href="#微服务的缺点" class="headerlink" title="微服务的缺点"></a>微服务的缺点</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>就像 Fred Brooks 大约在 30 年前写的《人月神话》中说的，没有银弹。与其他技术一样，微服务架构模式也存在着缺点。其中一个缺点就是名称本身。微服务这个术语的重点过多偏向于服务的规模。事实上，有些开发者主张构建极细粒度的 10 至 100 LOC（代码行） 服务，虽然这对于小型服务可能比较好，但重要的是要记住，小型服务只是一种手段，而不是主要目标。微服务的目标在于充分分解应用程序以方便应用敏捷开发和部署。</p><p>微服务另一个主要缺点是由于微服务是一个分布式系统，其使得整体变得复杂。开发者需要选择和实现基于消息或者 RPC 的进程间通信机制。此外，由于目标请求可能很慢或者不可用，他们必须要编写代码来处理局部故障。虽然这些并不是很复杂、高深，但模块间通过语言级方法/过程调用相互调用，这比单体应用要复杂得多。</p><p>微服务的另一个挑战是分区数据库架构。更新多个业务实体的业务事务是相当普遍的。这些事务在单体应用中的实现显得微不足道，因为单体只存在一个单独的数据库。在基于微服务的应用程序中，您需要更新不同服务所用的数据库。通常不会选择分布式事务，不仅仅是因为 <strong>CAP 定理</strong>。他们根本不支持如今高度可扩展的 NoSQL 数据库和消息代理。您最后不得不使用基于最终一致性的方法，这对于开发人员来说更具挑战性。</p><p>测试微服务应用程序也很复杂。例如，使用现代框架如 Spring Boot，只需要编写一个测试类来启动一个单体 web 应用程序并测试其 REST API。相比之下，一个类似的测试类对于微服务来说需要启动该服务及其所依赖的所有服务，或者至少为这些服务配置存根。再次声明，虽然这不是一件高深的事情，但不要低估了这样做的复杂性。</p><p>微服务架构模式的另一个主要挑战是实现了跨越多服务变更。例如，我们假设您正在实现一个变更服务 A、服务 B 和 服务 C 的需求，其中 A 依赖于 B，且 B 依赖于 C。在单体应用程序中，您可以简单地修改相应的模块、整合变更并一次性部署他们。相反，在微服务中您需要仔细规划和协调出现的变更至每个服务。例如，您需要更新服务 C，然后更新服务 B，最后更新服务 A。幸运的是，大多数变更只会影响一个服务，需要协调的多服务变更相对较少。</p><p>部署基于微服务的应用程序也是相当复杂的。一个单体应用可以很容易地部署到基于传统负载均衡器的一组相同服务器上。每个应用程序实例都配置有基础设施服务的位置（主机和端口），比如数据库和消息代理。相比之下，微服务应用程序通常由大量的服务组成。例如，据 Adrian Cockcroft 了解到，Hailo 拥有 160 个不同的服务，Netflix 拥有的服务超过 600 个。</p><p>每个服务都有多个运行时实例。还有更多的移动部件需要配置、部署、扩展和监控。此外，您还需要实现服务发现机制，使得服务能够发现需要与之通信的任何其他服务的位置（主机和端口）。比较传统麻烦的基于票据（ticket-based）和手动的操作方式无法扩展到如此复杂程度。因此，要成功部署微服务应用程序，需要求开发人员能高度控制部署方式和高度自动化。</p><p>一种自动化方式是使用现成的平台即服务（PaaS），如 Cloud Foundry。PaaS 为开发人员提供了一种简单的方式来部署和管理他们的微服务。它让开发人员避开了诸如采购和配置 IT 资源等烦恼。同时，配置 PaaS 的系统人员和网络专业人员可以确保达到最佳实践以落实公司策略。</p><p>自动化微服务部署的另一个方式是开发自己的 PaaS。一个普遍的起点是使用集群方案，如 Kubernetes，与 Docker 等容器技术相结合。</p><h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><p>构建复杂的微服务应用程序本质上是困难的。单体架构模式只适用于简单、轻量级的应用程序，如果您使用它来构建复杂应用，您最终会陷入痛苦的境地。微服务架构模式是复杂、持续发展应用的一个更好的选择。尽管它存在着缺点和实现挑战。</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务的优点</title>
      <link href="/2019/11/20/004.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BC%98%E7%82%B9/"/>
      <url>/2019/11/20/004.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BC%98%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="微服务的优点"><a href="#微服务的优点" class="headerlink" title="微服务的优点"></a>微服务的优点</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>微服务架构模式有许多非常好的地方。</p><p>第一，它解决了复杂问题。它把可能会变得庞大的单体应用程序分解成一套服务。虽然功能数量不变，但是应用程序已经被分解成可管理的块或者服务。每个服务都有一个明确定义边界的方式，如远程过程调用（RPC）驱动或消息驱动 API。微服务架构模式强制一定程度的模块化，实际上，使用单体代码来实现是极其困难的。因此，使用微服务架构模式，个体服务能被更快地开发，并更容易理解与维护。</p><p>第二，这种架构使得每个服务都可以由一个团队独立专注开发。开发者可以自由选择任何符合服务 API 契约的技术。当然，更多的组织是希望通过技术选型限制来避免完全混乱的状态。然而，这种自由意味着开发人员不再有可能在这种自由的新项目开始时使用过时的技术。当编写一个新服务时，他们可以选择当前的技术。此外，由于服务较小，使用当前技术重写旧服务将变得更加可行。</p><p>第三，微服务架构模式可以实现每个微服务独立部署。开发人员根本不需要去协调部署本地变更到服务。这些变更一经测试即可立即部署。比如，UI 团队可以执行 A|B 测试，并快速迭代 UI 变更。微服务架构模式使得持续部署成为可能。</p><p>最后，微服务架构模式使得每个服务能够独立扩展。您可以仅部署满足每个服务的容量和可用性约束的实例数目。此外，您可以使用与服务资源要求最匹配的硬件。例如，您可以在 EC2 Compute Optimized 实例上部署一个 CPU 密集型图像处理服务，并且在 EC2 Memory-optimized 实例上部署一个内存数据库服务。</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务解决复杂问题</title>
      <link href="/2019/11/20/003.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%A7%A3%E5%86%B3%E5%A4%8D%E6%9D%82%E9%97%AE%E9%A2%98/"/>
      <url>/2019/11/20/003.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%A7%A3%E5%86%B3%E5%A4%8D%E6%9D%82%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="微服务解决复杂问题"><a href="#微服务解决复杂问题" class="headerlink" title="微服务解决复杂问题"></a>微服务解决复杂问题</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>许多如 Amazon、 eBay 和 Netflix 这样的组织，已经采用现在所谓的微服务架构模式解决了这个问题，而不是构建一个臃肿的单体应用。它的思路是将应用程序分解成一套较小的互连服务。一个服务通常实现了一组不同的特性或功能，例如订单管理、客户管理等。每一个微服务都是一个迷你应用，它自己的六边形架构包括了业务逻辑以及多个适配器。</p><p>一些微服务会暴露一个供其他微服务或应用客户端消费的 API。其他微服务可能实现了一个 web UI。在运行时，每个实例通常是一个云虚拟机 (virtual machine， VM) 或者一个 Docker 容器。</p><p>例如，前面描述的系统可能分解成如下图（一个单体应用分解成微服务) 所示：</p><p><img src="/weifuwu/858f9ae6c861c8c93cd5379be54f9fc1.png" alt></p><p>应用程序的每个功能区域现在都由自己的微服务实现。此外，Web 应用程序被划分为一组更简单的 Web 应用程序。例如，以我们的出租车为例，一个是乘客的应用，一个是司机的应用。这使得它更容易地为特定的用户、司机、设备或者专门的用例部署不同的场景。每个后端服务暴露一个 REST API，大部分服务消费的 API 由其他服务提供。例如， Driver Management 使用了 Notification 服务器来通知一个可用司机一个可选路程。UI 服务调用了其他服务来渲染页面。服务也可以使用异步、基于消息的通信。</p><p>一些 REST API 也暴露给移动端应用以供司机和乘客使用。然而，应用不能直接访问后端服务。相反，他们之间的通信是由一个称为 API 网关 (API Gateway) 的中介负责。 API 网关负责负载均衡、缓存、访问控制、 API 计量和监控， 可以通过使用 NGINX 来实现。</p><p>开发和交付中的伸缩立方：</p><p><img src="/weifuwu/0714fcab4f6d5951014e5613657c8289.png" alt></p><p>微服务架构模式相当于此伸缩立方的 Y 轴坐标，此立方是一个来自《架构即未来》 的三维伸缩模型。另外两个坐标轴是由运行多个相同应用程序副本的负载均衡器组成的X 轴坐标和 Z 轴坐标（或数据分区) ，其中请求的属性（例如，一行记录的主键或者客户标识) 用于将请求路由到特定的服务器。</p><p>在运行时，X 坐标轴上运行着服务的多个实例，每个服务配合负载均衡器以满足吞吐量和可用性。某些应用程序也有可能使用 Z 坐标轴来进行分区服务。下图展示了如何用 Docker 将 Trip Management 服务部署到 Amazon EC2 上运行。</p><p>使用 Docker 部署 Trip Management 服务：</p><p><img src="/weifuwu/ca6ddafaa8b506ae4d45dde53ee5efb6.png" alt></p><p>在运行时，Trip Management 服务由多个服务实例组成，每个服务实例是一个 Docker容器。为了实现高可用，容器是在多个云虚拟机上运行的。服务实例的之前是一个类似 NGINX 的负载均衡器，用于跨实例分发请求。负载均衡器也可以处理其他问题，如缓存、访问控制、API 度量和监控。</p><p>微服务架构模式明显影响到了应用程序与数据库之间的关系。与其他共享单个数据库模式 (schema) 服务有所不同， 其每一个服务都有自己的数据库模式。一方面，这种做法与企业级数据库数据模型的想法相背，此外，它经常导致部分数据冗余。然而，如果您想从微服务中受益，每一个服务都应该有自己的数据库模式。因为它能实现松耦合。下图展示了数据库架构示例应用程序。</p><p>每个服务都拥有各自的数据库。而且，服务可以使用一种最适合其需求、号称多语言持久架构 （polyglot persistence architecture )  的数据库。例如，DriverManagement，要找到与潜在乘客接近的司机，就必须使用支持高效地理查询的数据库。</p><p>打车应用的数据库架构：</p><p><img src="/weifuwu/384781ccf56d3057df5acd198e8d1f3d.png" alt></p><p>从表面上看，微服务架构模式类似于 SOA。微服务是由一组服务组成。然而，换另一种方式去思考微服务架构模式，它是没有商业化的 SOA，没有集成 Web 服务规范 (WS-*) 和企业服务总线 (Enterprise Service Bus， ESB) 。基于微服务的应用支持更简单、轻量级的协议，例如，REST，而不是 WS-*。他们也尽量避免使用 ESB，而是实现微服务本身具有类似 ESB 的功能。微服务架构也拒绝了 SOA 的其他部分，例如，数据访问规范模式概念。</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>走向单体地狱</title>
      <link href="/2019/11/20/002.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E8%B5%B0%E5%90%91%E5%8D%95%E4%BD%93%E5%9C%B0%E7%8B%B1/"/>
      <url>/2019/11/20/002.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E8%B5%B0%E5%90%91%E5%8D%95%E4%BD%93%E5%9C%B0%E7%8B%B1/</url>
      
        <content type="html"><![CDATA[<h1 id="走向单体地狱"><a href="#走向单体地狱" class="headerlink" title="走向单体地狱"></a>走向单体地狱</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>不幸的是，这种简单的方法有很大的局限性。成功的应用有一个趋势，随着时间推移而变得越来越臃肿。您的开发团队在每个冲刺阶段都要实现更多的用户需求，这意味着需要添加了许多行代码。几年之后，小而简单的应用将会逐渐成长成一个庞大的单体。为了给出一个极端示例，我最近和一位开发者做了交谈，他正在编写一个工具，该工具用于从他们的数百万行代码 (lines of code， LOC) 应用中分析出数千个 JAR 之间的依赖。我相信这是大量开发者在多年齐心协力下创造出了这样的野兽。</p><p>一旦您的应用程序成为了一个庞大、复杂的单体，您的开发组织可能会陷入了一个痛苦的境地，敏捷开发和交付的任何一次尝试都将原地徘徊。一个主要问题是应用程序实在非常复杂。对于任何一个开发人员来说显得过于庞大，这是可以理解的。最终，正确修复 bug 和实现新功能变得非常困难而耗时。此外， 这种趋势就像是往下的螺旋。如果基本代码都令人难以理解，那么改变也不会变得正确，您最终得到的将是一个巨大且不可思议的大泥球。</p><p>应用程序的规模也将减缓发展。应用程序越大，启动时间越长。我调查过开发者们的单体应用的大小和性能，一些报告的启动时间为 12 分钟。我也听说过应用程序启动需要 40 分钟以上的怪事。如果开发人员经常要重启应用服务器，那么很大一部分时间都是在等待中度过，他们的生产力将受到限制。</p><p>另一个大问题是，复杂的单体应用本身就是持续部署的障碍。如今， SaaS 应用发展到了可以每天多次将变更推送到生产环境中。这对于复杂的单体来说非常困难，因为您需要重新部署整个应用程序才能更新其中任何一部分。 联想到我之前提到的漫长启动时间，这也不会是什么好事。此外，因变更所产生的影响通常不是很明确，您很可能需要做大量的手工测试。因此，持续部署是不可能做到的。</p><p>当不同模块存在资源需求冲突时，单体应用可能难以扩展。例如，一个模块可能会执行 CPU 密集型图像处理逻辑，理想情况下是部署在 Amazon EC2 Compute Optimized 实例中。另一个模块可能是一个内存数据库，最适合部署到 EC2 Memory-optimized 实例。然而， 由于这些模块被部署在一起，您必须在硬件选择上做出妥协。</p><p>单体应用的另一个问题是可靠性。因为所有模块都运行在同一进程中。任何模块的一个 bug，比如内存泄漏，可能会拖垮整个进程。此外，由于应用程序的所有实例都是相同的，该错误将影响到整个应用的可用性。</p><p>最后但同样重要，单体应用使得采用新框架和语言变得非常困难。例如，我们假设您有 200 万行代码使用了 XYZ 框架编写。如果使用较新的 ABC 框架来重写整个应用，这将非常昂贵（在时间和成本方面），即使框架非常好。因此，这对于采用新技术是一个非常大的障碍。在项目开始时， 您无论选择何种新技术都会感到困扰。</p><p>总结一下：您有一个成功的关键业务应用程序，它已经发展成为一个只有少数开发人员（如果有的话）能够理解的巨大单体。它使用了过时、非生产性技术编写，这使得招聘优秀开发人员变得非常困难。应用程序变得难以扩展，不可靠。因此敏捷开发和应用交付是不可能的。</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>构建单体应用模型</title>
      <link href="/2019/11/20/001.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E6%9E%84%E5%BB%BA%E5%8D%95%E4%BD%93%E5%BA%94%E7%94%A8%E6%A8%A1%E5%9E%8B/"/>
      <url>/2019/11/20/001.%E4%BB%80%E4%B9%88%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1-%E6%9E%84%E5%BB%BA%E5%8D%95%E4%BD%93%E5%BA%94%E7%94%A8%E6%A8%A1%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="构建单体应用模型"><a href="#构建单体应用模型" class="headerlink" title="构建单体应用模型"></a>构建单体应用模型</h1><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>我们假设，您开始开发一个打车应用，打算与 <code>Uber</code> 和 <code>Hailo</code> 竞争。经过初步交流和需求收集，您开始手动或者使用类似 <code>Rails</code>、<code>Spring Boot</code>、<code>Play</code> 或者 <code>Maven</code> 等平台来生成一个新项目。</p><p>该新应用是一个模块化的六边形架构，如下图（一个简单的打车应用）所示：</p><p><img src="/weifuwu/89d9bfed11ff35943269b24b23b866b1.png" alt></p><p>该应用的核心是由模块实现的业务逻辑，它定义了服务、领域对象和事件。围绕核心的是与外部世界接口对接的适配器。适配器示例包括数据库访问组件、生产和消费消息的消息组件和暴露了 API 或实现了一个 UI 的 web 组件。</p><p>尽管有一个逻辑模块化架构，但应用程序被作为一个单体进行打包和部署。实际格式取决于应用程序的语言和框架。例如，许多 Java 应用程序被打包成 WAR 文件部署在如 Tomcat 或者 Jetty 之类的应用服务器上。其他 Java 应用程序被打包成自包含 (self-contained) 的可执行 JAR。类似地， Rails 和 Node.js 应用程序被打包为有目录层次的结构</p><p>以这种风格编写的应用是很常见的。他们很容易开发，因为我们的 IDE 和其他工具就是专注于构建单体应用。这些应用程序也很容易测试， 您可以通过简单地启动并使用如 Selenium 测试包来测试 UI 以轻松地实现端到端 (end-to-end) 测试。单体应用同样易于部署。您只需拷贝打包好的应用程序到服务器上。您还可以通过运行多个副本和结合负载均衡器来扩展应用。在项目的早期阶段，它可以良好运作。</p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shiro认证</title>
      <link href="/2019/09/28/shiro%E8%AE%A4%E8%AF%81/"/>
      <url>/2019/09/28/shiro%E8%AE%A4%E8%AF%81/</url>
      
        <content type="html"><![CDATA[<h1 id="shiro-认证"><a href="#shiro-认证" class="headerlink" title="shiro 认证"></a>shiro 认证</h1><h2 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1 基本概念"></a>1 基本概念</h2><h3 id="1-1-身份验证"><a href="#1-1-身份验证" class="headerlink" title="1.1 身份验证"></a>1.1 身份验证</h3><blockquote><p>即在应用中谁能证明他就是他本人。一般提供如他们的身份 ID 一些标识信息来 表明他就是他本人，如提供身份证，用户名/密码来证明。 在 shiro 中，用户需要提供 principals （身份）和 credentials（证明）给 shiro，从而应用能 验证用户身份：</p></blockquote><h3 id="1-2-principals"><a href="#1-2-principals" class="headerlink" title="1.2 principals"></a>1.2 principals</h3><blockquote><p>身份，即主体的标识属性，可以是任何东西，如用户名、邮箱等，唯一即可。 一个主体可以有多个 principals，但只有一个 Primaryprincipals，一般是用户名/密码/手机号。</p></blockquote><h3 id="1-3-credentials"><a href="#1-3-credentials" class="headerlink" title="1.3 credentials"></a>1.3 credentials</h3><blockquote><p>证明/凭证，即只有主体知道的安全值，如密码/数字证书等。 最常见的 principals 和 credentials 组合就是用户名/密码了。接下来先进行一个基本的身 份认证。</p></blockquote><h2 id="2-认证流程"><a href="#2-认证流程" class="headerlink" title="2 认证流程"></a>2 认证流程</h2><blockquote><p><img src="/images/shiro%E8%AE%A4%E8%AF%81/20190928133723.jpg" alt></p></blockquote><h2 id="3-入门程序（用户登陆和退出）"><a href="#3-入门程序（用户登陆和退出）" class="headerlink" title="3 入门程序（用户登陆和退出）"></a>3 入门程序（用户登陆和退出）</h2><blockquote><h3 id="3-1-创建-java-工程"><a href="#3-1-创建-java-工程" class="headerlink" title="3.1 创建 java 工程"></a>3.1 创建 java 工程</h3><h3 id="3-2-加入相关-jar-包"><a href="#3-2-加入相关-jar-包" class="headerlink" title="3.2 加入相关 jar 包"></a>3.2 加入相关 jar 包</h3><blockquote><pre><code>commons-beanutils-1.9.2.jar commons-logging-1.2.jar unit-4.10.jar shiro-all-1.2.3.jar slf4j-api-1.7.7.jar log4j-1.2.17.jar slf4j-log4j12-1.7.5.jar</code></pre></blockquote><h3 id="3-3-log4j-properties-日志配置文件"><a href="#3-3-log4j-properties-日志配置文件" class="headerlink" title="3.3 log4j.properties 日志配置文件"></a>3.3 log4j.properties 日志配置文件</h3><blockquote><pre><code>log4j.rootLogger=debug, stdout log4j.appender.stdout=org.apache.log4j.ConsoleAppender log4j.appender.stdout.layout=org.apache.log4j.PatternLayout log4j.appender.stdout.layout.ConversionPattern=%d %p [%c] - %m %n</code></pre></blockquote><h3 id="3-4-配置-shiro-环境文件-shiro-ini"><a href="#3-4-配置-shiro-环境文件-shiro-ini" class="headerlink" title="3.4 配置 shiro 环境文件 shiro.ini"></a>3.4 配置 shiro 环境文件 shiro.ini</h3><p>通过 Shiro.ini 配置文件初始化 SecurityManager 环境。 </p><blockquote><pre><code>[users] zhangsan=1111 lisi=1111</code></pre></blockquote><h3 id="3-5-代码实现"><a href="#3-5-代码实现" class="headerlink" title="3.5 代码实现"></a>3.5 代码实现</h3><blockquote><pre><code>//用户登录和退出 @Test public void testAuthenticator(){     // 构建 SecurityManager 工厂，IniSecurityManagerFactory 可以 从 ini 文件中初始化 SecurityManager 环境     Factory&lt;SecurityManager&gt; factory = new IniSecurityManagerFactory(&quot;classpath:shiro.ini&quot;);     //通过工厂获得 SecurityManager 实例    SecurityManager securityManager = factory.getInstance();     //将 securityManager 设置到运行环境中     SecurityUtils.setSecurityManager(securityManager);     //获取 subject 实例     Subject subject = SecurityUtils.getSubject();     //创建用户名,密码身份验证     Token UsernamePasswordToken token = new UsernamePasswordToken(&quot;zhangsan&quot;, &quot;1111&quot;);     try {         //登录，即身份验证         subject.login(token);         } catch (AuthenticationException e) {              e.printStackTrace();              //身份认证失败         }     //断言用户已经登录     Assert.assertEquals(true, subject.isAuthenticated());     //退出     subject.logout(); }</code></pre></blockquote><h3 id="1-4-6-sessionManager"><a href="#1-4-6-sessionManager" class="headerlink" title="1.4.6 sessionManager"></a>1.4.6 sessionManager</h3></blockquote><h2 id="4-自定义-Realm"><a href="#4-自定义-Realm" class="headerlink" title="4 自定义 Realm"></a>4 自定义 Realm</h2><p>Shiro 默认使用自带的 IniRealm，IniRealm 从 ini 配置文件中读取用户的信息，大部分情 况下需要从系统的数据库中读取用户信息，所以需要自定义 realm。</p><blockquote><h3 id="4-1Realm-接口"><a href="#4-1Realm-接口" class="headerlink" title="4.1Realm 接口"></a>4.1Realm 接口</h3><blockquote><p><img src="/images/shiro%E8%AE%A4%E8%AF%81/20190928135215.jpg" alt><br>最基础的是 Realm 接口，CachingRealm 负责缓存处理，AuthenticationRealm 负责认证， AuthorizingRealm 负责授权，通常自定义的 realm 继承 AuthorizingRealm。</p></blockquote><h3 id="4-2-自定义-Realm-实现"><a href="#4-2-自定义-Realm-实现" class="headerlink" title="4.2 自定义 Realm 实现"></a>4.2 自定义 Realm 实现</h3><blockquote><pre><code> /**   *自定义  *Realm 实现   *@author 邹波   *@version 1.0   *@date 2016-1-21   */  public class UserRealm extends AuthorizingRealm {      @Override      public String getName() {          return &quot;UserRealm&quot;;     }     //用于认证     @Override     protected AuthenticationInfo doGetAuthenticationInfo( AuthenticationToken token) throws AuthenticationException {         //从 token 中获取身份信息         String username = (String)token.getPrincipal();         //根据用户名到数据库中取出用户信息 如果查询不到 返回 null         String password = &quot;1111&quot;;        //假如从数据库中获取密码为 1111         //返回认证信息         SimpleAuthenticationInfo simpleAuthenticationInfo = new SimpleAuthenticationInfo(username, password, this.getName());         return simpleAuthenticationInfo;     }     //用于授权    @Override     protected AuthorizationInfo doGetAuthorizationInfo( PrincipalCollection principals) {         return null;     } }</code></pre></blockquote><h3 id="4-3-配置-Realm"><a href="#4-3-配置-Realm" class="headerlink" title="4.3 配置 Realm"></a>4.3 配置 Realm</h3><p>需要在 shiro.ini 配置 realm 注入到 securityManager 中。 </p><blockquote><pre><code>[main] #自定义 realmuserRealm=cn.siggy.realm.UserRealm #将 realm 设置到 securityManager securityManager.realms=$userRealm</code></pre></blockquote><h3 id="4-4-测试"><a href="#4-4-测试" class="headerlink" title="4.4 测试"></a>4.4 测试</h3><p>同上一样</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> shiro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>shiro权限管理框架</title>
      <link href="/2019/09/28/shiro%E4%BB%8B%E7%BB%8D.1/"/>
      <url>/2019/09/28/shiro%E4%BB%8B%E7%BB%8D.1/</url>
      
        <content type="html"><![CDATA[<h2 id="1-shiro-介绍"><a href="#1-shiro-介绍" class="headerlink" title="1 shiro 介绍"></a>1 shiro 介绍</h2><h3 id="1-1-什么是shiro"><a href="#1-1-什么是shiro" class="headerlink" title="1.1 什么是shiro"></a>1.1 什么是shiro</h3><blockquote><p>ApacheShiro 是 Java 的一个安全框架。Shiro 可以非常容易的开发出足够好的应用，其不仅可以用在 JavaSE 环境，也可以用在 JavaEE 环境。Shiro 可以帮助我们完成：认证、 授权、加密、会话管理、与 Web 集成、缓存等。</p></blockquote><h3 id="1-2-为什么要学shiro"><a href="#1-2-为什么要学shiro" class="headerlink" title="1.2 为什么要学shiro"></a>1.2 为什么要学shiro</h3><blockquote><p>既然 shiro 将安全认证相关的功能抽取出来组成一个框架，使用 shiro 就可以非常快速的 完成认证、授权等功能的开发，降低系统成本。<br>shiro 使用广泛，shiro 可以运行在 web 应用，非 web 应用，集群分布式应用中越来越多 的用户开始使用 shiro。<br>java领域中springsecurity(原名Acegi)也是一个开源的权限管理框架，但是springsecurity 依赖 spring 运行，而 shiro 就相对独立，最主要是因为 shiro 使用简单、灵活，所以现在越来 越多的用户选择 shiro。</p></blockquote><h3 id="1-3-基本功能"><a href="#1-3-基本功能" class="headerlink" title="1.3 基本功能"></a>1.3 基本功能</h3><blockquote><p><img src="/images/shiro%E4%BB%8B%E7%BB%8D/20190928130257.jpg" alt></p><blockquote><h3 id="1-3-1-Authentication"><a href="#1-3-1-Authentication" class="headerlink" title="1.3.1 Authentication"></a>1.3.1 Authentication</h3><p>身份认证/登录，验证用户是不是拥有相应的身份；</p><h3 id="1-3-2-Authorization"><a href="#1-3-2-Authorization" class="headerlink" title="1.3.2 Authorization"></a>1.3.2 Authorization</h3><p>授权，即权限验证，验证某个已认证的用户是否拥有某个权限；即判断用 户是否能做事情，常见的如：验证某个用户是否拥有某个角色。或者细粒度的验证某个用 户对某个资源是否具有某个权限；</p><h3 id="1-3-3-SessionManager"><a href="#1-3-3-SessionManager" class="headerlink" title="1.3.3 SessionManager"></a>1.3.3 SessionManager</h3><p>会话管理，即用户登录后就是一次会话，在没有退出之前，它的所有信 息都在会话中；会话可以是普通 JavaSE 环境的，也可以是如 Web 环境的； Cryptography：加密，保护数据的安全性，如密码加密存储到数据库，而不是明文存储； WebSupport：Web 支持，可以非常容易的集成到 Web 环境； Caching：缓存，比如用户登录后，其用户信息、拥有的角色/权限不必每次去查，这样可以 提高效率； Concurrency：shiro 支持多线程应用的并发验证，即如在一个线程中开启另一个线程，能 把权限自动传播过去； Testing：提供测试支持； RunAs：允许一个用户假装为另一个用户（如果他们允许）的身份进行访问； RememberMe：记住我，这个是非常常见的功能，即一次登录后，下次再来的话不用登录 了。 Shiro 不会去维护用户、维护权限；这些需要我们自己去设计/提供；然后通过 相应的接口注入给 Shiro 即可。</p></blockquote></blockquote><h3 id="1-4-Shiro架构"><a href="#1-4-Shiro架构" class="headerlink" title="1.4 Shiro架构"></a>1.4 Shiro架构</h3><blockquote><p><img src="/images/shiro%E4%BB%8B%E7%BB%8D/20190928132015.jpg" alt></p><blockquote><h3 id="1-4-1-Subject"><a href="#1-4-1-Subject" class="headerlink" title="1.4.1 Subject"></a>1.4.1 Subject</h3><p>Subject 即主体，外部应用与 subject 进行交互，subject 记录了当前操作用户，将用户的 概念理解为当前操作的主体，可能是一个通过浏览器请求的用户，也可能是一个运行的程序。 Subject 在 shiro 中是一个接口，接口中定义了很多认证授相关的方法，外部程序通过 subject 进行认证授，而 subject 是通过 SecurityManager 安全管理器进行认证授权</p><h3 id="1-4-2-SecurityManager"><a href="#1-4-2-SecurityManager" class="headerlink" title="1.4.2 SecurityManager"></a>1.4.2 SecurityManager</h3><p>SecurityManager 即安全管理器，对全部的 subject 进行安全管理，它是 shiro 的核心， 负责对所有的 subject 进行安全管理。通过 SecurityManager 可以完成 subject 的认证、授权 等，实质上 SecurityManager 是通过 Authenticator 进行认证，通过 Authorizer 进行授权，通 过 SessionManager 进行会话管理等。 SecurityManager 是一个接口，继承了 Authenticator,Authorizer,SessionManager 这三个接 口。</p><h3 id="1-4-3-Authenticator"><a href="#1-4-3-Authenticator" class="headerlink" title="1.4.3 Authenticator"></a>1.4.3 Authenticator</h3><p>Authenticator 即认证器，对用户身份进行认证，Authenticator 是一个接口，shiro 提供 ModularRealmAuthenticator 实现类，通过 ModularRealmAuthenticator 基本上可以满足大多数<br>需求，也可以自定义认证器。</p><h3 id="1-4-4-Authorizer"><a href="#1-4-4-Authorizer" class="headerlink" title="1.4.4 Authorizer"></a>1.4.4 Authorizer</h3><p>Authorizer 即授权器，用户通过认证器认证通过，在访问功能时需要通过授权器判断用 户是否有此功能的操作权限。</p><h3 id="1-4-5-realm"><a href="#1-4-5-realm" class="headerlink" title="1.4.5 realm"></a>1.4.5 realm</h3><p>Realm 即领域，相当于 datasource 数据源， securityManager 进行安全认证需要通过 Realm 获取用户权限数据，比如：如果用户身份数据在数据库那么 realm 就需要从数据库获取用户 身份信息。<br>注意：不要把 realm 理解成只是从数据源取数据，在 realm 中还有认证授权校验的相关 的代码。</p><h3 id="1-4-6-sessionManager"><a href="#1-4-6-sessionManager" class="headerlink" title="1.4.6 sessionManager"></a>1.4.6 sessionManager</h3><p>sessionManager 即会话管理， shiro 框架定义了一套会话管理，它不依赖 web 容器的 session， 所以 shiro 可以使用在非 web 应用上，也可以将分布式应用的会话集中在一点管理，此特性 可使它实现单点登录。</p><h3 id="1-4-7-SessionDAO"><a href="#1-4-7-SessionDAO" class="headerlink" title="1.4.7 SessionDAO"></a>1.4.7 SessionDAO</h3><p>SessionDAO 即会话 dao，是对 session 会话操作的一套接口，比如要将 session 存储到数据库， 可以通过 jdbc 将会话存储到数据库。</p><h3 id="1-4-8-CacheManager"><a href="#1-4-8-CacheManager" class="headerlink" title="1.4.8 CacheManager"></a>1.4.8 CacheManager</h3><p>CacheManager 即缓存管理，将用户权限数据存储在缓存，这样可以提高性能。</p><h3 id="1-4-9-Cryptography"><a href="#1-4-9-Cryptography" class="headerlink" title="1.4.9 Cryptography"></a>1.4.9 Cryptography</h3><p>Cryptography 即密码管理，shiro 提供了一套加密/解密的组件，方便开发。比如提供常 用的散列、加/解密等功能。</p></blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> shiro </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shiro </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客开发-后台</title>
      <link href="/2019/09/22/blogBackStage/"/>
      <url>/2019/09/22/blogBackStage/</url>
      
        <content type="html"><![CDATA[<h2 id="一、我的第一个博客"><a href="#一、我的第一个博客" class="headerlink" title="一、我的第一个博客"></a>一、我的第一个博客</h2><h3 id="预览图"><a href="#预览图" class="headerlink" title="预览图"></a>预览图</h3><p><img src="/images/backStage/20191102174349.jpg" alt="后台主页"><br><img src="/images/backStage/20191102174424.jpg" alt="写博客"><br><img src="/images/backStage/20191102174437.jpg" alt="博客信息管理"><br><img src="/images/backStage/20191102174449.jpg" alt="博客类别管理"><br><img src="/images/backStage/20191102174500.jpg" alt="评论管理"><br><img src="/images/backStage/20191102174513.jpg" alt="上传图片"><br><img src="/images/backStage/20191102174525.jpg" alt="图片信息管理"><br><img src="/images/backStage/20191102174537.jpg" alt="相册信息管理"><br><img src="/images/backStage/20191102174719.jpg" alt="轮播图上传管理"><br><img src="/images/backStage/20191102174734.jpg" alt="轮播图信息管理"><br><img src="/images/backStage/20191102174744.jpg" alt="留言管理"><br><img src="/images/backStage/20191102174810.jpg" alt="友链管理"><br><img src="/images/backStage/20191102174822.jpg" alt="用户管理"></p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>个人博客开发-前台</title>
      <link href="/2019/09/22/blogFrontDesk/"/>
      <url>/2019/09/22/blogFrontDesk/</url>
      
        <content type="html"><![CDATA[<h2 id="一、我的第一个博客"><a href="#一、我的第一个博客" class="headerlink" title="一、我的第一个博客"></a>一、我的第一个博客</h2><h3 id="预览图"><a href="#预览图" class="headerlink" title="预览图"></a>预览图</h3><p><img src="/images/frontDesk/20191102173519.jpg" alt="主页"><br><img src="/images/frontDesk/20191102173638.jpg" alt="文章页"><br><img src="/images/frontDesk/20191102173718.jpg" alt="文章详情页"><br><img src="/images/frontDesk/20191102173742.jpg" alt="相册页"><br><img src="/images/frontDesk/20191102173821.jpg" alt="相册详情页"><br><img src="/images/frontDesk/20191102173857.jpg" alt="音乐"><br><img src="/images/frontDesk/20191102173923.jpg" alt="留言页"><br><img src="/images/frontDesk/20191102173946.jpg" alt="关于我"><br><img src="/images/frontDesk/20191102174028.jpg" alt="个人信息"><br><img src="/images/frontDesk/20191102174058.jpg" alt="登录"><br><img src="/images/frontDesk/20191102174113.jpg" alt="注册"><br><img src="/images/frontDesk/20191102174259.jpg" alt="修改密码"></p>]]></content>
      
      
      <categories>
          
          <category> 个人博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
